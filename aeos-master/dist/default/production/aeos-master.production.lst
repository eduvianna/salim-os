

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 06 18:43:40 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           ; Version 2.10
    77                           ; Generated 31/07/2019 GMT
    78                           ; 
    79                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F4520 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     
   111 ;;Lcd_Cmd@a	offset=-1 (param)
   112 ;;Lcd_Port@a	offset=-1 (param)
   113 ;;___wmul@product	offset	0
   114 ;;___wmul@multiplier	offset=-2 (param)
   115 ;;___wmul@multiplicand	offset=-4 (param)
   116 ;;task_lcd@s	offset	0
   117 ;;task_lcd@percentualBateria	offset	16
   118 ;;task_lcd@tensao	offset	20
   119 ;;task_lcd@tensaoBateria	offset	24
   120 ;;sprintf@fval	offset	0
   121 ;;sprintf@tmpval	offset	4
   122 ;;sprintf@val	offset	8
   123 ;;sprintf@prec	offset	12
   124 ;;sprintf@width	offset	14
   125 ;;sprintf@flag	offset	16
   126 ;;sprintf@eexp	offset	18
   127 ;;sprintf@ap	offset	20
   128 ;;sprintf@c	offset	22
   129 ;;sprintf@sp	offset=-3 (param)
   130 ;;sprintf@f	offset=-5 (param)
   131 ;;scale@scl	offset=-1 (param)
   132 ;;___awdiv@quotient	offset	0
   133 ;;___awdiv@sign	offset	2
   134 ;;___awdiv@counter	offset	3
   135 ;;___awdiv@dividend	offset=-2 (param)
   136 ;;___awdiv@divisor	offset=-4 (param)
   137 ;;_isdigit$1701	offset	0
   138 ;;isdigit@c	offset=-1 (param)
   139 ;;fround@prec	offset=-1 (param)
   140 ;;___lbmod@rem	offset	0
   141 ;;___lbmod@counter	offset	1
   142 ;;___lbmod@dividend	offset=-1 (param)
   143 ;;___lbmod@divisor	offset=-2 (param)
   144 ;;___lbdiv@quotient	offset	0
   145 ;;___lbdiv@counter	offset	1
   146 ;;___lbdiv@dividend	offset=-1 (param)
   147 ;;___lbdiv@divisor	offset=-2 (param)
   148 ;;___flmul@prod	offset	0
   149 ;;___flmul@grs	offset	4
   150 ;;___flmul@temp	offset	8
   151 ;;___flmul@bexp	offset	10
   152 ;;___flmul@aexp	offset	11
   153 ;;___flmul@sign	offset	12
   154 ;;___flmul@b	offset=-4 (param)
   155 ;;___flmul@a	offset=-8 (param)
   156 ;;__tdiv_to_l_@quot	offset	0
   157 ;;__tdiv_to_l_@exp1	offset	4
   158 ;;__tdiv_to_l_@cntr	offset	5
   159 ;;__tdiv_to_l_@f1	offset=-4 (param)
   160 ;;__tdiv_to_l_@f2	offset=-8 (param)
   161 ;;__div_to_l_@quot	offset	0
   162 ;;__div_to_l_@exp1	offset	4
   163 ;;__div_to_l_@cntr	offset	5
   164 ;;__div_to_l_@f1	offset=-4 (param)
   165 ;;__div_to_l_@f2	offset=-8 (param)
   166 ;;___xxtofl@arg	offset	0
   167 ;;___xxtofl@exp	offset	4
   168 ;;___xxtofl@sign	offset=-1 (param)
   169 ;;___xxtofl@val	offset=-5 (param)
   170 ;;___wmul@product	offset	0
   171 ;;___wmul@multiplier	offset=-2 (param)
   172 ;;___wmul@multiplicand	offset=-4 (param)
   173 ;;___llmod@counter	offset	0
   174 ;;___llmod@dividend	offset=-4 (param)
   175 ;;___llmod@divisor	offset=-8 (param)
   176 ;;___lldiv@quotient	offset	0
   177 ;;___lldiv@counter	offset	4
   178 ;;___lldiv@dividend	offset=-4 (param)
   179 ;;___lldiv@divisor	offset=-8 (param)
   180 ;;___fltol@exp1	offset	0
   181 ;;___fltol@sign1	offset	1
   182 ;;___fltol@f1	offset=-4 (param)
   183 ;;___flsub@b	offset=-4 (param)
   184 ;;___flsub@a	offset=-8 (param)
   185 ;;___fladd@grs	offset	0
   186 ;;___fladd@bexp	offset	1
   187 ;;___fladd@aexp	offset	2
   188 ;;___fladd@signs	offset	3
   189 ;;___fladd@b	offset=-4 (param)
   190 ;;___fladd@a	offset=-8 (param)
   191 ;;___flneg@f1	offset=-4 (param)
   192 ;;___flge@ff1	offset=-4 (param)
   193 ;;___flge@ff2	offset=-8 (param)
   194 ;;___fleq@ff1	offset=-4 (param)
   195 ;;___fleq@ff2	offset=-8 (param)
   196 ;;sem_wait@sem	offset=-2 (param)
   197 ;;sem_post@sem	offset=-2 (param)
   198 ;;pipe_write@p	offset=-2 (param)
   199 ;;pipe_write@data	offset=-3 (param)
   200 ;;dispatcher@state	offset=-1 (param)
   201 ;;rr_scheduler@next_task	offset	0
   202 ;;___awmod@sign	offset	0
   203 ;;___awmod@counter	offset	1
   204 ;;___awmod@dividend	offset=-2 (param)
   205 ;;___awmod@divisor	offset=-4 (param)
   206 ;;___fldiv@grs	offset	0
   207 ;;___fldiv@rem	offset	4
   208 ;;___fldiv@new_exp	offset	8
   209 ;;___fldiv@aexp	offset	10
   210 ;;___fldiv@bexp	offset	11
   211 ;;___fldiv@sign	offset	12
   212 ;;___fldiv@b	offset=-4 (param)
   213 ;;___fldiv@a	offset=-8 (param)
   214 ;;MsDelay@j	offset	0
   215 ;;MsDelay@i	offset	2
   216 ;;MsDelay@itime	offset=-2 (param)
   217 ;;LerADC@temp	offset	0
   218 ;;Lcd_Write_String@i	offset	0
   219 ;;Lcd_Write_String@a	offset=-2 (param)
   220 ;;Lcd_Write_Char@y	offset	0
   221 ;;Lcd_Write_Char@temp	offset	1
   222 ;;Lcd_Write_Char@a	offset=-1 (param)
   223 ;;Lcd_Set_Cursor@temp	offset	0
   224 ;;Lcd_Set_Cursor@y	offset	1
   225 ;;Lcd_Set_Cursor@z	offset	2
   226 ;;Lcd_Set_Cursor@a	offset=-1 (param)
   227 ;;Lcd_Set_Cursor@b	offset=-2 (param)
   228 ;;Lcd_Cmd@a	offset=-1 (param)
   229 ;;Lcd_Port@a	offset=-1 (param)
   230 ;;pipe_read@p	offset=-2 (param)
   231 ;;pipe_read@data	offset=-4 (param)
   232 ;;dispatcher@state	offset=-1 (param)
   233 ;;rr_scheduler@next_task	offset	0
   234 ;;___awmod@sign	offset	0
   235 ;;___awmod@counter	offset	1
   236 ;;___awmod@dividend	offset=-2 (param)
   237 ;;___awmod@divisor	offset=-4 (param)
   238                           
   239                           	psect	idataCOMRAM
   240  00662C                     __pidataCOMRAM:
   241                           	opt callstack 0
   242                           
   243                           ;initializer for _quantum
   244  00662C  0008               	dw	8
   245                           
   246                           	psect	smallconst
   247  000600                     __psmallconst:
   248                           	opt callstack 0
   249  000600  00                 	db	0
   250  000601                     __powers_:
   251                           	opt callstack 0
   252  000601  0000               	dw	0
   253  000603  3F80               	dw	16256
   254  000605  0000               	dw	0
   255  000607  4120               	dw	16672
   256  000609  0000               	dw	0
   257  00060B  42C8               	dw	17096
   258  00060D  0000               	dw	0
   259  00060F  447A               	dw	17530
   260  000611  4000               	dw	16384
   261  000613  461C               	dw	17948
   262  000615  5000               	dw	20480
   263  000617  47C3               	dw	18371
   264  000619  2400               	dw	9216
   265  00061B  4974               	dw	18804
   266  00061D  9680               	dw	38528
   267  00061F  4B18               	dw	19224
   268  000621  BC20               	dw	48160
   269  000623  4CBE               	dw	19646
   270  000625  6B28               	dw	27432
   271  000627  4E6E               	dw	20078
   272  000629  02F9               	dw	761
   273  00062B  5015               	dw	20501
   274  00062D  78EC               	dw	30956
   275  00062F  60AD               	dw	24749
   276  000631  F2CA               	dw	62154
   277  000633  7149               	dw	29001
   278  000635                     __end_of__powers_:
   279                           	opt callstack 0
   280  000635                     __npowers_:
   281                           	opt callstack 0
   282  000635  0000               	dw	0
   283  000637  3F80               	dw	16256
   284  000639  CCCD               	dw	52429
   285  00063B  3DCC               	dw	15820
   286  00063D  D70A               	dw	55050
   287  00063F  3C23               	dw	15395
   288  000641  126F               	dw	4719
   289  000643  3A83               	dw	14979
   290  000645  B717               	dw	46871
   291  000647  38D1               	dw	14545
   292  000649  C5AC               	dw	50604
   293  00064B  3727               	dw	14119
   294  00064D  37BD               	dw	14269
   295  00064F  3586               	dw	13702
   296  000651  BF95               	dw	49045
   297  000653  33D6               	dw	13270
   298  000655  CC77               	dw	52343
   299  000657  322B               	dw	12843
   300  000659  705F               	dw	28767
   301  00065B  3089               	dw	12425
   302  00065D  E6FF               	dw	59135
   303  00065F  2EDB               	dw	11995
   304  000661  E508               	dw	58632
   305  000663  1E3C               	dw	7740
   306  000665  4260               	dw	16992
   307  000667  0DA2               	dw	3490
   308  000669                     __end_of__npowers_:
   309                           	opt callstack 0
   310  000669                     _dpowers:
   311                           	opt callstack 0
   312  000669  0001               	dw	1
   313  00066B  0000               	dw	0
   314  00066D  000A               	dw	10
   315  00066F  0000               	dw	0
   316  000671  0064               	dw	100
   317  000673  0000               	dw	0
   318  000675  03E8               	dw	1000
   319  000677  0000               	dw	0
   320  000679  2710               	dw	10000
   321  00067B  0000               	dw	0
   322  00067D  86A0               	dw	34464
   323  00067F  0001               	dw	1
   324  000681  4240               	dw	16960
   325  000683  000F               	dw	15
   326  000685  9680               	dw	38528
   327  000687  0098               	dw	152
   328  000689  E100               	dw	57600
   329  00068B  05F5               	dw	1525
   330  00068D  CA00               	dw	51712
   331  00068F  3B9A               	dw	15258
   332  000691                     __end_of_dpowers:
   333                           	opt callstack 0
   334  0000                     _TOS	set	4093
   335  0000                     _PORTCbits	set	3970
   336  0000                     _TRISCbits	set	3988
   337  0000                     _TRISBbits	set	3987
   338  0000                     _TRISDbits	set	3989
   339  0000                     _ADRESL	set	4035
   340  0000                     _ADRESH	set	4036
   341  0000                     _ADCON0bits	set	4034
   342  0000                     _ADCON2	set	4032
   343  0000                     _ADCON1	set	4033
   344  0000                     _ADCON0	set	4034
   345  0000                     _TRISAbits	set	3986
   346  0000                     _TMR0L	set	4054
   347  0000                     _STKPTR	set	4092
   348  0000                     _TOSL	set	4093
   349  0000                     _TOSH	set	4094
   350  0000                     _TOSU	set	4095
   351  0000                     _BSR	set	4064
   352  0000                     _STATUS	set	4056
   353  0000                     _WREG	set	4072
   354  0000                     _PORTDbits	set	3971
   355  0000                     _T0CONbits	set	4053
   356  0000                     _INTCONbits	set	4082
   357  0000                     _RB5	set	31757
   358  0000                     _RB6	set	31758
   359  0000                     _RD7	set	31775
   360  0000                     _RD6	set	31774
   361  0000                     _RD5	set	31773
   362  0000                     _RD4	set	31772
   363  000691                     STR_1:
   364  000691  42                 	db	66	;'B'
   365  000692  41                 	db	65	;'A'
   366  000693  54                 	db	84	;'T'
   367  000694  54                 	db	84	;'T'
   368  000695  45                 	db	69	;'E'
   369  000696  52                 	db	82	;'R'
   370  000697  59                 	db	89	;'Y'
   371  000698  20                 	db	32
   372  000699  25                 	db	37
   373  00069A  00                 	db	0
   374  00069B                     STR_2:
   375  00069B  25                 	db	37
   376  00069C  30                 	db	48	;'0'
   377  00069D  34                 	db	52	;'4'
   378  00069E  2E                 	db	46
   379  00069F  32                 	db	50	;'2'
   380  0006A0  66                 	db	102	;'f'
   381  0006A1  00                 	db	0
   382                           
   383                           ; #config settings
   384  0006A2  00                 	db	0	; dummy byte at the end
   385  0000                     
   386                           	psect	cinit
   387  00633E                     __pcinit:
   388                           	opt callstack 0
   389  00633E                     start_initialization:
   390                           	opt callstack 0
   391  00633E                     __initialization:
   392                           	opt callstack 0
   393                           
   394                           ; Initialize objects allocated to COMRAM (2 bytes)
   395                           ; load TBLPTR registers with __pidataCOMRAM
   396  00633E  0E2C               	movlw	low __pidataCOMRAM
   397  006340  6EF6               	movwf	tblptrl,c
   398  006342  0E66               	movlw	high __pidataCOMRAM
   399  006344  6EF7               	movwf	tblptrh,c
   400  006346  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   401  006348  6EF8               	movwf	tblptru,c
   402  00634A  0009               	tblrd		*+	;fetch initializer
   403  00634C  CFF5 F06E          	movff	tablat,__pdataCOMRAM
   404  006350  0009               	tblrd		*+	;fetch initializer
   405  006352  CFF5 F06F          	movff	tablat,__pdataCOMRAM+1
   406                           
   407                           ; Clear objects allocated to BIGRAM (1194 bytes)
   408  006356  EE00  F0A2         	lfsr	0,__pbssBIGRAM
   409  00635A  EE24 F0AA          	lfsr	2,1194
   410  00635E                     clear_0:
   411  00635E  6AEE               	clrf	postinc0,c
   412  006360  50DD               	movf	postdec2,w,c
   413  006362  50D9               	movf	fsr2l,w,c
   414  006364  E1FC               	bnz	clear_0
   415  006366  50DA               	movf	fsr2h,w,c
   416  006368  E1FA               	bnz	clear_0
   417                           
   418                           ; Clear objects allocated to BANK0 (18 bytes)
   419  00636A  EE00  F080         	lfsr	0,__pbssBANK0
   420  00636E  0E12               	movlw	18
   421  006370                     clear_1:
   422  006370  6AEE               	clrf	postinc0,c
   423  006372  06E8               	decf	wreg,f,c
   424  006374  E1FD               	bnz	clear_1
   425                           
   426                           ; Clear objects allocated to COMRAM (78 bytes)
   427  006376  EE00  F001         	lfsr	0,__pbssCOMRAM
   428  00637A  0E4E               	movlw	78
   429  00637C                     clear_2:
   430  00637C  6AEE               	clrf	postinc0,c
   431  00637E  06E8               	decf	wreg,f,c
   432  006380  E1FD               	bnz	clear_2
   433  006382                     end_of_initialization:
   434                           	opt callstack 0
   435  006382                     __end_of__initialization:
   436                           	opt callstack 0
   437  006382  0E00               	movlw	low (__Lmediumconst shr (0+16))
   438  006384  6EF8               	movwf	tblptru,c
   439  006386  0100               	movlb	0
   440  006388  EFB3  F02B         	goto	_main	;jump to C main() function
   441                           
   442                           	psect	bssCOMRAM
   443  000001                     __pbssCOMRAM:
   444                           	opt callstack 0
   445  000001                     _buffer:
   446                           	opt callstack 0
   447  000001                     	ds	2
   448  000003                     _stack_size:
   449                           	opt callstack 0
   450  000003                     	ds	2
   451  000005                     _sem3:
   452                           	opt callstack 0
   453  000005                     	ds	18
   454  000017                     _sem2:
   455                           	opt callstack 0
   456  000017                     	ds	18
   457  000029                     _sem1:
   458                           	opt callstack 0
   459  000029                     	ds	18
   460  00003B                     _msg2:
   461                           	opt callstack 0
   462  00003B                     	ds	10
   463  000045                     _msg1:
   464                           	opt callstack 0
   465  000045                     	ds	10
   466                           
   467                           	psect	dataCOMRAM
   468  00006E                     __pdataCOMRAM:
   469                           	opt callstack 0
   470  00006E                     _quantum:
   471                           	opt callstack 0
   472  00006E                     	ds	2
   473                           
   474                           	psect	bssBANK0
   475  000080                     __pbssBANK0:
   476                           	opt callstack 0
   477  000080                     _sem4:
   478                           	opt callstack 0
   479  000080                     	ds	18
   480                           
   481                           	psect	bssBIGRAM
   482  0000A2                     __pbssBIGRAM:
   483                           	opt callstack 0
   484  0000A2                     _f_aptos:
   485                           	opt callstack 0
   486  0000A2                     	ds	682
   487  00034C                     __uDynamicHeap:
   488                           	opt callstack 0
   489  00034C                     	ds	512
   490                           
   491                           	psect	cstackBANK0
   492  000092                     __pcstackBANK0:
   493                           	opt callstack 0
   494  000092                     ?_create_task:
   495                           	opt callstack 0
   496  000092                     __SRAMmerge@uSum:
   497                           	opt callstack 0
   498  000092                     create_task@id:
   499                           	opt callstack 0
   500  000092                     sem_create@sem:
   501                           	opt callstack 0
   502  000092                     SRAMInitHeap@pHeap:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x0
   506  000092                     	ds	1
   507  000093                     __SRAMmerge@pSegB:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x1
   511  000093                     	ds	1
   512  000094                     create_task@prior:
   513                           	opt callstack 0
   514  000094                     sem_create@init_value:
   515                           	opt callstack 0
   516  000094                     SRAMInitHeap@count:
   517                           	opt callstack 0
   518                           
   519                           ; 2 bytes @ 0x2
   520  000094                     	ds	1
   521  000095                     __SRAMmerge@uSegA:
   522                           	opt callstack 0
   523                           
   524                           ; 1 bytes @ 0x3
   525  000095                     	ds	1
   526  000096                     __SRAMmerge@uSegB:
   527                           	opt callstack 0
   528  000096                     create_task@f:
   529                           	opt callstack 0
   530                           
   531                           ; 2 bytes @ 0x4
   532  000096                     	ds	1
   533  000097                     ?_SRAMalloc:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x5
   537  000097                     	ds	2
   538  000099                     ??_SRAMalloc:
   539                           
   540                           ; 1 bytes @ 0x7
   541  000099                     	ds	2
   542  00009B                     SRAMalloc@temp:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x9
   546  00009B                     	ds	2
   547  00009D                     SRAMalloc@segLen:
   548                           	opt callstack 0
   549                           
   550                           ; 1 bytes @ 0xB
   551  00009D                     	ds	1
   552  00009E                     SRAMalloc@segHeader:
   553                           	opt callstack 0
   554                           
   555                           ; 1 bytes @ 0xC
   556  00009E                     	ds	1
   557  00009F                     SRAMalloc@nBytes:
   558                           	opt callstack 0
   559                           
   560                           ; 1 bytes @ 0xD
   561  00009F                     	ds	1
   562  0000A0                     SRAMalloc@pHeap:
   563                           	opt callstack 0
   564                           
   565                           ; 2 bytes @ 0xE
   566  0000A0                     	ds	2
   567                           
   568                           	psect	cstackCOMRAM
   569  00004F                     __pcstackCOMRAM:
   570                           	opt callstack 0
   571  00004F                     ??_timer_zero_int:
   572  00004F                     
   573                           ; 2 bytes @ 0x0
   574  00004F                     	ds	14
   575  00005D                     task_m1@dado:
   576                           	opt callstack 0
   577                           
   578                           ; 1 bytes @ 0xE
   579  00005D                     	ds	1
   580  00005E                     task_m2@dado:
   581                           	opt callstack 0
   582                           
   583                           ; 1 bytes @ 0xF
   584  00005E                     	ds	1
   585  00005F                     ??_create_task:
   586  00005F                     ??_Lcd_Init:
   587  00005F                     pipe_create@p:
   588                           	opt callstack 0
   589  00005F                     __SRAMmerge@pSegA:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0x10
   593  00005F                     	ds	2
   594  000061                     ??__SRAMmerge:
   595                           
   596                           ; 1 bytes @ 0x12
   597  000061                     	ds	1
   598  000062                     
   599                           ; 1 bytes @ 0x13
   600 ;;
   601 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   602 ;;
   603 ;; *************** function _main *****************
   604 ;; Defined at:
   605 ;;		line 20 in file "main.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  2   22[None  ] int 
   612 ;; Registers used:
   613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   619 ;;      Params:         0       0       0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0       0       0
   621 ;;      Temps:          0       0       0       0       0       0       0
   622 ;;      Totals:         0       0       0       0       0       0       0
   623 ;;Total ram usage:        0 bytes
   624 ;; Hardware stack levels required when called:   14
   625 ;; This function calls:
   626 ;;		_SRAMInitHeap
   627 ;;		_create_task
   628 ;;		_os_config
   629 ;;		_start_OS
   630 ;; This function is called by:
   631 ;;		Startup code after reset
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text0
   636  005766                     __ptext0:
   637                           	opt callstack 0
   638  005766                     _main:
   639                           	opt callstack 17
   640  005766                     
   641                           ;main.c: 22: os_config();
   642  005766  EC54  F032         	call	_os_config	;wreg free
   643  00576A                     
   644                           ;main.c: 24: SRAMInitHeap();
   645  00576A  EC4D  F030         	call	_SRAMInitHeap	;wreg free
   646  00576E                     
   647                           ;main.c: 27: if (create_task(1, 6, &task_lcd) == 0) return 0;
   648  00576E  0E00               	movlw	0
   649  005770  0100               	movlb	0	; () banked
   650  005772  6F93               	movwf	(create_task@id+1)& (0+255),b
   651  005774  0E01               	movlw	1
   652  005776  6F92               	movwf	create_task@id& (0+255),b
   653  005778  0E00               	movlw	0
   654  00577A  6F95               	movwf	(create_task@prior+1)& (0+255),b
   655  00577C  0E06               	movlw	6
   656  00577E  6F94               	movwf	create_task@prior& (0+255),b
   657  005780  0E36               	movlw	low _task_lcd
   658  005782  6F96               	movwf	create_task@f& (0+255),b
   659  005784  0E3A               	movlw	high _task_lcd
   660  005786  6F97               	movwf	(create_task@f+1)& (0+255),b
   661  005788  ECBF  F026         	call	_create_task	;wreg free
   662  00578C  0100               	movlb	0	; () banked
   663  00578E  5192               	movf	?_create_task& (0+255),w,b
   664  005790  1193               	iorwf	(?_create_task+1)& (0+255),w,b
   665  005792  A4D8               	btfss	status,2,c
   666  005794  EFCE  F02B         	goto	u3381
   667  005798  EFD0  F02B         	goto	u3380
   668  00579C                     u3381:
   669  00579C  EFD2  F02B         	goto	l3866
   670  0057A0                     u3380:
   671  0057A0  EF24  F02C         	goto	l24
   672  0057A4                     l3866:
   673                           
   674                           ; BSR set to: 0
   675                           ;main.c: 28: if (create_task(2, 5, &task_um) == 0) return 0;
   676  0057A4  0E00               	movlw	0
   677  0057A6  6F93               	movwf	(create_task@id+1)& (0+255),b
   678  0057A8  0E02               	movlw	2
   679  0057AA  6F92               	movwf	create_task@id& (0+255),b
   680  0057AC  0E00               	movlw	0
   681  0057AE  6F95               	movwf	(create_task@prior+1)& (0+255),b
   682  0057B0  0E05               	movlw	5
   683  0057B2  6F94               	movwf	create_task@prior& (0+255),b
   684  0057B4  0E28               	movlw	low _task_um
   685  0057B6  6F96               	movwf	create_task@f& (0+255),b
   686  0057B8  0E65               	movlw	high _task_um
   687  0057BA  6F97               	movwf	(create_task@f+1)& (0+255),b
   688  0057BC  ECBF  F026         	call	_create_task	;wreg free
   689  0057C0  0100               	movlb	0	; () banked
   690  0057C2  5192               	movf	?_create_task& (0+255),w,b
   691  0057C4  1193               	iorwf	(?_create_task+1)& (0+255),w,b
   692  0057C6  A4D8               	btfss	status,2,c
   693  0057C8  EFE8  F02B         	goto	u3391
   694  0057CC  EFEA  F02B         	goto	u3390
   695  0057D0                     u3391:
   696  0057D0  EFEC  F02B         	goto	l3870
   697  0057D4                     u3390:
   698  0057D4  EF24  F02C         	goto	l24
   699  0057D8                     l3870:
   700                           
   701                           ; BSR set to: 0
   702                           ;main.c: 29: if (create_task(3, 4, &task_dois) == 0) return 0;
   703  0057D8  0E00               	movlw	0
   704  0057DA  6F93               	movwf	(create_task@id+1)& (0+255),b
   705  0057DC  0E03               	movlw	3
   706  0057DE  6F92               	movwf	create_task@id& (0+255),b
   707  0057E0  0E00               	movlw	0
   708  0057E2  6F95               	movwf	(create_task@prior+1)& (0+255),b
   709  0057E4  0E04               	movlw	4
   710  0057E6  6F94               	movwf	create_task@prior& (0+255),b
   711  0057E8  0EE8               	movlw	low _task_dois
   712  0057EA  6F96               	movwf	create_task@f& (0+255),b
   713  0057EC  0E64               	movlw	high _task_dois
   714  0057EE  6F97               	movwf	(create_task@f+1)& (0+255),b
   715  0057F0  ECBF  F026         	call	_create_task	;wreg free
   716  0057F4  0100               	movlb	0	; () banked
   717  0057F6  5192               	movf	?_create_task& (0+255),w,b
   718  0057F8  1193               	iorwf	(?_create_task+1)& (0+255),w,b
   719  0057FA  A4D8               	btfss	status,2,c
   720  0057FC  EF02  F02C         	goto	u3401
   721  005800  EF04  F02C         	goto	u3400
   722  005804                     u3401:
   723  005804  EF06  F02C         	goto	l3874
   724  005808                     u3400:
   725  005808  EF24  F02C         	goto	l24
   726  00580C                     l3874:
   727                           
   728                           ; BSR set to: 0
   729                           ;main.c: 30: if (create_task(4, 3, &task_tres) == 0) return 0;
   730  00580C  0E00               	movlw	0
   731  00580E  6F93               	movwf	(create_task@id+1)& (0+255),b
   732  005810  0E04               	movlw	4
   733  005812  6F92               	movwf	create_task@id& (0+255),b
   734  005814  0E00               	movlw	0
   735  005816  6F95               	movwf	(create_task@prior+1)& (0+255),b
   736  005818  0E03               	movlw	3
   737  00581A  6F94               	movwf	create_task@prior& (0+255),b
   738  00581C  0E66               	movlw	low _task_tres
   739  00581E  6F96               	movwf	create_task@f& (0+255),b
   740  005820  0E64               	movlw	high _task_tres
   741  005822  6F97               	movwf	(create_task@f+1)& (0+255),b
   742  005824  ECBF  F026         	call	_create_task	;wreg free
   743  005828  0100               	movlb	0	; () banked
   744  00582A  5192               	movf	?_create_task& (0+255),w,b
   745  00582C  1193               	iorwf	(?_create_task+1)& (0+255),w,b
   746  00582E  A4D8               	btfss	status,2,c
   747  005830  EF1C  F02C         	goto	u3411
   748  005834  EF1E  F02C         	goto	u3410
   749  005838                     u3411:
   750  005838  EF20  F02C         	goto	l3878
   751  00583C                     u3410:
   752  00583C  EF24  F02C         	goto	l24
   753  005840                     l3878:
   754                           
   755                           ; BSR set to: 0
   756                           ;main.c: 35: start_OS();
   757  005840  EC12  F033         	call	_start_OS	;wreg free
   758  005844                     l28:
   759  005844  EF22  F02C         	goto	l28
   760  005848                     l24:
   761                           
   762                           ; BSR set to: 0
   763  005848  EF06  F000         	goto	start
   764  00584C                     __end_of_main:
   765                           	opt callstack 0
   766                           
   767 ;; *************** function _start_OS *****************
   768 ;; Defined at:
   769 ;;		line 105 in file "kernel.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;		None
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		None
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   783 ;;      Params:         0       0       0       0       0       0       0
   784 ;;      Locals:         0       0       0       0       0       0       0
   785 ;;      Temps:          0       0       0       0       0       0       0
   786 ;;      Totals:         0       0       0       0       0       0       0
   787 ;;Total ram usage:        0 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    9
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text1
   798  006624                     __ptext1:
   799                           	opt callstack 0
   800  006624                     _start_OS:
   801                           	opt callstack 21
   802  006624                     
   803                           ;kernel.c: 107: INTCONbits.GIE = 1;;
   804  006624  8EF2               	bsf	242,7,c	;volatile
   805                           
   806                           ;kernel.c: 108: INTCONbits.TMR0IE = 1;
   807  006626  8AF2               	bsf	242,5,c	;volatile
   808                           
   809                           ;kernel.c: 109: T0CONbits.TMR0ON = 1;
   810  006628  8ED5               	bsf	213,7,c	;volatile
   811  00662A  0012               	return		;funcret
   812  00662C                     __end_of_start_OS:
   813                           	opt callstack 0
   814                           
   815 ;; *************** function _os_config *****************
   816 ;; Defined at:
   817 ;;		line 92 in file "kernel.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   831 ;;      Params:         0       0       0       0       0       0       0
   832 ;;      Locals:         0       0       0       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0
   834 ;;      Totals:         0       0       0       0       0       0       0
   835 ;;Total ram usage:        0 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:   13
   838 ;; This function calls:
   839 ;;		_conf_timer0
   840 ;;		_create_task
   841 ;;		_user_tasks_config
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text2
   848  0064A8                     __ptext2:
   849                           	opt callstack 0
   850  0064A8                     _os_config:
   851                           	opt callstack 17
   852  0064A8                     
   853                           ;kernel.c: 94: f_aptos.size = 0;
   854  0064A8  0E00               	movlw	0
   855  0064AA  CFE8 F348          	movff	wreg,_f_aptos+678
   856  0064AE  0E00               	movlw	0
   857  0064B0  CFE8 F349          	movff	wreg,_f_aptos+679
   858                           
   859                           ;kernel.c: 95: f_aptos.task_running = 0;
   860  0064B4  0E00               	movlw	0
   861  0064B6  CFE8 F34A          	movff	wreg,_f_aptos+680
   862  0064BA  0E00               	movlw	0
   863  0064BC  CFE8 F34B          	movff	wreg,_f_aptos+681
   864  0064C0                     
   865                           ;kernel.c: 98: create_task(0, 0, &task_idle);
   866  0064C0  0E00               	movlw	0
   867  0064C2  0100               	movlb	0	; () banked
   868  0064C4  6F93               	movwf	(create_task@id+1)& (0+255),b
   869  0064C6  0E00               	movlw	0
   870  0064C8  6F92               	movwf	create_task@id& (0+255),b
   871  0064CA  0E00               	movlw	0
   872  0064CC  6F95               	movwf	(create_task@prior+1)& (0+255),b
   873  0064CE  0E00               	movlw	0
   874  0064D0  6F94               	movwf	create_task@prior& (0+255),b
   875  0064D2  0E9C               	movlw	low _task_idle
   876  0064D4  6F96               	movwf	create_task@f& (0+255),b
   877  0064D6  0E65               	movlw	high _task_idle
   878  0064D8  6F97               	movwf	(create_task@f+1)& (0+255),b
   879  0064DA  ECBF  F026         	call	_create_task	;wreg free
   880  0064DE                     
   881                           ;kernel.c: 100: conf_timer0();
   882  0064DE  EC00  F033         	call	_conf_timer0	;wreg free
   883  0064E2                     
   884                           ;kernel.c: 102: user_tasks_config();
   885  0064E2  ECD3  F02E         	call	_user_tasks_config	;wreg free
   886  0064E6  0012               	return		;funcret
   887  0064E8                     __end_of_os_config:
   888                           	opt callstack 0
   889                           
   890 ;; *************** function _user_tasks_config *****************
   891 ;; Defined at:
   892 ;;		line 25 in file "user_tasks.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   906 ;;      Params:         0       0       0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0
   909 ;;      Totals:         0       0       0       0       0       0       0
   910 ;;Total ram usage:        0 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:   12
   913 ;; This function calls:
   914 ;;		_Inicializa_ADC
   915 ;;		_Lcd_Init
   916 ;;		_SRAMalloc
   917 ;;		_pipe_create
   918 ;;		_sem_create
   919 ;; This function is called by:
   920 ;;		_os_config
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text3
   925  005DA6                     __ptext3:
   926                           	opt callstack 0
   927  005DA6                     _user_tasks_config:
   928                           	opt callstack 17
   929  005DA6                     
   930                           ;user_tasks.c: 28: TRISDbits.TRISD0 = 0;
   931  005DA6  9095               	bcf	149,0,c	;volatile
   932                           
   933                           ;user_tasks.c: 29: TRISDbits.TRISD1 = 0;
   934  005DA8  9295               	bcf	149,1,c	;volatile
   935                           
   936                           ;user_tasks.c: 30: TRISDbits.TRISD2 = 0;
   937  005DAA  9495               	bcf	149,2,c	;volatile
   938                           
   939                           ;user_tasks.c: 32: TRISDbits.TRISD3 = 0;
   940  005DAC  9695               	bcf	149,3,c	;volatile
   941                           
   942                           ;user_tasks.c: 35: TRISDbits.TRISD4 = 0;
   943  005DAE  9895               	bcf	149,4,c	;volatile
   944                           
   945                           ;user_tasks.c: 36: TRISDbits.TRISD5 = 0;
   946  005DB0  9A95               	bcf	149,5,c	;volatile
   947                           
   948                           ;user_tasks.c: 37: TRISDbits.TRISD6 = 0;
   949  005DB2  9C95               	bcf	149,6,c	;volatile
   950                           
   951                           ;user_tasks.c: 38: TRISDbits.TRISD7 = 0;
   952  005DB4  9E95               	bcf	149,7,c	;volatile
   953                           
   954                           ;user_tasks.c: 39: TRISBbits.TRISB5 = 0;
   955  005DB6  9A93               	bcf	147,5,c	;volatile
   956                           
   957                           ;user_tasks.c: 40: TRISBbits.TRISB6 = 0;
   958  005DB8  9C93               	bcf	147,6,c	;volatile
   959                           
   960                           ;user_tasks.c: 43: TRISCbits.TRISC0 = 0;
   961  005DBA  9094               	bcf	148,0,c	;volatile
   962                           
   963                           ;user_tasks.c: 44: TRISCbits.TRISC1 = 0;
   964  005DBC  9294               	bcf	148,1,c	;volatile
   965  005DBE                     
   966                           ;user_tasks.c: 46: buffer = SRAMalloc(10);
   967  005DBE  0E0A               	movlw	10
   968  005DC0  EC1E  F02A         	call	_SRAMalloc
   969  005DC4  C097  F001         	movff	?_SRAMalloc,_buffer
   970  005DC8  C098  F002         	movff	?_SRAMalloc+1,_buffer+1
   971  005DCC                     
   972                           ;user_tasks.c: 48: sem_create(&sem1, 1);
   973  005DCC  0E29               	movlw	low _sem1
   974  005DCE  0100               	movlb	0	; () banked
   975  005DD0  6F92               	movwf	sem_create@sem& (0+255),b
   976  005DD2  0E00               	movlw	high _sem1
   977  005DD4  6F93               	movwf	(sem_create@sem+1)& (0+255),b
   978  005DD6  0E00               	movlw	0
   979  005DD8  6F95               	movwf	(sem_create@init_value+1)& (0+255),b
   980  005DDA  0E01               	movlw	1
   981  005DDC  6F94               	movwf	sem_create@init_value& (0+255),b
   982  005DDE  EC11  F032         	call	_sem_create	;wreg free
   983  005DE2                     
   984                           ;user_tasks.c: 49: sem_create(&sem2, 0);
   985  005DE2  0E17               	movlw	low _sem2
   986  005DE4  0100               	movlb	0	; () banked
   987  005DE6  6F92               	movwf	sem_create@sem& (0+255),b
   988  005DE8  0E00               	movlw	high _sem2
   989  005DEA  6F93               	movwf	(sem_create@sem+1)& (0+255),b
   990  005DEC  0E00               	movlw	0
   991  005DEE  6F95               	movwf	(sem_create@init_value+1)& (0+255),b
   992  005DF0  0E00               	movlw	0
   993  005DF2  6F94               	movwf	sem_create@init_value& (0+255),b
   994  005DF4  EC11  F032         	call	_sem_create	;wreg free
   995  005DF8                     
   996                           ;user_tasks.c: 50: sem_create(&sem3, 0);
   997  005DF8  0E05               	movlw	low _sem3
   998  005DFA  0100               	movlb	0	; () banked
   999  005DFC  6F92               	movwf	sem_create@sem& (0+255),b
  1000  005DFE  0E00               	movlw	high _sem3
  1001  005E00  6F93               	movwf	(sem_create@sem+1)& (0+255),b
  1002  005E02  0E00               	movlw	0
  1003  005E04  6F95               	movwf	(sem_create@init_value+1)& (0+255),b
  1004  005E06  0E00               	movlw	0
  1005  005E08  6F94               	movwf	sem_create@init_value& (0+255),b
  1006  005E0A  EC11  F032         	call	_sem_create	;wreg free
  1007  005E0E                     
  1008                           ;user_tasks.c: 51: sem_create(&sem4, 0);
  1009  005E0E  0E80               	movlw	low _sem4
  1010  005E10  0100               	movlb	0	; () banked
  1011  005E12  6F92               	movwf	sem_create@sem& (0+255),b
  1012  005E14  0E00               	movlw	high _sem4
  1013  005E16  6F93               	movwf	(sem_create@sem+1)& (0+255),b
  1014  005E18  0E00               	movlw	0
  1015  005E1A  6F95               	movwf	(sem_create@init_value+1)& (0+255),b
  1016  005E1C  0E00               	movlw	0
  1017  005E1E  6F94               	movwf	sem_create@init_value& (0+255),b
  1018  005E20  EC11  F032         	call	_sem_create	;wreg free
  1019  005E24                     
  1020                           ;user_tasks.c: 52: pipe_create(&msg1);
  1021  005E24  0E45               	movlw	low _msg1
  1022  005E26  6E5F               	movwf	pipe_create@p^0,c
  1023  005E28  0E00               	movlw	high _msg1
  1024  005E2A  6E60               	movwf	(pipe_create@p+1)^0,c
  1025  005E2C  EC76  F031         	call	_pipe_create	;wreg free
  1026  005E30                     
  1027                           ;user_tasks.c: 53: pipe_create(&msg2);
  1028  005E30  0E3B               	movlw	low _msg2
  1029  005E32  6E5F               	movwf	pipe_create@p^0,c
  1030  005E34  0E00               	movlw	high _msg2
  1031  005E36  6E60               	movwf	(pipe_create@p+1)^0,c
  1032  005E38  EC76  F031         	call	_pipe_create	;wreg free
  1033  005E3C                     
  1034                           ;user_tasks.c: 54: Inicializa_ADC();
  1035  005E3C  ECF7  F032         	call	_Inicializa_ADC	;wreg free
  1036  005E40                     
  1037                           ;user_tasks.c: 55: Lcd_Init();
  1038  005E40  EC09  F030         	call	_Lcd_Init	;wreg free
  1039  005E44  0012               	return		;funcret
  1040  005E46                     __end_of_user_tasks_config:
  1041                           	opt callstack 0
  1042                           
  1043 ;; *************** function _sem_create *****************
  1044 ;; Defined at:
  1045 ;;		line 10 in file "semaphore.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  sem             2    0[BANK0 ] PTR struct sem
  1048 ;;		 -> sem4(18), sem3(18), sem2(18), sem1(18), 
  1049 ;;  init_value      2    2[BANK0 ] int 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1061 ;;      Params:         0       4       0       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0       0       0
  1064 ;;      Totals:         0       4       0       0       0       0       0
  1065 ;;Total ram usage:        4 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    9
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_user_tasks_config
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text4
  1076  006422                     __ptext4:
  1077                           	opt callstack 0
  1078  006422                     _sem_create:
  1079                           	opt callstack 19
  1080  006422                     
  1081                           ;semaphore.c: 12: INTCONbits.GIE = 0;;
  1082  006422  9EF2               	bcf	242,7,c	;volatile
  1083  006424                     
  1084                           ;semaphore.c: 14: sem->contador = init_value;
  1085  006424  0100               	movlb	0	; () banked
  1086  006426  EE20 F010          	lfsr	2,16
  1087  00642A  5192               	movf	sem_create@sem& (0+255),w,b
  1088  00642C  26D9               	addwf	fsr2l,f,c
  1089  00642E  5193               	movf	(sem_create@sem+1)& (0+255),w,b
  1090  006430  22DA               	addwfc	fsr2h,f,c
  1091  006432  C094  FFDE         	movff	sem_create@init_value,postinc2
  1092  006436  C095  FFDD         	movff	sem_create@init_value+1,postdec2
  1093                           
  1094                           ;semaphore.c: 15: sem->bloqued_tasks = 0;
  1095  00643A  EE20 F00C          	lfsr	2,12
  1096  00643E  5192               	movf	sem_create@sem& (0+255),w,b
  1097  006440  26D9               	addwf	fsr2l,f,c
  1098  006442  5193               	movf	(sem_create@sem+1)& (0+255),w,b
  1099  006444  22DA               	addwfc	fsr2h,f,c
  1100  006446  0E00               	movlw	0
  1101  006448  6EDE               	movwf	postinc2,c
  1102  00644A  0E00               	movlw	0
  1103  00644C  6EDD               	movwf	postdec2,c
  1104                           
  1105                           ;semaphore.c: 16: sem->next_task_to_unblock = 0;
  1106  00644E  EE20 F00E          	lfsr	2,14
  1107  006452  5192               	movf	sem_create@sem& (0+255),w,b
  1108  006454  26D9               	addwf	fsr2l,f,c
  1109  006456  5193               	movf	(sem_create@sem+1)& (0+255),w,b
  1110  006458  22DA               	addwfc	fsr2h,f,c
  1111  00645A  0E00               	movlw	0
  1112  00645C  6EDE               	movwf	postinc2,c
  1113  00645E  0E00               	movlw	0
  1114  006460  6EDD               	movwf	postdec2,c
  1115  006462                     
  1116                           ; BSR set to: 0
  1117                           ;semaphore.c: 18: INTCONbits.GIE = 1;;
  1118  006462  8EF2               	bsf	242,7,c	;volatile
  1119  006464                     
  1120                           ; BSR set to: 0
  1121  006464  0012               	return		;funcret
  1122  006466                     __end_of_sem_create:
  1123                           	opt callstack 0
  1124                           
  1125 ;; *************** function _pipe_create *****************
  1126 ;; Defined at:
  1127 ;;		line 9 in file "pipe.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  p               2   16[COMRAM] PTR struct pipe
  1130 ;;		 -> msg2(10), msg1(10), 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;		None
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1142 ;;      Params:         2       0       0       0       0       0       0
  1143 ;;      Locals:         0       0       0       0       0       0       0
  1144 ;;      Temps:          0       0       0       0       0       0       0
  1145 ;;      Totals:         2       0       0       0       0       0       0
  1146 ;;Total ram usage:        2 bytes
  1147 ;; Hardware stack levels used:    1
  1148 ;; Hardware stack levels required when called:    9
  1149 ;; This function calls:
  1150 ;;		Nothing
  1151 ;; This function is called by:
  1152 ;;		_user_tasks_config
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text5
  1157  0062EC                     __ptext5:
  1158                           	opt callstack 0
  1159  0062EC                     _pipe_create:
  1160                           	opt callstack 19
  1161  0062EC                     
  1162                           ;pipe.c: 11: p->pipe_size = 0;
  1163  0062EC  EE20 F002          	lfsr	2,2
  1164  0062F0  505F               	movf	pipe_create@p^0,w,c
  1165  0062F2  26D9               	addwf	fsr2l,f,c
  1166  0062F4  5060               	movf	(pipe_create@p+1)^0,w,c
  1167  0062F6  22DA               	addwfc	fsr2h,f,c
  1168  0062F8  0E00               	movlw	0
  1169  0062FA  6EDE               	movwf	postinc2,c
  1170  0062FC  0E00               	movlw	0
  1171  0062FE  6EDD               	movwf	postdec2,c
  1172                           
  1173                           ;pipe.c: 12: p->pipe_pos_read = 0;
  1174  006300  EE20 F004          	lfsr	2,4
  1175  006304  505F               	movf	pipe_create@p^0,w,c
  1176  006306  26D9               	addwf	fsr2l,f,c
  1177  006308  5060               	movf	(pipe_create@p+1)^0,w,c
  1178  00630A  22DA               	addwfc	fsr2h,f,c
  1179  00630C  0E00               	movlw	0
  1180  00630E  6EDE               	movwf	postinc2,c
  1181  006310  0E00               	movlw	0
  1182  006312  6EDD               	movwf	postdec2,c
  1183                           
  1184                           ;pipe.c: 13: p->pipe_pos_write = 0;
  1185  006314  EE20 F006          	lfsr	2,6
  1186  006318  505F               	movf	pipe_create@p^0,w,c
  1187  00631A  26D9               	addwf	fsr2l,f,c
  1188  00631C  5060               	movf	(pipe_create@p+1)^0,w,c
  1189  00631E  22DA               	addwfc	fsr2h,f,c
  1190  006320  0E00               	movlw	0
  1191  006322  6EDE               	movwf	postinc2,c
  1192  006324  0E00               	movlw	0
  1193  006326  6EDD               	movwf	postdec2,c
  1194                           
  1195                           ;pipe.c: 14: p->pipe_task_bloqued = 0;
  1196  006328  EE20 F008          	lfsr	2,8
  1197  00632C  505F               	movf	pipe_create@p^0,w,c
  1198  00632E  26D9               	addwf	fsr2l,f,c
  1199  006330  5060               	movf	(pipe_create@p+1)^0,w,c
  1200  006332  22DA               	addwfc	fsr2h,f,c
  1201  006334  0E00               	movlw	0
  1202  006336  6EDE               	movwf	postinc2,c
  1203  006338  0E00               	movlw	0
  1204  00633A  6EDD               	movwf	postdec2,c
  1205  00633C  0012               	return		;funcret
  1206  00633E                     __end_of_pipe_create:
  1207                           	opt callstack 0
  1208                           
  1209 ;; *************** function _SRAMalloc *****************
  1210 ;; Defined at:
  1211 ;;		line 191 in file "sralloc.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  nBytes          1    wreg     unsigned char 
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;  nBytes          1   13[BANK0 ] unsigned char 
  1216 ;;  pHeap           2   14[BANK0 ] PTR struct _SALLOC
  1217 ;;		 -> _uDynamicHeap(512), 
  1218 ;;  temp            2    9[BANK0 ] PTR struct _SALLOC
  1219 ;;		 -> _uDynamicHeap(512), 
  1220 ;;  segHeader       1   12[BANK0 ] struct _SALLOC
  1221 ;;  segLen          1   11[BANK0 ] unsigned char 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  2    5[BANK0 ] PTR unsigned char 
  1224 ;; Registers used:
  1225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1231 ;;      Params:         0       2       0       0       0       0       0
  1232 ;;      Locals:         0       7       0       0       0       0       0
  1233 ;;      Temps:          0       2       0       0       0       0       0
  1234 ;;      Totals:         0      11       0       0       0       0       0
  1235 ;;Total ram usage:       11 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:   10
  1238 ;; This function calls:
  1239 ;;		__SRAMmerge
  1240 ;; This function is called by:
  1241 ;;		_user_tasks_config
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text6
  1246  00543C                     __ptext6:
  1247                           	opt callstack 0
  1248  00543C                     _SRAMalloc:
  1249                           	opt callstack 18
  1250                           
  1251                           ;incstack = 0
  1252                           ;SRAMalloc@nBytes stored from wreg
  1253  00543C  0100               	movlb	0	; () banked
  1254  00543E  6F9F               	movwf	SRAMalloc@nBytes& (0+255),b
  1255  005440                     
  1256                           ;sralloc.c: 193: SALLOC *  pHeap;;sralloc.c: 194: SALLOC *  temp;;sralloc.c: 195: SALLOC
      +                           segHeader;;sralloc.c: 196: unsigned char segLen;;sralloc.c: 199: if (nBytes > (0x7F - 1
      +                          )) return (0);
  1257  005440  0E7E               	movlw	126
  1258  005442  0100               	movlb	0	; () banked
  1259  005444  659F               	cpfsgt	SRAMalloc@nBytes& (0+255),b
  1260  005446  EF27  F02A         	goto	u3301
  1261  00544A  EF29  F02A         	goto	u3300
  1262  00544E                     u3301:
  1263  00544E  EF2F  F02A         	goto	l3752
  1264  005452                     u3300:
  1265  005452                     l3748:
  1266                           
  1267                           ; BSR set to: 0
  1268  005452  0E00               	movlw	0
  1269  005454  6F97               	movwf	?_SRAMalloc& (0+255),b
  1270  005456  0E00               	movlw	0
  1271  005458  6F98               	movwf	(?_SRAMalloc+1)& (0+255),b
  1272  00545A  EFB0  F02A         	goto	l385
  1273  00545E                     l3752:
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;sralloc.c: 202: pHeap = (SALLOC *)_uDynamicHeap;
  1277  00545E  0E4C               	movlw	low __uDynamicHeap
  1278  005460  6FA0               	movwf	SRAMalloc@pHeap& (0+255),b
  1279  005462  0E03               	movlw	high __uDynamicHeap
  1280  005464  6FA1               	movwf	(SRAMalloc@pHeap+1)& (0+255),b
  1281  005466                     l3754:
  1282                           
  1283                           ;sralloc.c: 205: {;sralloc.c: 207: segHeader = *pHeap;
  1284  005466  C0A0  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1285  00546A  C0A1  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1286  00546E  50DF               	movf	indf2,w,c
  1287  005470  0100               	movlb	0	; () banked
  1288  005472  6F9E               	movwf	SRAMalloc@segHeader& (0+255),b
  1289  005474                     
  1290                           ; BSR set to: 0
  1291                           ;sralloc.c: 210: segLen = segHeader.bits.count - 1;
  1292  005474  519E               	movf	SRAMalloc@segHeader& (0+255),w,b
  1293  005476  0B7F               	andlw	127
  1294  005478  6F99               	movwf	??_SRAMalloc& (0+255),b
  1295  00547A  0599               	decf	??_SRAMalloc& (0+255),w,b
  1296  00547C  6F9D               	movwf	SRAMalloc@segLen& (0+255),b
  1297  00547E                     
  1298                           ; BSR set to: 0
  1299                           ;sralloc.c: 213: if (segHeader.byte == 0) return (0);
  1300  00547E  519E               	movf	SRAMalloc@segHeader& (0+255),w,b
  1301  005480  A4D8               	btfss	status,2,c
  1302  005482  EF45  F02A         	goto	u3311
  1303  005486  EF47  F02A         	goto	u3310
  1304  00548A                     u3311:
  1305  00548A  EF49  F02A         	goto	l387
  1306  00548E                     u3310:
  1307  00548E  EF29  F02A         	goto	l3748
  1308  005492                     l387:
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;sralloc.c: 216: if (!(segHeader.bits.alloc))
  1312  005492  BF9E               	btfsc	SRAMalloc@segHeader& (0+255),7,b
  1313  005494  EF4E  F02A         	goto	u3321
  1314  005498  EF50  F02A         	goto	u3320
  1315  00549C                     u3321:
  1316  00549C  EF67  F02A         	goto	l3768
  1317  0054A0                     u3320:
  1318  0054A0                     
  1319                           ; BSR set to: 0
  1320                           ;sralloc.c: 217: {;sralloc.c: 219: if (nBytes > segLen)
  1321  0054A0  519F               	movf	SRAMalloc@nBytes& (0+255),w,b
  1322  0054A2  5D9D               	subwf	SRAMalloc@segLen& (0+255),w,b
  1323  0054A4  B0D8               	btfsc	status,0,c
  1324  0054A6  EF57  F02A         	goto	u3331
  1325  0054AA  EF59  F02A         	goto	u3330
  1326  0054AE                     u3331:
  1327  0054AE  EF73  F02A         	goto	l3770
  1328  0054B2                     u3330:
  1329  0054B2                     
  1330                           ; BSR set to: 0
  1331                           ;sralloc.c: 220: {;sralloc.c: 222: if (!(_SRAMmerge(pHeap))) pHeap += segHeader.bits.cou
      +                          nt;
  1332  0054B2  C0A0  F05F         	movff	SRAMalloc@pHeap,__SRAMmerge@pSegA
  1333  0054B6  C0A1  F060         	movff	SRAMalloc@pHeap+1,__SRAMmerge@pSegA+1
  1334  0054BA  EC98  F02C         	call	__SRAMmerge	;wreg free
  1335  0054BE  0900               	iorlw	0
  1336  0054C0  A4D8               	btfss	status,2,c
  1337  0054C2  EF65  F02A         	goto	u3341
  1338  0054C6  EF67  F02A         	goto	u3340
  1339  0054CA                     u3341:
  1340  0054CA  EFAE  F02A         	goto	l394
  1341  0054CE                     u3340:
  1342  0054CE                     l3768:
  1343  0054CE  0100               	movlb	0	; () banked
  1344  0054D0  519E               	movf	SRAMalloc@segHeader& (0+255),w,b
  1345  0054D2  0B7F               	andlw	127
  1346  0054D4  6F99               	movwf	??_SRAMalloc& (0+255),b
  1347  0054D6  5199               	movf	??_SRAMalloc& (0+255),w,b
  1348  0054D8  0D01               	mullw	1
  1349  0054DA  50F3               	movf	243,w,c
  1350  0054DC  27A0               	addwf	SRAMalloc@pHeap& (0+255),f,b
  1351  0054DE  50F4               	movf	244,w,c
  1352  0054E0  23A1               	addwfc	(SRAMalloc@pHeap+1)& (0+255),f,b
  1353  0054E2  EF33  F02A         	goto	l3754
  1354  0054E6                     l3770:
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;sralloc.c: 224: else;sralloc.c: 228: if (nBytes == segLen)
  1358  0054E6  519D               	movf	SRAMalloc@segLen& (0+255),w,b
  1359  0054E8  199F               	xorwf	SRAMalloc@nBytes& (0+255),w,b
  1360  0054EA  A4D8               	btfss	status,2,c
  1361  0054EC  EF7A  F02A         	goto	u3351
  1362  0054F0  EF7C  F02A         	goto	u3350
  1363  0054F4                     u3351:
  1364  0054F4  EF89  F02A         	goto	l3780
  1365  0054F8                     u3350:
  1366  0054F8                     
  1367                           ; BSR set to: 0
  1368                           ;sralloc.c: 229: {;sralloc.c: 231: (*pHeap).bits.alloc = 1;
  1369  0054F8  C0A0  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1370  0054FC  C0A1  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1371  005500  8EDF               	bsf	indf2,7,c
  1372  005502                     
  1373                           ; BSR set to: 0
  1374                           ;sralloc.c: 234: return ((unsigned char *)(pHeap + 1));
  1375  005502  0E01               	movlw	1
  1376  005504  25A0               	addwf	SRAMalloc@pHeap& (0+255),w,b
  1377  005506  6F97               	movwf	?_SRAMalloc& (0+255),b
  1378  005508  0E00               	movlw	0
  1379  00550A  21A1               	addwfc	(SRAMalloc@pHeap+1)& (0+255),w,b
  1380  00550C  6F98               	movwf	(?_SRAMalloc+1)& (0+255),b
  1381  00550E  EFB0  F02A         	goto	l385
  1382  005512                     l3780:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;sralloc.c: 238: else;sralloc.c: 239: {;sralloc.c: 241: (*pHeap).byte = nBytes + 0x81;
  1386  005512  519F               	movf	SRAMalloc@nBytes& (0+255),w,b
  1387  005514  0F81               	addlw	129
  1388  005516  C0A0  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1389  00551A  C0A1  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1390  00551E  6EDF               	movwf	indf2,c
  1391  005520                     
  1392                           ; BSR set to: 0
  1393                           ;sralloc.c: 244: temp = pHeap + 1;
  1394  005520  0E01               	movlw	1
  1395  005522  25A0               	addwf	SRAMalloc@pHeap& (0+255),w,b
  1396  005524  6F9B               	movwf	SRAMalloc@temp& (0+255),b
  1397  005526  0E00               	movlw	0
  1398  005528  21A1               	addwfc	(SRAMalloc@pHeap+1)& (0+255),w,b
  1399  00552A  6F9C               	movwf	(SRAMalloc@temp+1)& (0+255),b
  1400  00552C                     
  1401                           ; BSR set to: 0
  1402                           ;sralloc.c: 247: pHeap += (nBytes + 1);
  1403  00552C  519F               	movf	SRAMalloc@nBytes& (0+255),w,b
  1404  00552E  6F99               	movwf	??_SRAMalloc& (0+255),b
  1405  005530  6B9A               	clrf	(??_SRAMalloc+1)& (0+255),b
  1406  005532  0E01               	movlw	1
  1407  005534  2799               	addwf	??_SRAMalloc& (0+255),f,b
  1408  005536  0E00               	movlw	0
  1409  005538  239A               	addwfc	(??_SRAMalloc+1)& (0+255),f,b
  1410  00553A  5199               	movf	??_SRAMalloc& (0+255),w,b
  1411  00553C  27A0               	addwf	SRAMalloc@pHeap& (0+255),f,b
  1412  00553E  519A               	movf	(??_SRAMalloc+1)& (0+255),w,b
  1413  005540  23A1               	addwfc	(SRAMalloc@pHeap+1)& (0+255),f,b
  1414                           
  1415                           ;sralloc.c: 250: (*pHeap).byte = segLen - nBytes;
  1416  005542  519F               	movf	SRAMalloc@nBytes& (0+255),w,b
  1417  005544  5D9D               	subwf	SRAMalloc@segLen& (0+255),w,b
  1418  005546  C0A0  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1419  00554A  C0A1  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1420  00554E  6EDF               	movwf	indf2,c
  1421  005550                     
  1422                           ; BSR set to: 0
  1423                           ;sralloc.c: 253: return ((unsigned char *) temp);
  1424  005550  C09B  F097         	movff	SRAMalloc@temp,?_SRAMalloc
  1425  005554  C09C  F098         	movff	SRAMalloc@temp+1,?_SRAMalloc+1
  1426  005558  EFB0  F02A         	goto	l385
  1427  00555C                     l394:
  1428  00555C  EF33  F02A         	goto	l3754
  1429  005560                     l385:
  1430                           
  1431                           ; BSR set to: 0
  1432  005560  0012               	return		;funcret
  1433  005562                     __end_of_SRAMalloc:
  1434                           	opt callstack 0
  1435                           
  1436 ;; *************** function __SRAMmerge *****************
  1437 ;; Defined at:
  1438 ;;		line 359 in file "sralloc.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  pSegA           2   16[COMRAM] PTR struct _SALLOC
  1441 ;;		 -> _uDynamicHeap(512), 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  pSegB           2    1[BANK0 ] PTR struct _SALLOC
  1444 ;;		 -> _uDynamicHeap(512), 
  1445 ;;  uSegB           1    4[BANK0 ] struct _SALLOC
  1446 ;;  uSegA           1    3[BANK0 ] struct _SALLOC
  1447 ;;  uSum            1    0[BANK0 ] struct _SALLOC
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      unsigned char 
  1450 ;; Registers used:
  1451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1457 ;;      Params:         2       0       0       0       0       0       0
  1458 ;;      Locals:         0       5       0       0       0       0       0
  1459 ;;      Temps:          1       0       0       0       0       0       0
  1460 ;;      Totals:         3       5       0       0       0       0       0
  1461 ;;Total ram usage:        8 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    9
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_SRAMalloc
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text7
  1472  005930                     __ptext7:
  1473                           	opt callstack 0
  1474  005930                     __SRAMmerge:
  1475                           	opt callstack 18
  1476  005930                     
  1477                           ;sralloc.c: 361: SALLOC *  pSegB;;sralloc.c: 362: SALLOC uSegA, uSegB, uSum;;sralloc.c: 
      +                          365: pSegB = pSegA + (*pSegA).byte;
  1478  005930  C05F  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1479  005934  C060  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1480  005938  50DF               	movf	indf2,w,c
  1481  00593A  6E61               	movwf	??__SRAMmerge^0,c
  1482  00593C  5061               	movf	??__SRAMmerge^0,w,c
  1483  00593E  245F               	addwf	__SRAMmerge@pSegA^0,w,c
  1484  005940  0100               	movlb	0	; () banked
  1485  005942  6F93               	movwf	__SRAMmerge@pSegB& (0+255),b
  1486  005944  0E00               	movlw	0
  1487  005946  2060               	addwfc	(__SRAMmerge@pSegA+1)^0,w,c
  1488  005948  6F94               	movwf	(__SRAMmerge@pSegB+1)& (0+255),b
  1489  00594A                     
  1490                           ; BSR set to: 0
  1491                           ;sralloc.c: 368: uSegA = *pSegA;
  1492  00594A  C05F  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1493  00594E  C060  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1494  005952  50DF               	movf	indf2,w,c
  1495  005954  6F95               	movwf	__SRAMmerge@uSegA& (0+255),b
  1496  005956                     
  1497                           ; BSR set to: 0
  1498                           ;sralloc.c: 369: uSegB = *pSegB;
  1499  005956  C093  FFD9         	movff	__SRAMmerge@pSegB,fsr2l
  1500  00595A  C094  FFDA         	movff	__SRAMmerge@pSegB+1,fsr2h
  1501  00595E  50DF               	movf	indf2,w,c
  1502  005960  6F96               	movwf	__SRAMmerge@uSegB& (0+255),b
  1503  005962                     
  1504                           ; BSR set to: 0
  1505                           ;sralloc.c: 372: if (uSegB.byte == 0) return (0);
  1506  005962  5196               	movf	__SRAMmerge@uSegB& (0+255),w,b
  1507  005964  A4D8               	btfss	status,2,c
  1508  005966  EFB7  F02C         	goto	u3251
  1509  00596A  EFB9  F02C         	goto	u3250
  1510  00596E                     u3251:
  1511  00596E  EFBC  F02C         	goto	l410
  1512  005972                     u3250:
  1513  005972                     l3710:
  1514                           
  1515                           ; BSR set to: 0
  1516  005972  0E00               	movlw	0
  1517  005974  EF04  F02D         	goto	l411
  1518  005978                     l410:
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;sralloc.c: 375: if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  1522  005978  BF95               	btfsc	__SRAMmerge@uSegA& (0+255),7,b
  1523  00597A  EFC1  F02C         	goto	u3261
  1524  00597E  EFC3  F02C         	goto	u3260
  1525  005982                     u3261:
  1526  005982  EFB9  F02C         	goto	l3710
  1527  005986                     u3260:
  1528  005986                     
  1529                           ; BSR set to: 0
  1530  005986  AF96               	btfss	__SRAMmerge@uSegB& (0+255),7,b
  1531  005988  EFC8  F02C         	goto	u3271
  1532  00598C  EFCA  F02C         	goto	u3270
  1533  005990                     u3271:
  1534  005990  EFCC  F02C         	goto	l3720
  1535  005994                     u3270:
  1536  005994  EFB9  F02C         	goto	l3710
  1537  005998                     l3720:
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;sralloc.c: 378: if (uSegA.bits.count == 0x7F) return (0);
  1541  005998  5195               	movf	__SRAMmerge@uSegA& (0+255),w,b
  1542  00599A  0B7F               	andlw	127
  1543  00599C  0A7F               	xorlw	127
  1544  00599E  A4D8               	btfss	status,2,c
  1545  0059A0  EFD4  F02C         	goto	u3281
  1546  0059A4  EFD6  F02C         	goto	u3280
  1547  0059A8                     u3281:
  1548  0059A8  EFD8  F02C         	goto	l3726
  1549  0059AC                     u3280:
  1550  0059AC  EFB9  F02C         	goto	l3710
  1551  0059B0                     l3726:
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;sralloc.c: 381: uSum.byte = uSegA.byte + uSegB.byte;
  1555  0059B0  5195               	movf	__SRAMmerge@uSegA& (0+255),w,b
  1556  0059B2  2596               	addwf	__SRAMmerge@uSegB& (0+255),w,b
  1557  0059B4  6F92               	movwf	__SRAMmerge@uSum& (0+255),b
  1558                           
  1559                           ;sralloc.c: 387: if ((uSum.byte) > 0x7F)
  1560  0059B6  0E7F               	movlw	127
  1561  0059B8  6592               	cpfsgt	__SRAMmerge@uSum& (0+255),b
  1562  0059BA  EFE1  F02C         	goto	u3291
  1563  0059BE  EFE3  F02C         	goto	u3290
  1564  0059C2                     u3291:
  1565  0059C2  EFFD  F02C         	goto	l3742
  1566  0059C6                     u3290:
  1567  0059C6                     
  1568                           ; BSR set to: 0
  1569                           ;sralloc.c: 388: {;sralloc.c: 389: (*pSegA).byte = 0x7F;
  1570  0059C6  C05F  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1571  0059CA  C060  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1572  0059CE  0E7F               	movlw	127
  1573  0059D0  6EDF               	movwf	indf2,c
  1574  0059D2                     
  1575                           ; BSR set to: 0
  1576                           ;sralloc.c: 390: pSegA += 0x7F;
  1577  0059D2  0E7F               	movlw	127
  1578  0059D4  265F               	addwf	__SRAMmerge@pSegA^0,f,c
  1579  0059D6  0E00               	movlw	0
  1580  0059D8  2260               	addwfc	(__SRAMmerge@pSegA+1)^0,f,c
  1581  0059DA                     
  1582                           ; BSR set to: 0
  1583                           ;sralloc.c: 391: pSegB += uSegB.byte;
  1584  0059DA  5196               	movf	__SRAMmerge@uSegB& (0+255),w,b
  1585  0059DC  0D01               	mullw	1
  1586  0059DE  50F3               	movf	243,w,c
  1587  0059E0  2793               	addwf	__SRAMmerge@pSegB& (0+255),f,b
  1588  0059E2  50F4               	movf	244,w,c
  1589  0059E4  2394               	addwfc	(__SRAMmerge@pSegB+1)& (0+255),f,b
  1590  0059E6                     
  1591                           ; BSR set to: 0
  1592                           ;sralloc.c: 392: (*pSegA).byte = pSegB - pSegA;
  1593  0059E6  505F               	movf	__SRAMmerge@pSegA^0,w,c
  1594  0059E8  5D93               	subwf	__SRAMmerge@pSegB& (0+255),w,b
  1595  0059EA  C05F  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1596  0059EE  C060  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1597  0059F2  6EDF               	movwf	indf2,c
  1598  0059F4                     
  1599                           ; BSR set to: 0
  1600                           ;sralloc.c: 394: return (0x7F);
  1601  0059F4  0E7F               	movlw	127
  1602  0059F6  EF04  F02D         	goto	l411
  1603  0059FA                     l3742:
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;sralloc.c: 398: else;sralloc.c: 399: {;sralloc.c: 400: return ((*pSegA).byte = uSum.byt
      +                          e);
  1607  0059FA  C05F  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1608  0059FE  C060  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1609  005A02  C092  FFDF         	movff	__SRAMmerge@uSum,indf2
  1610  005A06  50DF               	movf	223,w,c
  1611  005A08                     l411:
  1612                           
  1613                           ; BSR set to: 0
  1614  005A08  0012               	return		;funcret
  1615  005A0A                     __end_of__SRAMmerge:
  1616                           	opt callstack 0
  1617                           
  1618 ;; *************** function _Lcd_Init *****************
  1619 ;; Defined at:
  1620 ;;		line 62 in file "lcd.h"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1634 ;;      Params:         0       0       0       0       0       0       0
  1635 ;;      Locals:         0       0       0       0       0       0       0
  1636 ;;      Temps:          1       0       0       0       0       0       0
  1637 ;;      Totals:         1       0       0       0       0       0       0
  1638 ;;Total ram usage:        1 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:   11
  1641 ;; This function calls:
  1642 ;;		_Lcd_Cmd
  1643 ;;		_Lcd_Port
  1644 ;; This function is called by:
  1645 ;;		_user_tasks_config
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text8
  1650  006012                     __ptext8:
  1651                           	opt callstack 0
  1652  006012                     _Lcd_Init:
  1653                           	opt callstack 17
  1654  006012                     
  1655                           ;lcd.h: 64: Lcd_Port(0x00);
  1656  006012  0E00               	movlw	0
  1657  006014  6EE6               	movwf	postinc1,c
  1658  006016  EC81  F030         	call	_Lcd_Port	;wreg free
  1659  00601A                     
  1660                           ;lcd.h: 65: _delay((unsigned long)((20)*(4000000/4000.0)));
  1661  00601A  0E1A               	movlw	26
  1662  00601C  6E5F               	movwf	??_Lcd_Init^0,c
  1663  00601E  0EF8               	movlw	248
  1664  006020                     u3427:
  1665  006020  2EE8               	decfsz	wreg,f,c
  1666  006022  D7FE               	bra	u3427
  1667  006024  2E5F               	decfsz	??_Lcd_Init^0,f,c
  1668  006026  D7FC               	bra	u3427
  1669  006028  D000               	nop2	
  1670  00602A                     
  1671                           ;lcd.h: 66: Lcd_Cmd(0x03);
  1672  00602A  0E03               	movlw	3
  1673  00602C  6EE6               	movwf	postinc1,c
  1674  00602E  ECE5  F032         	call	_Lcd_Cmd	;wreg free
  1675  006032                     
  1676                           ;lcd.h: 67: _delay((unsigned long)((5)*(4000000/4000.0)));
  1677  006032  0E07               	movlw	7
  1678  006034  6E5F               	movwf	??_Lcd_Init^0,c
  1679  006036  0E7D               	movlw	125
  1680  006038                     u3437:
  1681  006038  2EE8               	decfsz	wreg,f,c
  1682  00603A  D7FE               	bra	u3437
  1683  00603C  2E5F               	decfsz	??_Lcd_Init^0,f,c
  1684  00603E  D7FC               	bra	u3437
  1685  006040  F000               	nop	
  1686  006042                     
  1687                           ;lcd.h: 68: Lcd_Cmd(0x03);
  1688  006042  0E03               	movlw	3
  1689  006044  6EE6               	movwf	postinc1,c
  1690  006046  ECE5  F032         	call	_Lcd_Cmd	;wreg free
  1691  00604A                     
  1692                           ;lcd.h: 69: _delay((unsigned long)((11)*(4000000/4000.0)));
  1693  00604A  0E0F               	movlw	15
  1694  00604C  6E5F               	movwf	??_Lcd_Init^0,c
  1695  00604E  0E48               	movlw	72
  1696  006050                     u3447:
  1697  006050  2EE8               	decfsz	wreg,f,c
  1698  006052  D7FE               	bra	u3447
  1699  006054  2E5F               	decfsz	??_Lcd_Init^0,f,c
  1700  006056  D7FC               	bra	u3447
  1701  006058                     
  1702                           ;lcd.h: 70: Lcd_Cmd(0x03);
  1703  006058  0E03               	movlw	3
  1704  00605A  6EE6               	movwf	postinc1,c
  1705  00605C  ECE5  F032         	call	_Lcd_Cmd	;wreg free
  1706  006060                     
  1707                           ;lcd.h: 72: Lcd_Cmd(0x02);
  1708  006060  0E02               	movlw	2
  1709  006062  6EE6               	movwf	postinc1,c
  1710  006064  ECE5  F032         	call	_Lcd_Cmd	;wreg free
  1711  006068                     
  1712                           ;lcd.h: 73: Lcd_Cmd(0x02);
  1713  006068  0E02               	movlw	2
  1714  00606A  6EE6               	movwf	postinc1,c
  1715  00606C  ECE5  F032         	call	_Lcd_Cmd	;wreg free
  1716  006070                     
  1717                           ;lcd.h: 74: Lcd_Cmd(0x08);
  1718  006070  0E08               	movlw	8
  1719  006072  6EE6               	movwf	postinc1,c
  1720  006074  ECE5  F032         	call	_Lcd_Cmd	;wreg free
  1721  006078                     
  1722                           ;lcd.h: 75: Lcd_Cmd(0x00);
  1723  006078  0E00               	movlw	0
  1724  00607A  6EE6               	movwf	postinc1,c
  1725  00607C  ECE5  F032         	call	_Lcd_Cmd	;wreg free
  1726  006080                     
  1727                           ;lcd.h: 76: Lcd_Cmd(0x0C);
  1728  006080  0E0C               	movlw	12
  1729  006082  6EE6               	movwf	postinc1,c
  1730  006084  ECE5  F032         	call	_Lcd_Cmd	;wreg free
  1731  006088                     
  1732                           ;lcd.h: 77: Lcd_Cmd(0x00);
  1733  006088  0E00               	movlw	0
  1734  00608A  6EE6               	movwf	postinc1,c
  1735  00608C  ECE5  F032         	call	_Lcd_Cmd	;wreg free
  1736  006090                     
  1737                           ;lcd.h: 78: Lcd_Cmd(0x06);
  1738  006090  0E06               	movlw	6
  1739  006092  6EE6               	movwf	postinc1,c
  1740  006094  ECE5  F032         	call	_Lcd_Cmd	;wreg free
  1741  006098  0012               	return		;funcret
  1742  00609A                     __end_of_Lcd_Init:
  1743                           	opt callstack 0
  1744                           
  1745 ;; *************** function _Lcd_Cmd *****************
  1746 ;; Defined at:
  1747 ;;		line 26 in file "lcd.h"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  a               1  [STACK] unsigned char 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1  [STACK] void 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1761 ;;      Params:         0       0       0       0       0       0       0
  1762 ;;      Locals:         0       0       0       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0       0       0
  1764 ;;      Totals:         0       0       0       0       0       0       0
  1765 ;;Total ram usage:        0 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:   10
  1768 ;; This function calls:
  1769 ;;		_Lcd_Port
  1770 ;; This function is called by:
  1771 ;;		_Lcd_Clear
  1772 ;;		_Lcd_Set_Cursor
  1773 ;;		_Lcd_Init
  1774 ;;		_Lcd_Shift_Right
  1775 ;;		_Lcd_Shift_Left
  1776 ;; This function uses a reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text9
  1780  0065CA                     __ptext9:
  1781                           	opt callstack 0
  1782  0065CA                     _Lcd_Cmd:
  1783                           	opt callstack 13
  1784  0065CA                     
  1785                           ;lcd.h: 28: RB6 = 0;
  1786  0065CA  9C81               	bcf	3969,6,c	;volatile
  1787  0065CC                     
  1788                           ;lcd.h: 29: Lcd_Port(a);
  1789                           ;stkvar	Lcd_Cmd@a @ sp[(0)+-1]
  1790  0065CC  0EFF               	movlw	-1
  1791  0065CE  50E3               	movf	plusw1,w,c
  1792  0065D0  6EE6               	movwf	postinc1,c
  1793  0065D2  EC81  F030         	call	_Lcd_Port	;wreg free
  1794  0065D6                     
  1795                           ;lcd.h: 30: RB5 = 1;
  1796  0065D6  8A81               	bsf	3969,5,c	;volatile
  1797  0065D8                     
  1798                           ;lcd.h: 31: _delay((unsigned long)((4)*(4000000/4000.0)));
  1799  0065D8  0E06               	movlw	6
  1800  0065DA  6E62               	movwf	btemp^0,c
  1801  0065DC  0E30               	movlw	48
  1802  0065DE                     u3457:
  1803  0065DE  2EE8               	decfsz	wreg,f,c
  1804  0065E0  D7FE               	bra	u3457
  1805  0065E2  2E62               	decfsz	btemp^0,f,c
  1806  0065E4  D7FC               	bra	u3457
  1807  0065E6  D000               	nop2	
  1808  0065E8                     
  1809                           ;lcd.h: 32: RB5 = 0;
  1810  0065E8  9A81               	bcf	3969,5,c	;volatile
  1811  0065EA                     
  1812                           ; _Lcd_Cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsi
      +                          ze = 1, vargsize = 0
  1813  0065EA  52E5               	movf	postdec1,f,c
  1814  0065EC  0012               	return		;funcret
  1815  0065EE                     __end_of_Lcd_Cmd:
  1816                           	opt callstack 0
  1817                           
  1818 ;; *************** function _Lcd_Port *****************
  1819 ;; Defined at:
  1820 ;;		line 4 in file "lcd.h"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  a               1  [STACK] unsigned char 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1  [STACK] void 
  1827 ;; Registers used:
  1828 ;;		wreg, fsr1l, fsr1h
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1834 ;;      Params:         0       0       0       0       0       0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0
  1837 ;;      Totals:         0       0       0       0       0       0       0
  1838 ;;Total ram usage:        0 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    9
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_Lcd_Cmd
  1845 ;;		_Lcd_Init
  1846 ;;		_Lcd_Write_Char
  1847 ;; This function uses a reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text10
  1851  006102                     __ptext10:
  1852                           	opt callstack 0
  1853  006102                     _Lcd_Port:
  1854                           	opt callstack 13
  1855  006102                     
  1856                           ;lcd.h: 6: if(a & 1)
  1857                           ;stkvar	Lcd_Port@a @ sp[(0)+-1]
  1858  006102  0EFF               	movlw	-1
  1859  006104  A0E3               	btfss	plusw1,0,c
  1860  006106  EF87  F030         	goto	u3001
  1861  00610A  EF89  F030         	goto	u3000
  1862  00610E                     u3001:
  1863  00610E  EF8C  F030         	goto	l223
  1864  006112                     u3000:
  1865  006112                     
  1866                           ;lcd.h: 7: RD4 = 1;
  1867  006112  8883               	bsf	3971,4,c	;volatile
  1868  006114  EF8D  F030         	goto	l3424
  1869  006118                     l223:
  1870                           
  1871                           ;lcd.h: 8: else;lcd.h: 9: RD4 = 0;
  1872  006118  9883               	bcf	3971,4,c	;volatile
  1873  00611A                     l3424:
  1874                           
  1875                           ;lcd.h: 11: if(a & 2)
  1876                           ;stkvar	Lcd_Port@a @ sp[(0)+-1]
  1877  00611A  0EFF               	movlw	-1
  1878  00611C  A2E3               	btfss	plusw1,1,c
  1879  00611E  EF93  F030         	goto	u3011
  1880  006122  EF95  F030         	goto	u3010
  1881  006126                     u3011:
  1882  006126  EF98  F030         	goto	l225
  1883  00612A                     u3010:
  1884  00612A                     
  1885                           ;lcd.h: 12: RD5 = 1;
  1886  00612A  8A83               	bsf	3971,5,c	;volatile
  1887  00612C  EF99  F030         	goto	l3428
  1888  006130                     l225:
  1889                           
  1890                           ;lcd.h: 13: else;lcd.h: 14: RD5 = 0;
  1891  006130  9A83               	bcf	3971,5,c	;volatile
  1892  006132                     l3428:
  1893                           
  1894                           ;lcd.h: 16: if(a & 4)
  1895                           ;stkvar	Lcd_Port@a @ sp[(0)+-1]
  1896  006132  0EFF               	movlw	-1
  1897  006134  A4E3               	btfss	plusw1,2,c
  1898  006136  EF9F  F030         	goto	u3021
  1899  00613A  EFA1  F030         	goto	u3020
  1900  00613E                     u3021:
  1901  00613E  EFA4  F030         	goto	l227
  1902  006142                     u3020:
  1903  006142                     
  1904                           ;lcd.h: 17: RD6 = 1;
  1905  006142  8C83               	bsf	3971,6,c	;volatile
  1906  006144  EFA5  F030         	goto	l3432
  1907  006148                     l227:
  1908                           
  1909                           ;lcd.h: 18: else;lcd.h: 19: RD6 = 0;
  1910  006148  9C83               	bcf	3971,6,c	;volatile
  1911  00614A                     l3432:
  1912                           
  1913                           ;lcd.h: 21: if(a & 8)
  1914                           ;stkvar	Lcd_Port@a @ sp[(0)+-1]
  1915  00614A  0EFF               	movlw	-1
  1916  00614C  A6E3               	btfss	plusw1,3,c
  1917  00614E  EFAB  F030         	goto	u3031
  1918  006152  EFAD  F030         	goto	u3030
  1919  006156                     u3031:
  1920  006156  EFB0  F030         	goto	l229
  1921  00615A                     u3030:
  1922  00615A                     
  1923                           ;lcd.h: 22: RD7 = 1;
  1924  00615A  8E83               	bsf	3971,7,c	;volatile
  1925  00615C  EFB1  F030         	goto	l231
  1926  006160                     l229:
  1927                           
  1928                           ;lcd.h: 23: else;lcd.h: 24: RD7 = 0;
  1929  006160  9E83               	bcf	3971,7,c	;volatile
  1930  006162                     l231:
  1931                           
  1932                           ; _Lcd_Port: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, args
      +                          ize = 1, vargsize = 0
  1933  006162  52E5               	movf	postdec1,f,c
  1934  006164  0012               	return		;funcret
  1935  006166                     __end_of_Lcd_Port:
  1936                           	opt callstack 0
  1937                           
  1938 ;; *************** function _Inicializa_ADC *****************
  1939 ;; Defined at:
  1940 ;;		line 17 in file "adc.h"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;		None
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;		None
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1954 ;;      Params:         0       0       0       0       0       0       0
  1955 ;;      Locals:         0       0       0       0       0       0       0
  1956 ;;      Temps:          0       0       0       0       0       0       0
  1957 ;;      Totals:         0       0       0       0       0       0       0
  1958 ;;Total ram usage:        0 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    9
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_user_tasks_config
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text11
  1969  0065EE                     __ptext11:
  1970                           	opt callstack 0
  1971  0065EE                     _Inicializa_ADC:
  1972                           	opt callstack 19
  1973  0065EE                     
  1974                           ;adc.h: 18: TRISAbits.TRISA0 = 1;
  1975  0065EE  8092               	bsf	146,0,c	;volatile
  1976  0065F0                     
  1977                           ;adc.h: 19: ADCON0 = 0;
  1978  0065F0  0E00               	movlw	0
  1979  0065F2  6EC2               	movwf	194,c	;volatile
  1980                           
  1981                           ;adc.h: 20: ADCON1 = 0x0E;
  1982  0065F4  0E0E               	movlw	14
  1983  0065F6  6EC1               	movwf	193,c	;volatile
  1984                           
  1985                           ;adc.h: 21: ADCON2 = 0xD9;
  1986  0065F8  0ED9               	movlw	217
  1987  0065FA  6EC0               	movwf	192,c	;volatile
  1988  0065FC                     
  1989                           ;adc.h: 22: ADCON0bits.ADON = 1;
  1990  0065FC  80C2               	bsf	194,0,c	;volatile
  1991  0065FE  0012               	return		;funcret
  1992  006600                     __end_of_Inicializa_ADC:
  1993                           	opt callstack 0
  1994                           
  1995 ;; *************** function _create_task *****************
  1996 ;; Defined at:
  1997 ;;		line 14 in file "kernel.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  id              2    0[BANK0 ] unsigned int 
  2000 ;;  prior           2    2[BANK0 ] unsigned int 
  2001 ;;  f               2    4[BANK0 ] PTR FTN()void 
  2002 ;;		 -> task_idle(1), task_tres(1), task_dois(1), task_um(1), 
  2003 ;;		 -> task_lcd(1), 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;		None
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  2    0[BANK0 ] unsigned int 
  2008 ;; Registers used:
  2009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2015 ;;      Params:         0       6       0       0       0       0       0
  2016 ;;      Locals:         0       0       0       0       0       0       0
  2017 ;;      Temps:          2       0       0       0       0       0       0
  2018 ;;      Totals:         2       6       0       0       0       0       0
  2019 ;;Total ram usage:        8 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:   10
  2022 ;; This function calls:
  2023 ;;		___wmul
  2024 ;; This function is called by:
  2025 ;;		_main
  2026 ;;		_os_config
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text12
  2031  004D7E                     __ptext12:
  2032                           	opt callstack 0
  2033  004D7E                     _create_task:
  2034                           	opt callstack 19
  2035  004D7E                     
  2036                           ;kernel.c: 16: if (f_aptos.size >= 6)
  2037  004D7E  EE23  F048         	lfsr	2,_f_aptos+678
  2038  004D82  0E01               	movlw	1
  2039  004D84  BEDB               	btfsc	plusw2,7,c
  2040  004D86  EFCF  F026         	goto	u3361
  2041  004D8A  0E01               	movlw	1
  2042  004D8C  50DB               	movf	plusw2,w,c
  2043  004D8E  E109               	bnz	u3360
  2044  004D90  0E06               	movlw	6
  2045  004D92  5CDE               	subwf	postinc2,w,c
  2046  004D94  A0D8               	btfss	status,0,c
  2047  004D96  EFCF  F026         	goto	u3361
  2048  004D9A  EFD1  F026         	goto	u3360
  2049  004D9E                     u3361:
  2050  004D9E  EFD8  F026         	goto	l3804
  2051  004DA2                     u3360:
  2052  004DA2                     
  2053                           ;kernel.c: 17: return 0;
  2054  004DA2  0E00               	movlw	0
  2055  004DA4  0100               	movlb	0	; () banked
  2056  004DA6  6F93               	movwf	(?_create_task+1)& (0+255),b
  2057  004DA8  0E00               	movlw	0
  2058  004DAA  6F92               	movwf	?_create_task& (0+255),b
  2059  004DAC  EF7C  F027         	goto	l70
  2060  004DB0                     l3804:
  2061                           
  2062                           ;kernel.c: 19: f_aptos.APTOS[f_aptos.size].task_id = id;
  2063  004DB0  0E71               	movlw	113
  2064  004DB2  6EE6               	movwf	postinc1,c
  2065  004DB4  0E00               	movlw	0
  2066  004DB6  6EE6               	movwf	postinc1,c
  2067  004DB8  EE23  F048         	lfsr	2,_f_aptos+678
  2068  004DBC  CFDE F05F          	movff	postinc2,??_create_task
  2069  004DC0  CFDD F060          	movff	postdec2,??_create_task+1
  2070  004DC4  C05F  FFE6         	movff	??_create_task,postinc1
  2071  004DC8  C060  FFE6         	movff	??_create_task+1,postinc1
  2072  004DCC  ECBE  F02F         	call	___wmul	;wreg free
  2073  004DD0  0EA2               	movlw	low _f_aptos
  2074  004DD2  2462               	addwf	btemp^0,w,c
  2075  004DD4  6ED9               	movwf	fsr2l,c
  2076  004DD6  0E00               	movlw	high _f_aptos
  2077  004DD8  2063               	addwfc	(btemp+1)^0,w,c
  2078  004DDA  6EDA               	movwf	fsr2h,c
  2079  004DDC  C092  FFDE         	movff	create_task@id,postinc2
  2080  004DE0  C093  FFDD         	movff	create_task@id+1,postdec2
  2081                           
  2082                           ;kernel.c: 20: f_aptos.APTOS[f_aptos.size].task_priority = prior;
  2083  004DE4  0E71               	movlw	113
  2084  004DE6  6EE6               	movwf	postinc1,c
  2085  004DE8  0E00               	movlw	0
  2086  004DEA  6EE6               	movwf	postinc1,c
  2087  004DEC  EE23  F048         	lfsr	2,_f_aptos+678
  2088  004DF0  CFDE F05F          	movff	postinc2,??_create_task
  2089  004DF4  CFDD F060          	movff	postdec2,??_create_task+1
  2090  004DF8  C05F  FFE6         	movff	??_create_task,postinc1
  2091  004DFC  C060  FFE6         	movff	??_create_task+1,postinc1
  2092  004E00  ECBE  F02F         	call	___wmul	;wreg free
  2093  004E04  0EA4               	movlw	low (_f_aptos+2)
  2094  004E06  2462               	addwf	btemp^0,w,c
  2095  004E08  6ED9               	movwf	fsr2l,c
  2096  004E0A  0E00               	movlw	high (_f_aptos+2)
  2097  004E0C  2063               	addwfc	(btemp+1)^0,w,c
  2098  004E0E  6EDA               	movwf	fsr2h,c
  2099  004E10  C094  FFDE         	movff	create_task@prior,postinc2
  2100  004E14  C095  FFDD         	movff	create_task@prior+1,postdec2
  2101                           
  2102                           ;kernel.c: 21: f_aptos.APTOS[f_aptos.size].task_ptr = f;
  2103  004E18  0E71               	movlw	113
  2104  004E1A  6EE6               	movwf	postinc1,c
  2105  004E1C  0E00               	movlw	0
  2106  004E1E  6EE6               	movwf	postinc1,c
  2107  004E20  EE23  F048         	lfsr	2,_f_aptos+678
  2108  004E24  CFDE F05F          	movff	postinc2,??_create_task
  2109  004E28  CFDD F060          	movff	postdec2,??_create_task+1
  2110  004E2C  C05F  FFE6         	movff	??_create_task,postinc1
  2111  004E30  C060  FFE6         	movff	??_create_task+1,postinc1
  2112  004E34  ECBE  F02F         	call	___wmul	;wreg free
  2113  004E38  0E0F               	movlw	low (_f_aptos+109)
  2114  004E3A  2462               	addwf	btemp^0,w,c
  2115  004E3C  6ED9               	movwf	fsr2l,c
  2116  004E3E  0E01               	movlw	high (_f_aptos+109)
  2117  004E40  2063               	addwfc	(btemp+1)^0,w,c
  2118  004E42  6EDA               	movwf	fsr2h,c
  2119  004E44  C096  FFDE         	movff	create_task@f,postinc2
  2120  004E48  C097  FFDD         	movff	create_task@f+1,postdec2
  2121                           
  2122                           ;kernel.c: 22: f_aptos.APTOS[f_aptos.size].task_delay_time = 0;
  2123  004E4C  0E71               	movlw	113
  2124  004E4E  6EE6               	movwf	postinc1,c
  2125  004E50  0E00               	movlw	0
  2126  004E52  6EE6               	movwf	postinc1,c
  2127  004E54  EE23  F048         	lfsr	2,_f_aptos+678
  2128  004E58  CFDE F05F          	movff	postinc2,??_create_task
  2129  004E5C  CFDD F060          	movff	postdec2,??_create_task+1
  2130  004E60  C05F  FFE6         	movff	??_create_task,postinc1
  2131  004E64  C060  FFE6         	movff	??_create_task+1,postinc1
  2132  004E68  ECBE  F02F         	call	___wmul	;wreg free
  2133  004E6C  0E11               	movlw	low (_f_aptos+111)
  2134  004E6E  2462               	addwf	btemp^0,w,c
  2135  004E70  6ED9               	movwf	fsr2l,c
  2136  004E72  0E01               	movlw	high (_f_aptos+111)
  2137  004E74  2063               	addwfc	(btemp+1)^0,w,c
  2138  004E76  6EDA               	movwf	fsr2h,c
  2139  004E78  0E00               	movlw	0
  2140  004E7A  6EDE               	movwf	postinc2,c
  2141  004E7C  0E00               	movlw	0
  2142  004E7E  6EDD               	movwf	postdec2,c
  2143                           
  2144                           ;kernel.c: 23: f_aptos.APTOS[f_aptos.size].task_state = READY;
  2145  004E80  0E71               	movlw	113
  2146  004E82  6EE6               	movwf	postinc1,c
  2147  004E84  0E00               	movlw	0
  2148  004E86  6EE6               	movwf	postinc1,c
  2149  004E88  EE23  F048         	lfsr	2,_f_aptos+678
  2150  004E8C  CFDE F05F          	movff	postinc2,??_create_task
  2151  004E90  CFDD F060          	movff	postdec2,??_create_task+1
  2152  004E94  C05F  FFE6         	movff	??_create_task,postinc1
  2153  004E98  C060  FFE6         	movff	??_create_task+1,postinc1
  2154  004E9C  ECBE  F02F         	call	___wmul	;wreg free
  2155  004EA0  0EA6               	movlw	low (_f_aptos+4)
  2156  004EA2  2462               	addwf	btemp^0,w,c
  2157  004EA4  6ED9               	movwf	fsr2l,c
  2158  004EA6  0E00               	movlw	high (_f_aptos+4)
  2159  004EA8  2063               	addwfc	(btemp+1)^0,w,c
  2160  004EAA  6EDA               	movwf	fsr2h,c
  2161  004EAC  0E01               	movlw	1
  2162  004EAE  6EDF               	movwf	indf2,c
  2163                           
  2164                           ;kernel.c: 24: f_aptos.APTOS[f_aptos.size].task_stack.stack_size = 0;
  2165  004EB0  0E71               	movlw	113
  2166  004EB2  6EE6               	movwf	postinc1,c
  2167  004EB4  0E00               	movlw	0
  2168  004EB6  6EE6               	movwf	postinc1,c
  2169  004EB8  EE23  F048         	lfsr	2,_f_aptos+678
  2170  004EBC  CFDE F05F          	movff	postinc2,??_create_task
  2171  004EC0  CFDD F060          	movff	postdec2,??_create_task+1
  2172  004EC4  C05F  FFE6         	movff	??_create_task,postinc1
  2173  004EC8  C060  FFE6         	movff	??_create_task+1,postinc1
  2174  004ECC  ECBE  F02F         	call	___wmul	;wreg free
  2175  004ED0  0EA7               	movlw	low (_f_aptos+5)
  2176  004ED2  2462               	addwf	btemp^0,w,c
  2177  004ED4  6ED9               	movwf	fsr2l,c
  2178  004ED6  0E00               	movlw	high (_f_aptos+5)
  2179  004ED8  2063               	addwfc	(btemp+1)^0,w,c
  2180  004EDA  6EDA               	movwf	fsr2h,c
  2181  004EDC  0E00               	movlw	0
  2182  004EDE  6EDE               	movwf	postinc2,c
  2183  004EE0  0E00               	movlw	0
  2184  004EE2  6EDD               	movwf	postdec2,c
  2185  004EE4                     
  2186                           ;kernel.c: 26: f_aptos.size += 1;
  2187  004EE4  EE23  F048         	lfsr	2,_f_aptos+678
  2188  004EE8  2ADE               	incf	postinc2,f,c
  2189  004EEA  0E00               	movlw	0
  2190  004EEC  22DD               	addwfc	postdec2,f,c
  2191  004EEE                     
  2192                           ;kernel.c: 28: return 1;
  2193  004EEE  0E00               	movlw	0
  2194  004EF0  0100               	movlb	0	; () banked
  2195  004EF2  6F93               	movwf	(?_create_task+1)& (0+255),b
  2196  004EF4  0E01               	movlw	1
  2197  004EF6  6F92               	movwf	?_create_task& (0+255),b
  2198  004EF8                     l70:
  2199                           
  2200                           ; BSR set to: 0
  2201  004EF8  0012               	return		;funcret
  2202  004EFA                     __end_of_create_task:
  2203                           	opt callstack 0
  2204                           
  2205 ;; *************** function ___wmul *****************
  2206 ;; Defined at:
  2207 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  multiplier      2  [STACK] unsigned int 
  2210 ;;  multiplicand    2  [STACK] unsigned int 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;  product         2  [STACK] unsigned int 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  2  [STACK] unsigned int 
  2215 ;; Registers used:
  2216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2222 ;;      Params:         0       0       0       0       0       0       0
  2223 ;;      Locals:         0       0       0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0       0       0
  2225 ;;      Totals:         0       0       0       0       0       0       0
  2226 ;;Total ram usage:        0 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    9
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_create_task
  2233 ;;		_sprintf
  2234 ;;		_get_tid
  2235 ;;		_delay_os
  2236 ;;		_rr_scheduler_1
  2237 ;;		_prior_scheduler
  2238 ;;		_f_save_context
  2239 ;;		_f_restore_context
  2240 ;;		_delay_decrement
  2241 ;; This function uses a reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text13
  2245  005F7C                     __ptext13:
  2246                           	opt callstack 0
  2247  005F7C                     ___wmul:
  2248                           	opt callstack 0
  2249                           
  2250                           ; BSR set to: 0
  2251                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2252  005F7C  52E6               	movf	postinc1,f,c
  2253  005F7E  52E6               	movf	postinc1,f,c
  2254  005F80                     
  2255                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  2256  005F80  0EFA               	movlw	-6
  2257  005F82  CFE3 F06D          	movff	plusw1,btemp+11
  2258                           
  2259                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  2260  005F86  0EFC               	movlw	-4
  2261  005F88  50E3               	movf	plusw1,w,c
  2262  005F8A  026D               	mulwf	(btemp+11)^0,c
  2263                           
  2264                           ;stkvar	___wmul@product @ sp[(-2)+0]
  2265  005F8C  0EFE               	movlw	-2
  2266  005F8E  CFF3 FFE3          	movff	prodl,plusw1
  2267  005F92  0EFF               	movlw	-1
  2268  005F94  CFF4 FFE3          	movff	prodh,plusw1
  2269  005F98                     
  2270                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  2271  005F98  0EFB               	movlw	251
  2272  005F9A  24E1               	addwf	fsr1l,w,c
  2273  005F9C  6ED9               	movwf	fsr2l,c
  2274  005F9E  0EFF               	movlw	255
  2275  005FA0  20E2               	addwfc	fsr1h,w,c
  2276  005FA2  6EDA               	movwf	fsr2h,c
  2277  005FA4  50DF               	movf	indf2,w,c
  2278  005FA6  6E6D               	movwf	(btemp+11)^0,c
  2279                           
  2280                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  2281  005FA8  0EFC               	movlw	-4
  2282  005FAA  50E3               	movf	plusw1,w,c
  2283  005FAC  026D               	mulwf	(btemp+11)^0,c
  2284  005FAE  CFF3 FFF4          	movff	prodl,prodh
  2285  005FB2  6AF3               	clrf	243,c
  2286                           
  2287                           ;stkvar	___wmul@product @ sp[(-2)+0]
  2288  005FB4  50E1               	movf	fsr1l,w,c
  2289  005FB6  0FFE               	addlw	-2
  2290  005FB8  6ED9               	movwf	fsr2l,c
  2291  005FBA  50E2               	movf	fsr1h,w,c
  2292  005FBC  6EDA               	movwf	fsr2h,c
  2293  005FBE  0EFF               	movlw	255
  2294  005FC0  22DA               	addwfc	fsr2h,f,c
  2295  005FC2  50F3               	movf	243,w,c
  2296  005FC4  26DE               	addwf	postinc2,f,c
  2297  005FC6  50F4               	movf	244,w,c
  2298  005FC8  22DD               	addwfc	postdec2,f,c
  2299  005FCA                     
  2300                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  2301  005FCA  0EFA               	movlw	-6
  2302  005FCC  CFE3 F06D          	movff	plusw1,btemp+11
  2303                           
  2304                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  2305  005FD0  0EFD               	movlw	253
  2306  005FD2  24E1               	addwf	fsr1l,w,c
  2307  005FD4  6ED9               	movwf	fsr2l,c
  2308  005FD6  0EFF               	movlw	255
  2309  005FD8  20E2               	addwfc	fsr1h,w,c
  2310  005FDA  6EDA               	movwf	fsr2h,c
  2311  005FDC  50DF               	movf	indf2,w,c
  2312  005FDE  026D               	mulwf	(btemp+11)^0,c
  2313  005FE0  CFF3 FFF4          	movff	prodl,prodh
  2314  005FE4  6AF3               	clrf	243,c
  2315                           
  2316                           ;stkvar	___wmul@product @ sp[(-2)+0]
  2317  005FE6  50E1               	movf	fsr1l,w,c
  2318  005FE8  0FFE               	addlw	-2
  2319  005FEA  6ED9               	movwf	fsr2l,c
  2320  005FEC  50E2               	movf	fsr1h,w,c
  2321  005FEE  6EDA               	movwf	fsr2h,c
  2322  005FF0  0EFF               	movlw	255
  2323  005FF2  22DA               	addwfc	fsr2h,f,c
  2324  005FF4  50F3               	movf	243,w,c
  2325  005FF6  26DE               	addwf	postinc2,f,c
  2326  005FF8  50F4               	movf	244,w,c
  2327  005FFA  22DD               	addwfc	postdec2,f,c
  2328  005FFC                     
  2329                           ;stkvar	___wmul@product @ sp[(-2)+0]
  2330  005FFC  0EFE               	movlw	-2
  2331  005FFE  CFE3 F062          	movff	plusw1,btemp
  2332  006002  0EFF               	movlw	-1
  2333  006004  CFE3 F063          	movff	plusw1,btemp+1
  2334  006008                     
  2335                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  2336  006008  0EFA               	movlw	250
  2337  00600A  26E1               	addwf	fsr1l,f,c
  2338  00600C  0EFF               	movlw	255
  2339  00600E  22E2               	addwfc	fsr1h,f,c
  2340  006010  0012               	return		;funcret
  2341  006012                     __end_of___wmul:
  2342                           	opt callstack 0
  2343                           
  2344 ;; *************** function _conf_timer0 *****************
  2345 ;; Defined at:
  2346 ;;		line 12 in file "timer_0.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg, status,2
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2360 ;;      Params:         0       0       0       0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0
  2363 ;;      Totals:         0       0       0       0       0       0       0
  2364 ;;Total ram usage:        0 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    9
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_os_config
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text14
  2375  006600                     __ptext14:
  2376                           	opt callstack 0
  2377  006600                     _conf_timer0:
  2378                           	opt callstack 20
  2379  006600                     
  2380                           ;timer_0.c: 14: INTCONbits.PEIE = 1;
  2381  006600  8CF2               	bsf	242,6,c	;volatile
  2382                           
  2383                           ;timer_0.c: 15: INTCONbits.TMR0IF = 0;
  2384  006602  94F2               	bcf	242,2,c	;volatile
  2385                           
  2386                           ;timer_0.c: 16: T0CONbits.T0CS = 0;
  2387  006604  9AD5               	bcf	213,5,c	;volatile
  2388                           
  2389                           ;timer_0.c: 17: T0CONbits.PSA = 0;
  2390  006606  96D5               	bcf	213,3,c	;volatile
  2391  006608                     
  2392                           ;timer_0.c: 18: T0CONbits.T0PS = 0b111;
  2393  006608  0E07               	movlw	7
  2394  00660A  12D5               	iorwf	213,f,c	;volatile
  2395                           
  2396                           ;timer_0.c: 19: TMR0L = 252;
  2397  00660C  0EFC               	movlw	252
  2398  00660E  6ED6               	movwf	214,c	;volatile
  2399  006610  0012               	return		;funcret
  2400  006612                     __end_of_conf_timer0:
  2401                           	opt callstack 0
  2402                           
  2403 ;; *************** function _SRAMInitHeap *****************
  2404 ;; Defined at:
  2405 ;;		line 313 in file "sralloc.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;		None
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  count           2    2[BANK0 ] unsigned int 
  2410 ;;  pHeap           2    0[BANK0 ] PTR unsigned char 
  2411 ;;		 -> _uDynamicHeap(512), 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      void 
  2414 ;; Registers used:
  2415 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2421 ;;      Params:         0       0       0       0       0       0       0
  2422 ;;      Locals:         0       4       0       0       0       0       0
  2423 ;;      Temps:          0       0       0       0       0       0       0
  2424 ;;      Totals:         0       4       0       0       0       0       0
  2425 ;;Total ram usage:        4 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:    9
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_main
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text15
  2436  00609A                     __ptext15:
  2437                           	opt callstack 0
  2438  00609A                     _SRAMInitHeap:
  2439                           	opt callstack 21
  2440  00609A                     
  2441                           ;sralloc.c: 315: unsigned char *  pHeap;;sralloc.c: 316: unsigned int count;;sralloc.c: 
      +                          318: pHeap = _uDynamicHeap;
  2442  00609A  0E4C               	movlw	low __uDynamicHeap
  2443  00609C  0100               	movlb	0	; () banked
  2444  00609E  6F92               	movwf	SRAMInitHeap@pHeap& (0+255),b
  2445  0060A0  0E03               	movlw	high __uDynamicHeap
  2446  0060A2  6F93               	movwf	(SRAMInitHeap@pHeap+1)& (0+255),b
  2447  0060A4                     
  2448                           ; BSR set to: 0
  2449                           ;sralloc.c: 319: count = 0x200-1;
  2450  0060A4  0E01               	movlw	1
  2451  0060A6  6F95               	movwf	(SRAMInitHeap@count+1)& (0+255),b
  2452  0060A8  6994               	setf	SRAMInitHeap@count& (0+255),b
  2453  0060AA                     l3844:
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;sralloc.c: 322: {;sralloc.c: 323: if (count > 0x7F)
  2457  0060AA  5195               	movf	(SRAMInitHeap@count+1)& (0+255),w,b
  2458  0060AC  E109               	bnz	u3370
  2459  0060AE  0E80               	movlw	128
  2460  0060B0  5D94               	subwf	SRAMInitHeap@count& (0+255),w,b
  2461  0060B2  A0D8               	btfss	status,0,c
  2462  0060B4  EF5E  F030         	goto	u3371
  2463  0060B8  EF60  F030         	goto	u3370
  2464  0060BC                     u3371:
  2465  0060BC  EF72  F030         	goto	l3852
  2466  0060C0                     u3370:
  2467  0060C0                     
  2468                           ; BSR set to: 0
  2469                           ;sralloc.c: 324: {;sralloc.c: 325: *pHeap = 0x7F;
  2470  0060C0  C092  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  2471  0060C4  C093  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  2472  0060C8  0E7F               	movlw	127
  2473  0060CA  6EDF               	movwf	indf2,c
  2474  0060CC                     
  2475                           ; BSR set to: 0
  2476                           ;sralloc.c: 326: pHeap += 0x7F;
  2477  0060CC  0E7F               	movlw	127
  2478  0060CE  2792               	addwf	SRAMInitHeap@pHeap& (0+255),f,b
  2479  0060D0  0E00               	movlw	0
  2480  0060D2  2393               	addwfc	(SRAMInitHeap@pHeap+1)& (0+255),f,b
  2481  0060D4                     
  2482                           ; BSR set to: 0
  2483                           ;sralloc.c: 327: count = count - 0x7F;
  2484  0060D4  0E81               	movlw	129
  2485  0060D6  2594               	addwf	SRAMInitHeap@count& (0+255),w,b
  2486  0060D8  6F94               	movwf	SRAMInitHeap@count& (0+255),b
  2487  0060DA  0EFF               	movlw	255
  2488  0060DC  2195               	addwfc	(SRAMInitHeap@count+1)& (0+255),w,b
  2489  0060DE  6F95               	movwf	(SRAMInitHeap@count+1)& (0+255),b
  2490                           
  2491                           ;sralloc.c: 328: }
  2492  0060E0  EF55  F030         	goto	l3844
  2493  0060E4                     l3852:
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;sralloc.c: 329: else;sralloc.c: 330: {;sralloc.c: 331: *pHeap = count;
  2497  0060E4  C092  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  2498  0060E8  C093  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  2499  0060EC  C094  FFDF         	movff	SRAMInitHeap@count,indf2
  2500  0060F0                     
  2501                           ; BSR set to: 0
  2502                           ;sralloc.c: 332: *(pHeap + count) = 0;
  2503  0060F0  5194               	movf	SRAMInitHeap@count& (0+255),w,b
  2504  0060F2  2592               	addwf	SRAMInitHeap@pHeap& (0+255),w,b
  2505  0060F4  6ED9               	movwf	fsr2l,c
  2506  0060F6  5195               	movf	(SRAMInitHeap@count+1)& (0+255),w,b
  2507  0060F8  2193               	addwfc	(SRAMInitHeap@pHeap+1)& (0+255),w,b
  2508  0060FA  6EDA               	movwf	fsr2h,c
  2509  0060FC  0E00               	movlw	0
  2510  0060FE  6EDF               	movwf	indf2,c
  2511  006100                     
  2512                           ; BSR set to: 0
  2513  006100  0012               	return		;funcret
  2514  006102                     __end_of_SRAMInitHeap:
  2515                           	opt callstack 0
  2516                           
  2517 ;; *************** function _task_lcd *****************
  2518 ;; Defined at:
  2519 ;;		line 103 in file "user_tasks.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  s              16  [STACK] unsigned char [16]
  2524 ;;  percentualBa    4  [STACK] float 
  2525 ;;  tensao          4  [STACK] float 
  2526 ;;  tensaoBateri    2  [STACK] unsigned int 
  2527 ;;  i               1    0        unsigned char 
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1  [STACK] void 
  2530 ;; Registers used:
  2531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2537 ;;      Params:         0       0       0       0       0       0       0
  2538 ;;      Locals:         0       0       0       0       0       0       0
  2539 ;;      Temps:          0       0       0       0       0       0       0
  2540 ;;      Totals:         0       0       0       0       0       0       0
  2541 ;;Total ram usage:        0 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:    8
  2544 ;; This function calls:
  2545 ;;		_Lcd_Clear
  2546 ;;		_Lcd_Set_Cursor
  2547 ;;		_Lcd_Write_String
  2548 ;;		_LerADC
  2549 ;;		_MsDelay
  2550 ;;		___fldiv
  2551 ;;		___flge
  2552 ;;		___flmul
  2553 ;;		___xxtofl
  2554 ;;		_pipe_write
  2555 ;;		_sem_post
  2556 ;;		_sem_wait
  2557 ;;		_sprintf
  2558 ;; This function is called by:
  2559 ;;		_main
  2560 ;; This function uses a reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text16
  2564  003A36                     __ptext16:
  2565                           	opt callstack 0
  2566  003A36                     _task_lcd:
  2567                           	opt callstack 0
  2568                           
  2569                           ; BSR set to: 0
  2570                           ; autosize = 26, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  2571  003A36  0E1A               	movlw	26
  2572  003A38  26E1               	addwf	fsr1l,f,c
  2573  003A3A  0E00               	movlw	0
  2574  003A3C  22E2               	addwfc	fsr1h,f,c
  2575  003A3E                     l308:
  2576  003A3E                     
  2577                           ;user_tasks.c: 111: MsDelay(500);
  2578  003A3E  0EF4               	movlw	244
  2579  003A40  6EE6               	movwf	postinc1,c
  2580  003A42  0E01               	movlw	1
  2581  003A44  6EE6               	movwf	postinc1,c
  2582  003A46  EC2B  F02E         	call	_MsDelay	;wreg free
  2583  003A4A                     
  2584                           ;user_tasks.c: 114: sem_wait(&sem1);
  2585  003A4A  0E29               	movlw	low _sem1
  2586  003A4C  6EE6               	movwf	postinc1,c
  2587  003A4E  0E00               	movlw	high _sem1
  2588  003A50  6EE6               	movwf	postinc1,c
  2589  003A52  EC32  F02B         	call	_sem_wait	;wreg free
  2590  003A56                     
  2591                           ;user_tasks.c: 116: tensaoBateria = LerADC();
  2592  003A56  EC47  F031         	call	_LerADC	;wreg free
  2593                           
  2594                           ;stkvar	task_lcd@tensaoBateria @ sp[(-26)+24]
  2595  003A5A  0EFE               	movlw	-2
  2596  003A5C  C062  FFE3         	movff	btemp,plusw1
  2597  003A60  0EFF               	movlw	-1
  2598  003A62  C063  FFE3         	movff	btemp+1,plusw1
  2599  003A66                     
  2600                           ;user_tasks.c: 117: tensao = tensaoBateria*5.0/1024.0;
  2601  003A66  0E00               	movlw	0
  2602  003A68  6EE6               	movwf	postinc1,c
  2603  003A6A  0E00               	movlw	0
  2604  003A6C  6EE6               	movwf	postinc1,c
  2605  003A6E  0E80               	movlw	128
  2606  003A70  6EE6               	movwf	postinc1,c
  2607  003A72  0E44               	movlw	68
  2608  003A74  6EE6               	movwf	postinc1,c
  2609  003A76  0E00               	movlw	0
  2610  003A78  6EE6               	movwf	postinc1,c
  2611  003A7A  0E00               	movlw	0
  2612  003A7C  6EE6               	movwf	postinc1,c
  2613  003A7E  0EA0               	movlw	160
  2614  003A80  6EE6               	movwf	postinc1,c
  2615  003A82  0E40               	movlw	64
  2616  003A84  6EE6               	movwf	postinc1,c
  2617                           
  2618                           ;stkvar	task_lcd@tensaoBateria @ sp[(-34)+24]
  2619  003A86  0EF6               	movlw	-10
  2620  003A88  CFE3 F06C          	movff	plusw1,btemp+10
  2621  003A8C  0EF7               	movlw	-9
  2622  003A8E  CFE3 F06D          	movff	plusw1,btemp+11
  2623  003A92  506C               	movf	(btemp+10)^0,w,c
  2624  003A94  6E66               	movwf	(btemp+4)^0,c
  2625  003A96  506D               	movf	(btemp+11)^0,w,c
  2626  003A98  6E67               	movwf	(btemp+5)^0,c
  2627  003A9A  6A68               	clrf	(btemp+6)^0,c
  2628  003A9C  6A69               	clrf	(btemp+7)^0,c
  2629  003A9E  C066  FFE6         	movff	btemp+4,postinc1
  2630  003AA2  C067  FFE6         	movff	btemp+5,postinc1
  2631  003AA6  C068  FFE6         	movff	btemp+6,postinc1
  2632  003AAA  C069  FFE6         	movff	btemp+7,postinc1
  2633  003AAE  0E00               	movlw	0
  2634  003AB0  6EE6               	movwf	postinc1,c
  2635  003AB2  ECD1  F01F         	call	___xxtofl	;wreg free
  2636  003AB6  C062  FFE6         	movff	btemp,postinc1
  2637  003ABA  C063  FFE6         	movff	btemp+1,postinc1
  2638  003ABE  C064  FFE6         	movff	btemp+2,postinc1
  2639  003AC2  C065  FFE6         	movff	btemp+3,postinc1
  2640  003AC6  EC32  F011         	call	___flmul	;wreg free
  2641  003ACA  C062  FFE6         	movff	btemp,postinc1
  2642  003ACE  C063  FFE6         	movff	btemp+1,postinc1
  2643  003AD2  C064  FFE6         	movff	btemp+2,postinc1
  2644  003AD6  C065  FFE6         	movff	btemp+3,postinc1
  2645  003ADA  EC5F  F015         	call	___fldiv	;wreg free
  2646                           
  2647                           ;stkvar	task_lcd@tensao @ sp[(-26)+20]
  2648  003ADE  0EFA               	movlw	-6
  2649  003AE0  C062  FFE3         	movff	btemp,plusw1
  2650  003AE4  0EFB               	movlw	-5
  2651  003AE6  C063  FFE3         	movff	btemp+1,plusw1
  2652  003AEA  0EFC               	movlw	-4
  2653  003AEC  C064  FFE3         	movff	btemp+2,plusw1
  2654  003AF0  0EFD               	movlw	-3
  2655  003AF2  C065  FFE3         	movff	btemp+3,plusw1
  2656  003AF6                     
  2657                           ;user_tasks.c: 118: percentualBateria = tensao * 20.0;
  2658  003AF6  0E00               	movlw	0
  2659  003AF8  6EE6               	movwf	postinc1,c
  2660  003AFA  0E00               	movlw	0
  2661  003AFC  6EE6               	movwf	postinc1,c
  2662  003AFE  0EA0               	movlw	160
  2663  003B00  6EE6               	movwf	postinc1,c
  2664  003B02  0E41               	movlw	65
  2665  003B04  6EE6               	movwf	postinc1,c
  2666                           
  2667                           ;stkvar	task_lcd@tensao @ sp[(-30)+20]
  2668  003B06  0EF6               	movlw	-10
  2669  003B08  CFE3 FFE6          	movff	plusw1,postinc1
  2670  003B0C  CFE3 FFE6          	movff	plusw1,postinc1
  2671  003B10  CFE3 FFE6          	movff	plusw1,postinc1
  2672  003B14  CFE3 FFE6          	movff	plusw1,postinc1
  2673  003B18  EC32  F011         	call	___flmul	;wreg free
  2674                           
  2675                           ;stkvar	task_lcd@percentualBateria @ sp[(-26)+16]
  2676  003B1C  0EF6               	movlw	-10
  2677  003B1E  C062  FFE3         	movff	btemp,plusw1
  2678  003B22  0EF7               	movlw	-9
  2679  003B24  C063  FFE3         	movff	btemp+1,plusw1
  2680  003B28  0EF8               	movlw	-8
  2681  003B2A  C064  FFE3         	movff	btemp+2,plusw1
  2682  003B2E  0EF9               	movlw	-7
  2683  003B30  C065  FFE3         	movff	btemp+3,plusw1
  2684  003B34                     
  2685                           ;user_tasks.c: 120: Lcd_Clear();
  2686  003B34  EC09  F033         	call	_Lcd_Clear	;wreg free
  2687  003B38                     
  2688                           ;user_tasks.c: 121: Lcd_Set_Cursor(1,5);
  2689  003B38  0E05               	movlw	5
  2690  003B3A  6EE6               	movwf	postinc1,c
  2691  003B3C  0E01               	movlw	1
  2692  003B3E  6EE6               	movwf	postinc1,c
  2693  003B40  EC23  F02F         	call	_Lcd_Set_Cursor	;wreg free
  2694  003B44                     
  2695                           ;user_tasks.c: 122: Lcd_Write_String("BATTERY %");
  2696  003B44  0E91               	movlw	low STR_1
  2697  003B46  6EE6               	movwf	postinc1,c
  2698  003B48  0E06               	movlw	high STR_1
  2699  003B4A  6EE6               	movwf	postinc1,c
  2700  003B4C  EC72  F02D         	call	_Lcd_Write_String	;wreg free
  2701  003B50                     
  2702                           ;user_tasks.c: 123: Lcd_Set_Cursor(2,5);
  2703  003B50  0E05               	movlw	5
  2704  003B52  6EE6               	movwf	postinc1,c
  2705  003B54  0E02               	movlw	2
  2706  003B56  6EE6               	movwf	postinc1,c
  2707  003B58  EC23  F02F         	call	_Lcd_Set_Cursor	;wreg free
  2708  003B5C                     
  2709                           ;user_tasks.c: 125: sprintf(s, "%04.2f", percentualBateria);
  2710                           ;stkvar	task_lcd@percentualBateria @ sp[(-26)+16]
  2711  003B5C  0EF6               	movlw	-10
  2712  003B5E  CFE3 FFE6          	movff	plusw1,postinc1
  2713  003B62  CFE3 FFE6          	movff	plusw1,postinc1
  2714  003B66  CFE3 FFE6          	movff	plusw1,postinc1
  2715  003B6A  CFE3 FFE6          	movff	plusw1,postinc1
  2716  003B6E  0E9B               	movlw	low STR_2
  2717  003B70  6EE6               	movwf	postinc1,c
  2718  003B72  0E06               	movlw	high STR_2
  2719  003B74  6EE6               	movwf	postinc1,c
  2720                           
  2721                           ;stkvar	task_lcd@s @ sp[(-32)+0]
  2722  003B76  0EE0               	movlw	224
  2723  003B78  24E1               	addwf	fsr1l,w,c
  2724  003B7A  6E62               	movwf	btemp^0,c
  2725  003B7C  0EFF               	movlw	255
  2726  003B7E  20E2               	addwfc	fsr1h,w,c
  2727  003B80  6E63               	movwf	(btemp+1)^0,c
  2728  003B82  C062  FFE6         	movff	btemp,postinc1
  2729  003B86  C063  FFE6         	movff	btemp+1,postinc1
  2730  003B8A  0E08               	movlw	8
  2731  003B8C  6EE6               	movwf	postinc1,c
  2732  003B8E  EC52  F003         	call	_sprintf	;wreg free
  2733  003B92                     
  2734                           ;user_tasks.c: 126: Lcd_Write_String(s);
  2735                           ;stkvar	task_lcd@s @ sp[(-26)+0]
  2736  003B92  0EE6               	movlw	230
  2737  003B94  24E1               	addwf	fsr1l,w,c
  2738  003B96  6E62               	movwf	btemp^0,c
  2739  003B98  0EFF               	movlw	255
  2740  003B9A  20E2               	addwfc	fsr1h,w,c
  2741  003B9C  6E63               	movwf	(btemp+1)^0,c
  2742  003B9E  C062  FFE6         	movff	btemp,postinc1
  2743  003BA2  C063  FFE6         	movff	btemp+1,postinc1
  2744  003BA6  EC72  F02D         	call	_Lcd_Write_String	;wreg free
  2745  003BAA                     
  2746                           ;user_tasks.c: 127: if(percentualBateria < 50 && percentualBateria > 25){
  2747  003BAA  0E00               	movlw	0
  2748  003BAC  6EE6               	movwf	postinc1,c
  2749  003BAE  0E00               	movlw	0
  2750  003BB0  6EE6               	movwf	postinc1,c
  2751  003BB2  0E48               	movlw	72
  2752  003BB4  6EE6               	movwf	postinc1,c
  2753  003BB6  0E42               	movlw	66
  2754  003BB8  6EE6               	movwf	postinc1,c
  2755                           
  2756                           ;stkvar	task_lcd@percentualBateria @ sp[(-30)+16]
  2757  003BBA  0EF2               	movlw	-14
  2758  003BBC  CFE3 FFE6          	movff	plusw1,postinc1
  2759  003BC0  CFE3 FFE6          	movff	plusw1,postinc1
  2760  003BC4  CFE3 FFE6          	movff	plusw1,postinc1
  2761  003BC8  CFE3 FFE6          	movff	plusw1,postinc1
  2762  003BCC  ECFC  F025         	call	___flge	;wreg free
  2763  003BD0  B062               	btfsc	btemp& (0+255),0,c
  2764  003BD2  EFED  F01D         	goto	u320_21
  2765  003BD6  EFEF  F01D         	goto	u320_20
  2766  003BDA                     u320_21:
  2767  003BDA  EF17  F01E         	goto	l3684
  2768  003BDE                     u320_20:
  2769  003BDE                     
  2770                           ;stkvar	task_lcd@percentualBateria @ sp[(-26)+16]
  2771  003BDE  0EF6               	movlw	-10
  2772  003BE0  CFE3 FFE6          	movff	plusw1,postinc1
  2773  003BE4  CFE3 FFE6          	movff	plusw1,postinc1
  2774  003BE8  CFE3 FFE6          	movff	plusw1,postinc1
  2775  003BEC  CFE3 FFE6          	movff	plusw1,postinc1
  2776  003BF0  0E00               	movlw	0
  2777  003BF2  6EE6               	movwf	postinc1,c
  2778  003BF4  0E00               	movlw	0
  2779  003BF6  6EE6               	movwf	postinc1,c
  2780  003BF8  0EC8               	movlw	200
  2781  003BFA  6EE6               	movwf	postinc1,c
  2782  003BFC  0E41               	movlw	65
  2783  003BFE  6EE6               	movwf	postinc1,c
  2784  003C00  ECFC  F025         	call	___flge	;wreg free
  2785  003C04  B062               	btfsc	btemp& (0+255),0,c
  2786  003C06  EF07  F01E         	goto	u321_21
  2787  003C0A  EF09  F01E         	goto	u321_20
  2788  003C0E                     u321_21:
  2789  003C0E  EF17  F01E         	goto	l3684
  2790  003C12                     u321_20:
  2791  003C12                     
  2792                           ;user_tasks.c: 128: pipe_write(&msg1, '0');
  2793  003C12  0E30               	movlw	48
  2794  003C14  6EE6               	movwf	postinc1,c
  2795  003C16  0E45               	movlw	low _msg1
  2796  003C18  6EE6               	movwf	postinc1,c
  2797  003C1A  0E00               	movlw	high _msg1
  2798  003C1C  6EE6               	movwf	postinc1,c
  2799  003C1E  EC41  F024         	call	_pipe_write	;wreg free
  2800  003C22                     
  2801                           ;user_tasks.c: 129: sem_post(&sem3);
  2802  003C22  0E05               	movlw	low _sem3
  2803  003C24  6EE6               	movwf	postinc1,c
  2804  003C26  0E00               	movlw	high _sem3
  2805  003C28  6EE6               	movwf	postinc1,c
  2806  003C2A  EC3B  F028         	call	_sem_post	;wreg free
  2807  003C2E                     l3684:
  2808                           
  2809                           ;user_tasks.c: 130: };user_tasks.c: 132: if(percentualBateria < 25 && percentualBateria 
      +                          > 10){
  2810  003C2E  0E00               	movlw	0
  2811  003C30  6EE6               	movwf	postinc1,c
  2812  003C32  0E00               	movlw	0
  2813  003C34  6EE6               	movwf	postinc1,c
  2814  003C36  0EC8               	movlw	200
  2815  003C38  6EE6               	movwf	postinc1,c
  2816  003C3A  0E41               	movlw	65
  2817  003C3C  6EE6               	movwf	postinc1,c
  2818                           
  2819                           ;stkvar	task_lcd@percentualBateria @ sp[(-30)+16]
  2820  003C3E  0EF2               	movlw	-14
  2821  003C40  CFE3 FFE6          	movff	plusw1,postinc1
  2822  003C44  CFE3 FFE6          	movff	plusw1,postinc1
  2823  003C48  CFE3 FFE6          	movff	plusw1,postinc1
  2824  003C4C  CFE3 FFE6          	movff	plusw1,postinc1
  2825  003C50  ECFC  F025         	call	___flge	;wreg free
  2826  003C54  B062               	btfsc	btemp& (0+255),0,c
  2827  003C56  EF2F  F01E         	goto	u322_21
  2828  003C5A  EF31  F01E         	goto	u322_20
  2829  003C5E                     u322_21:
  2830  003C5E  EF59  F01E         	goto	l3692
  2831  003C62                     u322_20:
  2832  003C62                     
  2833                           ;stkvar	task_lcd@percentualBateria @ sp[(-26)+16]
  2834  003C62  0EF6               	movlw	-10
  2835  003C64  CFE3 FFE6          	movff	plusw1,postinc1
  2836  003C68  CFE3 FFE6          	movff	plusw1,postinc1
  2837  003C6C  CFE3 FFE6          	movff	plusw1,postinc1
  2838  003C70  CFE3 FFE6          	movff	plusw1,postinc1
  2839  003C74  0E00               	movlw	0
  2840  003C76  6EE6               	movwf	postinc1,c
  2841  003C78  0E00               	movlw	0
  2842  003C7A  6EE6               	movwf	postinc1,c
  2843  003C7C  0E20               	movlw	32
  2844  003C7E  6EE6               	movwf	postinc1,c
  2845  003C80  0E41               	movlw	65
  2846  003C82  6EE6               	movwf	postinc1,c
  2847  003C84  ECFC  F025         	call	___flge	;wreg free
  2848  003C88  B062               	btfsc	btemp& (0+255),0,c
  2849  003C8A  EF49  F01E         	goto	u323_21
  2850  003C8E  EF4B  F01E         	goto	u323_20
  2851  003C92                     u323_21:
  2852  003C92  EF59  F01E         	goto	l3692
  2853  003C96                     u323_20:
  2854  003C96                     
  2855                           ;user_tasks.c: 133: pipe_write(&msg1, '1');
  2856  003C96  0E31               	movlw	49
  2857  003C98  6EE6               	movwf	postinc1,c
  2858  003C9A  0E45               	movlw	low _msg1
  2859  003C9C  6EE6               	movwf	postinc1,c
  2860  003C9E  0E00               	movlw	high _msg1
  2861  003CA0  6EE6               	movwf	postinc1,c
  2862  003CA2  EC41  F024         	call	_pipe_write	;wreg free
  2863  003CA6                     
  2864                           ;user_tasks.c: 134: sem_post(&sem3);
  2865  003CA6  0E05               	movlw	low _sem3
  2866  003CA8  6EE6               	movwf	postinc1,c
  2867  003CAA  0E00               	movlw	high _sem3
  2868  003CAC  6EE6               	movwf	postinc1,c
  2869  003CAE  EC3B  F028         	call	_sem_post	;wreg free
  2870  003CB2                     l3692:
  2871                           
  2872                           ;user_tasks.c: 135: };user_tasks.c: 136: if(percentualBateria < 10){
  2873  003CB2  0E00               	movlw	0
  2874  003CB4  6EE6               	movwf	postinc1,c
  2875  003CB6  0E00               	movlw	0
  2876  003CB8  6EE6               	movwf	postinc1,c
  2877  003CBA  0E20               	movlw	32
  2878  003CBC  6EE6               	movwf	postinc1,c
  2879  003CBE  0E41               	movlw	65
  2880  003CC0  6EE6               	movwf	postinc1,c
  2881                           
  2882                           ;stkvar	task_lcd@percentualBateria @ sp[(-30)+16]
  2883  003CC2  0EF2               	movlw	-14
  2884  003CC4  CFE3 FFE6          	movff	plusw1,postinc1
  2885  003CC8  CFE3 FFE6          	movff	plusw1,postinc1
  2886  003CCC  CFE3 FFE6          	movff	plusw1,postinc1
  2887  003CD0  CFE3 FFE6          	movff	plusw1,postinc1
  2888  003CD4  ECFC  F025         	call	___flge	;wreg free
  2889  003CD8  B062               	btfsc	btemp& (0+255),0,c
  2890  003CDA  EF71  F01E         	goto	u324_21
  2891  003CDE  EF73  F01E         	goto	u324_20
  2892  003CE2                     u324_21:
  2893  003CE2  EF81  F01E         	goto	l3698
  2894  003CE6                     u324_20:
  2895  003CE6                     
  2896                           ;user_tasks.c: 137: pipe_write(&msg1, '2');
  2897  003CE6  0E32               	movlw	50
  2898  003CE8  6EE6               	movwf	postinc1,c
  2899  003CEA  0E45               	movlw	low _msg1
  2900  003CEC  6EE6               	movwf	postinc1,c
  2901  003CEE  0E00               	movlw	high _msg1
  2902  003CF0  6EE6               	movwf	postinc1,c
  2903  003CF2  EC41  F024         	call	_pipe_write	;wreg free
  2904  003CF6                     
  2905                           ;user_tasks.c: 138: sem_post(&sem3);
  2906  003CF6  0E05               	movlw	low _sem3
  2907  003CF8  6EE6               	movwf	postinc1,c
  2908  003CFA  0E00               	movlw	high _sem3
  2909  003CFC  6EE6               	movwf	postinc1,c
  2910  003CFE  EC3B  F028         	call	_sem_post	;wreg free
  2911  003D02                     l3698:
  2912                           
  2913                           ;user_tasks.c: 139: };user_tasks.c: 140: PORTCbits.RC0 = 1;
  2914  003D02  8082               	bsf	130,0,c	;volatile
  2915  003D04                     
  2916                           ;user_tasks.c: 141: sem_post(&sem2);
  2917  003D04  0E17               	movlw	low _sem2
  2918  003D06  6EE6               	movwf	postinc1,c
  2919  003D08  0E00               	movlw	high _sem2
  2920  003D0A  6EE6               	movwf	postinc1,c
  2921  003D0C  EC3B  F028         	call	_sem_post	;wreg free
  2922  003D10  EF1F  F01D         	goto	l308
  2923                           
  2924                           ; _task_lcd: autosize = 26, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  2925  003D14  0EE6               	movlw	230
  2926  003D16  26E1               	addwf	fsr1l,f,c
  2927  003D18  0EFF               	movlw	255
  2928  003D1A  22E2               	addwfc	fsr1h,f,c
  2929  003D1C  0012               	return		;funcret
  2930  003D1E                     __end_of_task_lcd:
  2931                           	opt callstack 0
  2932                           
  2933 ;; *************** function _sprintf *****************
  2934 ;; Defined at:
  2935 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;  sp              2  [STACK] PTR unsigned char 
  2938 ;;		 -> task_lcd@s(16), 
  2939 ;;  f               2  [STACK] PTR const unsigned char 
  2940 ;;		 -> STR_2(7), 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  fval            4  [STACK] PTR const unsigned char 
  2943 ;;  tmpval          4  [STACK] struct .
  2944 ;;  val             4  [STACK] unsigned long 
  2945 ;;  cp              3    0        PTR const unsigned char 
  2946 ;;  prec            2  [STACK] int 
  2947 ;;  width           2  [STACK] int 
  2948 ;;  flag            2  [STACK] unsigned short 
  2949 ;;  eexp            2  [STACK] int 
  2950 ;;  ap              2  [STACK] PTR void [1]
  2951 ;;		 -> ?_sprintf(2), 
  2952 ;;  len             2    0        unsigned int 
  2953 ;;  c               1  [STACK] unsigned char 
  2954 ;;  d               1    0        unsigned char 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  2  [STACK] int 
  2957 ;; Registers used:
  2958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2964 ;;      Params:         0       0       0       0       0       0       0
  2965 ;;      Locals:         0       0       0       0       0       0       0
  2966 ;;      Temps:          0       0       0       0       0       0       0
  2967 ;;      Totals:         0       0       0       0       0       0       0
  2968 ;;Total ram usage:        0 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:    6
  2971 ;; This function calls:
  2972 ;;		___awdiv
  2973 ;;		___fladd
  2974 ;;		___fleq
  2975 ;;		___flge
  2976 ;;		___flmul
  2977 ;;		___flneg
  2978 ;;		___flsub
  2979 ;;		___fltol
  2980 ;;		___lldiv
  2981 ;;		___llmod
  2982 ;;		___wmul
  2983 ;;		___xxtofl
  2984 ;;		__div_to_l_
  2985 ;;		__tdiv_to_l_
  2986 ;;		_fround
  2987 ;;		_isdigit
  2988 ;;		_scale
  2989 ;; This function is called by:
  2990 ;;		_task_lcd
  2991 ;; This function uses a reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text17
  2995  0006A4                     __ptext17:
  2996                           	opt callstack 0
  2997  0006A4                     _sprintf:
  2998                           	opt callstack 0
  2999                           
  3000                           ; autosize = 23, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3001  0006A4  0E17               	movlw	23
  3002  0006A6  26E1               	addwf	fsr1l,f,c
  3003  0006A8  0E00               	movlw	0
  3004  0006AA  22E2               	addwfc	fsr1h,f,c
  3005  0006AC                     
  3006                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  3007  0006AC  0EFE               	movlw	254
  3008  0006AE  6E6C               	movwf	(btemp+10)^0,c
  3009  0006B0  0EFF               	movlw	255
  3010  0006B2  6E6D               	movwf	(btemp+11)^0,c
  3011                           
  3012                           ;stkvar	?_sprintf @ sp[(-23)+-3]
  3013  0006B4  0EE6               	movlw	230
  3014  0006B6  24E1               	addwf	fsr1l,w,c
  3015  0006B8  6E6A               	movwf	(btemp+8)^0,c
  3016  0006BA  0EFF               	movlw	255
  3017  0006BC  20E2               	addwfc	fsr1h,w,c
  3018  0006BE  6E6B               	movwf	(btemp+9)^0,c
  3019  0006C0  506C               	movf	(btemp+10)^0,w,c
  3020  0006C2  266A               	addwf	(btemp+8)^0,f,c
  3021  0006C4  506D               	movf	(btemp+11)^0,w,c
  3022  0006C6  226B               	addwfc	(btemp+9)^0,f,c
  3023                           
  3024                           ;stkvar	sprintf@ap @ sp[(-23)+20]
  3025  0006C8  0EFE               	movlw	-2
  3026  0006CA  C06B  FFE3         	movff	btemp+9,plusw1
  3027  0006CE  0EFD               	movlw	-3
  3028  0006D0  C06A  FFE3         	movff	btemp+8,plusw1
  3029                           
  3030                           ;doprnt.c: 553: while((c = *f++)) {
  3031  0006D4  EF8C  F00C         	goto	l2950
  3032  0006D8                     l2656:
  3033                           
  3034                           ;doprnt.c: 555: if(c != '%')
  3035                           ;stkvar	sprintf@c @ sp[(-23)+22]
  3036  0006D8  0EFF               	movlw	-1
  3037  0006DA  CFE3 F062          	movff	plusw1,btemp
  3038  0006DE  0E25               	movlw	37
  3039  0006E0  1862               	xorwf	btemp^0,w,c
  3040  0006E2  B4D8               	btfsc	status,2,c
  3041  0006E4  EF76  F003         	goto	u185_21
  3042  0006E8  EF78  F003         	goto	u185_20
  3043  0006EC                     u185_21:
  3044  0006EC  EF92  F003         	goto	l2662
  3045  0006F0                     u185_20:
  3046  0006F0                     
  3047                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  3048                           ;stkvar	sprintf@c @ sp[(-23)+22]
  3049                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  3050  0006F0  0EE6               	movlw	-26
  3051  0006F2  CFE3 FFD9          	movff	plusw1,fsr2l
  3052  0006F6  0EE7               	movlw	-25
  3053  0006F8  CFE3 FFDA          	movff	plusw1,fsr2h
  3054  0006FC  0EFF               	movlw	-1
  3055  0006FE  CFE3 FFDF          	movff	plusw1,indf2
  3056  000702                     l2660:
  3057                           
  3058                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  3059  000702  0EE6               	movlw	-26
  3060  000704  50E3               	movf	plusw1,w,c
  3061  000706  0F01               	addlw	1
  3062  000708  6E62               	movwf	btemp^0,c
  3063  00070A  0EE6               	movlw	-26
  3064  00070C  C062  FFE3         	movff	btemp,plusw1
  3065  000710  6A62               	clrf	btemp^0,c
  3066  000712  0EE7               	movlw	-25
  3067  000714  50E3               	movf	plusw1,w,c
  3068  000716  2062               	addwfc	btemp^0,w,c
  3069  000718  6E62               	movwf	btemp^0,c
  3070  00071A  0EE7               	movlw	-25
  3071  00071C  C062  FFE3         	movff	btemp,plusw1
  3072                           
  3073                           ;doprnt.c: 559: continue;
  3074  000720  EF8C  F00C         	goto	l2950
  3075  000724                     l2662:
  3076                           
  3077                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  3078                           ;stkvar	sprintf@width @ sp[(-23)+14]
  3079  000724  0EF7               	movlw	-9
  3080  000726  6AE3               	clrf	plusw1,c
  3081  000728  0EF8               	movlw	-8
  3082  00072A  6AE3               	clrf	plusw1,c
  3083                           
  3084                           ;doprnt.c: 565: flag = 0;
  3085                           ;stkvar	sprintf@flag @ sp[(-23)+16]
  3086  00072C  0EF9               	movlw	-7
  3087  00072E  6AE3               	clrf	plusw1,c
  3088  000730  0EFA               	movlw	-6
  3089  000732  6AE3               	clrf	plusw1,c
  3090  000734  EFAD  F003         	goto	l2670
  3091  000738                     l2664:
  3092                           
  3093                           ;doprnt.c: 597: flag |= 0x04;
  3094                           ;stkvar	sprintf@flag @ sp[(-23)+16]
  3095  000738  0EF9               	movlw	-7
  3096  00073A  84E3               	bsf	plusw1,2,c
  3097  00073C                     
  3098                           ;doprnt.c: 598: f++;
  3099                           ;stkvar	sprintf@f @ sp[(-23)+-5]
  3100  00073C  0EE4               	movlw	-28
  3101  00073E  50E3               	movf	plusw1,w,c
  3102  000740  0F01               	addlw	1
  3103  000742  6E62               	movwf	btemp^0,c
  3104  000744  0EE4               	movlw	-28
  3105  000746  C062  FFE3         	movff	btemp,plusw1
  3106  00074A  6A62               	clrf	btemp^0,c
  3107  00074C  0EE5               	movlw	-27
  3108  00074E  50E3               	movf	plusw1,w,c
  3109  000750  2062               	addwfc	btemp^0,w,c
  3110  000752  6E62               	movwf	btemp^0,c
  3111  000754  0EE5               	movlw	-27
  3112  000756  C062  FFE3         	movff	btemp,plusw1
  3113  00075A                     l2670:
  3114                           
  3115                           ;stkvar	sprintf@f @ sp[(-23)+-5]
  3116  00075A  50E1               	movf	fsr1l,w,c
  3117  00075C  0FE4               	addlw	-28
  3118  00075E  6ED9               	movwf	fsr2l,c
  3119  000760  50E2               	movf	fsr1h,w,c
  3120  000762  6EDA               	movwf	fsr2h,c
  3121  000764  0EFF               	movlw	255
  3122  000766  22DA               	addwfc	fsr2h,f,c
  3123  000768  CFDE FFF6          	movff	postinc2,tblptrl
  3124  00076C  CFDD FFF7          	movff	postdec2,tblptrh
  3125  000770                     	if	0	;tblptru may be non-zero
  3126  000770                     	endif
  3127  000770                     	if	0	;tblptru may be non-zero
  3128  000770                     	endif
  3129  000770  0008               	tblrd		*
  3130  000772  50F5               	movf	tablat,w,c
  3131                           
  3132                           ; Switch size 1, requested type "simple"
  3133                           ; Number of cases is 1, Range of values is 48 to 48
  3134                           ; switch strategies available:
  3135                           ; Name         Instructions Cycles
  3136                           ; simple_byte            4     3 (average)
  3137                           ;	Chosen strategy is simple_byte
  3138  000774  0A30               	xorlw	48	; case 48
  3139  000776  B4D8               	btfsc	status,2,c
  3140  000778  EF9C  F003         	goto	l2664
  3141  00077C  EFC0  F003         	goto	l2672
  3142  000780                     l2672:
  3143                           
  3144                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  3145                           ;stkvar	sprintf@f @ sp[(-23)+-5]
  3146  000780  50E1               	movf	fsr1l,w,c
  3147  000782  0FE4               	addlw	-28
  3148  000784  6ED9               	movwf	fsr2l,c
  3149  000786  50E2               	movf	fsr1h,w,c
  3150  000788  6EDA               	movwf	fsr2h,c
  3151  00078A  0EFF               	movlw	255
  3152  00078C  22DA               	addwfc	fsr2h,f,c
  3153  00078E  CFDE FFF6          	movff	postinc2,tblptrl
  3154  000792  CFDD FFF7          	movff	postdec2,tblptrh
  3155  000796                     	if	0	;tblptru may be non-zero
  3156  000796                     	endif
  3157  000796                     	if	0	;tblptru may be non-zero
  3158  000796                     	endif
  3159  000796  0008               	tblrd		*
  3160  000798  50F5               	movf	tablat,w,c
  3161  00079A  6EE6               	movwf	postinc1,c
  3162  00079C  ECC6  F031         	call	_isdigit	;wreg free
  3163  0007A0  A062               	btfss	btemp& (0+255),0,c
  3164  0007A2  EFD5  F003         	goto	u186_21
  3165  0007A6  EFD7  F003         	goto	u186_20
  3166  0007AA                     u186_21:
  3167  0007AA  EF34  F004         	goto	l2684
  3168  0007AE                     u186_20:
  3169  0007AE                     
  3170                           ;doprnt.c: 615: width = 0;
  3171                           ;stkvar	sprintf@width @ sp[(-23)+14]
  3172  0007AE  0EF7               	movlw	-9
  3173  0007B0  6AE3               	clrf	plusw1,c
  3174  0007B2  0EF8               	movlw	-8
  3175  0007B4  6AE3               	clrf	plusw1,c
  3176  0007B6                     l2676:
  3177                           
  3178                           ;doprnt.c: 617: width *= 10;
  3179  0007B6  0E0A               	movlw	10
  3180  0007B8  6EE6               	movwf	postinc1,c
  3181  0007BA  0E00               	movlw	0
  3182  0007BC  6EE6               	movwf	postinc1,c
  3183                           
  3184                           ;stkvar	sprintf@width @ sp[(-25)+14]
  3185  0007BE  0EF5               	movlw	-11
  3186  0007C0  CFE3 FFE6          	movff	plusw1,postinc1
  3187  0007C4  CFE3 FFE6          	movff	plusw1,postinc1
  3188  0007C8  ECBE  F02F         	call	___wmul	;wreg free
  3189                           
  3190                           ;stkvar	sprintf@width @ sp[(-23)+14]
  3191  0007CC  0EF7               	movlw	-9
  3192  0007CE  C062  FFE3         	movff	btemp,plusw1
  3193  0007D2  0EF8               	movlw	-8
  3194  0007D4  C063  FFE3         	movff	btemp+1,plusw1
  3195  0007D8                     
  3196                           ;doprnt.c: 618: width += *f++ - '0';
  3197  0007D8  0ED0               	movlw	208
  3198  0007DA  6E6C               	movwf	(btemp+10)^0,c
  3199  0007DC  0EFF               	movlw	255
  3200  0007DE  6E6D               	movwf	(btemp+11)^0,c
  3201                           
  3202                           ;stkvar	sprintf@f @ sp[(-23)+-5]
  3203  0007E0  50E1               	movf	fsr1l,w,c
  3204  0007E2  0FE4               	addlw	-28
  3205  0007E4  6ED9               	movwf	fsr2l,c
  3206  0007E6  50E2               	movf	fsr1h,w,c
  3207  0007E8  6EDA               	movwf	fsr2h,c
  3208  0007EA  0EFF               	movlw	255
  3209  0007EC  22DA               	addwfc	fsr2h,f,c
  3210  0007EE  CFDE FFF6          	movff	postinc2,tblptrl
  3211  0007F2  CFDD FFF7          	movff	postdec2,tblptrh
  3212  0007F6                     	if	0	;tblptru may be non-zero
  3213  0007F6                     	endif
  3214  0007F6                     	if	0	;tblptru may be non-zero
  3215  0007F6                     	endif
  3216  0007F6  0008               	tblrd		*
  3217  0007F8  50F5               	movf	tablat,w,c
  3218  0007FA  6E6A               	movwf	(btemp+8)^0,c
  3219  0007FC  6A6B               	clrf	(btemp+9)^0,c
  3220  0007FE  506C               	movf	(btemp+10)^0,w,c
  3221  000800  266A               	addwf	(btemp+8)^0,f,c
  3222  000802  506D               	movf	(btemp+11)^0,w,c
  3223  000804  226B               	addwfc	(btemp+9)^0,f,c
  3224                           
  3225                           ;stkvar	sprintf@width @ sp[(-23)+14]
  3226  000806  50E1               	movf	fsr1l,w,c
  3227  000808  0FF7               	addlw	-9
  3228  00080A  6ED9               	movwf	fsr2l,c
  3229  00080C  50E2               	movf	fsr1h,w,c
  3230  00080E  6EDA               	movwf	fsr2h,c
  3231  000810  0EFF               	movlw	255
  3232  000812  22DA               	addwfc	fsr2h,f,c
  3233  000814  506A               	movf	(btemp+8)^0,w,c
  3234  000816  26DE               	addwf	postinc2,f,c
  3235  000818  506B               	movf	(btemp+9)^0,w,c
  3236  00081A  22DD               	addwfc	postdec2,f,c
  3237  00081C                     
  3238                           ;stkvar	sprintf@f @ sp[(-23)+-5]
  3239  00081C  0EE4               	movlw	-28
  3240  00081E  50E3               	movf	plusw1,w,c
  3241  000820  0F01               	addlw	1
  3242  000822  6E62               	movwf	btemp^0,c
  3243  000824  0EE4               	movlw	-28
  3244  000826  C062  FFE3         	movff	btemp,plusw1
  3245  00082A  6A62               	clrf	btemp^0,c
  3246  00082C  0EE5               	movlw	-27
  3247  00082E  50E3               	movf	plusw1,w,c
  3248  000830  2062               	addwfc	btemp^0,w,c
  3249  000832  6E62               	movwf	btemp^0,c
  3250  000834  0EE5               	movlw	-27
  3251  000836  C062  FFE3         	movff	btemp,plusw1
  3252  00083A                     
  3253                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  3254                           ;stkvar	sprintf@f @ sp[(-23)+-5]
  3255  00083A  50E1               	movf	fsr1l,w,c
  3256  00083C  0FE4               	addlw	-28
  3257  00083E  6ED9               	movwf	fsr2l,c
  3258  000840  50E2               	movf	fsr1h,w,c
  3259  000842  6EDA               	movwf	fsr2h,c
  3260  000844  0EFF               	movlw	255
  3261  000846  22DA               	addwfc	fsr2h,f,c
  3262  000848  CFDE FFF6          	movff	postinc2,tblptrl
  3263  00084C  CFDD FFF7          	movff	postdec2,tblptrh
  3264  000850                     	if	0	;tblptru may be non-zero
  3265  000850                     	endif
  3266  000850                     	if	0	;tblptru may be non-zero
  3267  000850                     	endif
  3268  000850  0008               	tblrd		*
  3269  000852  50F5               	movf	tablat,w,c
  3270  000854  6EE6               	movwf	postinc1,c
  3271  000856  ECC6  F031         	call	_isdigit	;wreg free
  3272  00085A  B062               	btfsc	btemp& (0+255),0,c
  3273  00085C  EF32  F004         	goto	u187_21
  3274  000860  EF34  F004         	goto	u187_20
  3275  000864                     u187_21:
  3276  000864  EFDB  F003         	goto	l2676
  3277  000868                     u187_20:
  3278  000868                     l2684:
  3279                           
  3280                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  3281                           ;stkvar	sprintf@f @ sp[(-23)+-5]
  3282  000868  50E1               	movf	fsr1l,w,c
  3283  00086A  0FE4               	addlw	-28
  3284  00086C  6ED9               	movwf	fsr2l,c
  3285  00086E  50E2               	movf	fsr1h,w,c
  3286  000870  6EDA               	movwf	fsr2h,c
  3287  000872  0EFF               	movlw	255
  3288  000874  22DA               	addwfc	fsr2h,f,c
  3289  000876  CFDE FFF6          	movff	postinc2,tblptrl
  3290  00087A  CFDD FFF7          	movff	postdec2,tblptrh
  3291  00087E                     	if	0	;tblptru may be non-zero
  3292  00087E                     	endif
  3293  00087E                     	if	0	;tblptru may be non-zero
  3294  00087E                     	endif
  3295  00087E  0008               	tblrd		*
  3296  000880  50F5               	movf	tablat,w,c
  3297  000882  0A2E               	xorlw	46
  3298  000884  A4D8               	btfss	status,2,c
  3299  000886  EF47  F004         	goto	u188_21
  3300  00088A  EF49  F004         	goto	u188_20
  3301  00088E                     u188_21:
  3302  00088E  EFBB  F004         	goto	l2700
  3303  000892                     u188_20:
  3304  000892                     
  3305                           ;doprnt.c: 629: flag |= 0x4000;
  3306                           ;stkvar	sprintf@flag @ sp[(-23)+16]
  3307  000892  0EFA               	movlw	-6
  3308  000894  8CE3               	bsf	plusw1,6,c
  3309  000896                     
  3310                           ;doprnt.c: 630: f++;
  3311                           ;stkvar	sprintf@f @ sp[(-23)+-5]
  3312  000896  0EE4               	movlw	-28
  3313  000898  50E3               	movf	plusw1,w,c
  3314  00089A  0F01               	addlw	1
  3315  00089C  6E62               	movwf	btemp^0,c
  3316  00089E  0EE4               	movlw	-28
  3317  0008A0  C062  FFE3         	movff	btemp,plusw1
  3318  0008A4  6A62               	clrf	btemp^0,c
  3319  0008A6  0EE5               	movlw	-27
  3320  0008A8  50E3               	movf	plusw1,w,c
  3321  0008AA  2062               	addwfc	btemp^0,w,c
  3322  0008AC  6E62               	movwf	btemp^0,c
  3323  0008AE  0EE5               	movlw	-27
  3324  0008B0  C062  FFE3         	movff	btemp,plusw1
  3325  0008B4                     
  3326                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  3327                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  3328  0008B4  0EF5               	movlw	-11
  3329  0008B6  6AE3               	clrf	plusw1,c
  3330  0008B8  0EF6               	movlw	-10
  3331  0008BA  6AE3               	clrf	plusw1,c
  3332                           
  3333                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  3334  0008BC  EFA2  F004         	goto	l2698
  3335  0008C0                     l2692:
  3336                           
  3337                           ;doprnt.c: 647: prec *= 10;
  3338  0008C0  0E0A               	movlw	10
  3339  0008C2  6EE6               	movwf	postinc1,c
  3340  0008C4  0E00               	movlw	0
  3341  0008C6  6EE6               	movwf	postinc1,c
  3342                           
  3343                           ;stkvar	sprintf@prec @ sp[(-25)+12]
  3344  0008C8  0EF3               	movlw	-13
  3345  0008CA  CFE3 FFE6          	movff	plusw1,postinc1
  3346  0008CE  CFE3 FFE6          	movff	plusw1,postinc1
  3347  0008D2  ECBE  F02F         	call	___wmul	;wreg free
  3348                           
  3349                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  3350  0008D6  0EF5               	movlw	-11
  3351  0008D8  C062  FFE3         	movff	btemp,plusw1
  3352  0008DC  0EF6               	movlw	-10
  3353  0008DE  C063  FFE3         	movff	btemp+1,plusw1
  3354  0008E2                     
  3355                           ;doprnt.c: 648: prec += *f++ - '0';
  3356  0008E2  0ED0               	movlw	208
  3357  0008E4  6E6C               	movwf	(btemp+10)^0,c
  3358  0008E6  0EFF               	movlw	255
  3359  0008E8  6E6D               	movwf	(btemp+11)^0,c
  3360                           
  3361                           ;stkvar	sprintf@f @ sp[(-23)+-5]
  3362  0008EA  50E1               	movf	fsr1l,w,c
  3363  0008EC  0FE4               	addlw	-28
  3364  0008EE  6ED9               	movwf	fsr2l,c
  3365  0008F0  50E2               	movf	fsr1h,w,c
  3366  0008F2  6EDA               	movwf	fsr2h,c
  3367  0008F4  0EFF               	movlw	255
  3368  0008F6  22DA               	addwfc	fsr2h,f,c
  3369  0008F8  CFDE FFF6          	movff	postinc2,tblptrl
  3370  0008FC  CFDD FFF7          	movff	postdec2,tblptrh
  3371  000900                     	if	0	;tblptru may be non-zero
  3372  000900                     	endif
  3373  000900                     	if	0	;tblptru may be non-zero
  3374  000900                     	endif
  3375  000900  0008               	tblrd		*
  3376  000902  50F5               	movf	tablat,w,c
  3377  000904  6E6A               	movwf	(btemp+8)^0,c
  3378  000906  6A6B               	clrf	(btemp+9)^0,c
  3379  000908  506C               	movf	(btemp+10)^0,w,c
  3380  00090A  266A               	addwf	(btemp+8)^0,f,c
  3381  00090C  506D               	movf	(btemp+11)^0,w,c
  3382  00090E  226B               	addwfc	(btemp+9)^0,f,c
  3383                           
  3384                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  3385  000910  50E1               	movf	fsr1l,w,c
  3386  000912  0FF5               	addlw	-11
  3387  000914  6ED9               	movwf	fsr2l,c
  3388  000916  50E2               	movf	fsr1h,w,c
  3389  000918  6EDA               	movwf	fsr2h,c
  3390  00091A  0EFF               	movlw	255
  3391  00091C  22DA               	addwfc	fsr2h,f,c
  3392  00091E  506A               	movf	(btemp+8)^0,w,c
  3393  000920  26DE               	addwf	postinc2,f,c
  3394  000922  506B               	movf	(btemp+9)^0,w,c
  3395  000924  22DD               	addwfc	postdec2,f,c
  3396  000926                     
  3397                           ;stkvar	sprintf@f @ sp[(-23)+-5]
  3398  000926  0EE4               	movlw	-28
  3399  000928  50E3               	movf	plusw1,w,c
  3400  00092A  0F01               	addlw	1
  3401  00092C  6E62               	movwf	btemp^0,c
  3402  00092E  0EE4               	movlw	-28
  3403  000930  C062  FFE3         	movff	btemp,plusw1
  3404  000934  6A62               	clrf	btemp^0,c
  3405  000936  0EE5               	movlw	-27
  3406  000938  50E3               	movf	plusw1,w,c
  3407  00093A  2062               	addwfc	btemp^0,w,c
  3408  00093C  6E62               	movwf	btemp^0,c
  3409  00093E  0EE5               	movlw	-27
  3410  000940  C062  FFE3         	movff	btemp,plusw1
  3411  000944                     l2698:
  3412                           
  3413                           ;stkvar	sprintf@f @ sp[(-23)+-5]
  3414  000944  50E1               	movf	fsr1l,w,c
  3415  000946  0FE4               	addlw	-28
  3416  000948  6ED9               	movwf	fsr2l,c
  3417  00094A  50E2               	movf	fsr1h,w,c
  3418  00094C  6EDA               	movwf	fsr2h,c
  3419  00094E  0EFF               	movlw	255
  3420  000950  22DA               	addwfc	fsr2h,f,c
  3421  000952  CFDE FFF6          	movff	postinc2,tblptrl
  3422  000956  CFDD FFF7          	movff	postdec2,tblptrh
  3423  00095A                     	if	0	;tblptru may be non-zero
  3424  00095A                     	endif
  3425  00095A                     	if	0	;tblptru may be non-zero
  3426  00095A                     	endif
  3427  00095A  0008               	tblrd		*
  3428  00095C  50F5               	movf	tablat,w,c
  3429  00095E  6EE6               	movwf	postinc1,c
  3430  000960  ECC6  F031         	call	_isdigit	;wreg free
  3431  000964  B062               	btfsc	btemp& (0+255),0,c
  3432  000966  EFB7  F004         	goto	u189_21
  3433  00096A  EFB9  F004         	goto	u189_20
  3434  00096E                     u189_21:
  3435  00096E  EF60  F004         	goto	l2692
  3436  000972                     u189_20:
  3437  000972  EFC7  F004         	goto	l2706
  3438  000976                     l2700:
  3439                           
  3440                           ;doprnt.c: 652: prec = 0;
  3441                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  3442  000976  0EF5               	movlw	-11
  3443  000978  6AE3               	clrf	plusw1,c
  3444  00097A  0EF6               	movlw	-10
  3445  00097C  6AE3               	clrf	plusw1,c
  3446                           
  3447                           ;doprnt.c: 654: flag |= 0x1000;
  3448                           ;stkvar	sprintf@flag @ sp[(-23)+16]
  3449  00097E  0EFA               	movlw	-6
  3450  000980  88E3               	bsf	plusw1,4,c
  3451  000982  EFC7  F004         	goto	l2706
  3452  000986                     l2702:
  3453                           
  3454                           ;doprnt.c: 689: flag |= 0x400;
  3455                           ;stkvar	sprintf@flag @ sp[(-23)+16]
  3456  000986  0EFA               	movlw	-6
  3457  000988  84E3               	bsf	plusw1,2,c
  3458                           
  3459                           ;doprnt.c: 690: break;
  3460  00098A  EFEA  F004         	goto	l2708
  3461  00098E                     l2706:
  3462                           
  3463                           ;stkvar	sprintf@f @ sp[(-23)+-5]
  3464  00098E  50E1               	movf	fsr1l,w,c
  3465  000990  0FE4               	addlw	-28
  3466  000992  6ED9               	movwf	fsr2l,c
  3467  000994  50E2               	movf	fsr1h,w,c
  3468  000996  6EDA               	movwf	fsr2h,c
  3469  000998  0EFF               	movlw	255
  3470  00099A  22DA               	addwfc	fsr2h,f,c
  3471  00099C  CFDF F06C          	movff	indf2,btemp+10
  3472  0009A0  0E01               	movlw	1
  3473  0009A2  26DE               	addwf	postinc2,f,c
  3474  0009A4  CFDF F06D          	movff	indf2,btemp+11
  3475  0009A8  0E00               	movlw	0
  3476  0009AA  22DD               	addwfc	postdec2,f,c
  3477  0009AC  C06C  FFF6         	movff	btemp+10,tblptrl
  3478  0009B0  C06D  FFF7         	movff	btemp+11,tblptrh
  3479  0009B4                     	if	0	;tblptru may be non-zero
  3480  0009B4                     	endif
  3481  0009B4                     	if	0	;tblptru may be non-zero
  3482  0009B4                     	endif
  3483                           
  3484                           ;stkvar	sprintf@c @ sp[(-23)+22]
  3485  0009B4  0008               	tblrd		*
  3486  0009B6  0EFF               	movlw	-1
  3487  0009B8  CFF5 FFE3          	movff	tablat,plusw1
  3488  0009BC  0EFF               	movlw	-1
  3489  0009BE  50E3               	movf	plusw1,w,c
  3490                           
  3491                           ; Switch size 1, requested type "simple"
  3492                           ; Number of cases is 2, Range of values is 0 to 102
  3493                           ; switch strategies available:
  3494                           ; Name         Instructions Cycles
  3495                           ; simple_byte            7     4 (average)
  3496                           ;	Chosen strategy is simple_byte
  3497  0009C0  0A00               	xorlw	0	; case 0
  3498  0009C2  B4D8               	btfsc	status,2,c
  3499  0009C4  EFAC  F00C         	goto	l2952
  3500  0009C8  0A66               	xorlw	102	; case 102
  3501  0009CA  B4D8               	btfsc	status,2,c
  3502  0009CC  EFC3  F004         	goto	l2702
  3503  0009D0  EF8C  F00C         	goto	l2950
  3504  0009D4                     l2708:
  3505                           
  3506                           ;doprnt.c: 851: if(flag & (0x700)) {
  3507                           ;stkvar	sprintf@flag @ sp[(-23)+16]
  3508  0009D4  50E1               	movf	fsr1l,w,c
  3509  0009D6  0FF9               	addlw	-7
  3510  0009D8  6ED9               	movwf	fsr2l,c
  3511  0009DA  50E2               	movf	fsr1h,w,c
  3512  0009DC  6EDA               	movwf	fsr2h,c
  3513  0009DE  0EFF               	movlw	255
  3514  0009E0  22DA               	addwfc	fsr2h,f,c
  3515  0009E2  52DE               	movf	postinc2,f,c
  3516  0009E4  0E07               	movlw	7
  3517  0009E6  14DD               	andwf	postdec2,w,c
  3518  0009E8  B4D8               	btfsc	status,2,c
  3519  0009EA  EFF9  F004         	goto	u190_21
  3520  0009EE  EFFB  F004         	goto	u190_20
  3521  0009F2                     u190_21:
  3522  0009F2  EFE5  F00A         	goto	l2888
  3523  0009F6                     u190_20:
  3524  0009F6                     
  3525                           ;doprnt.c: 853: if(flag & 0x1000)
  3526                           ;stkvar	sprintf@flag @ sp[(-23)+16]
  3527  0009F6  0EFA               	movlw	-6
  3528  0009F8  A8E3               	btfss	plusw1,4,c
  3529  0009FA  EF01  F005         	goto	u191_21
  3530  0009FE  EF03  F005         	goto	u191_20
  3531  000A02                     u191_21:
  3532  000A02  EF0D  F005         	goto	l2714
  3533  000A06                     u191_20:
  3534  000A06                     
  3535                           ;doprnt.c: 855: prec = 6;
  3536  000A06  0E06               	movlw	6
  3537  000A08  6E6C               	movwf	(btemp+10)^0,c
  3538  000A0A  0E00               	movlw	0
  3539  000A0C  6E6D               	movwf	(btemp+11)^0,c
  3540                           
  3541                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  3542  000A0E  0EF5               	movlw	-11
  3543  000A10  C06C  FFE3         	movff	btemp+10,plusw1
  3544  000A14  0EF6               	movlw	-10
  3545  000A16  C06D  FFE3         	movff	btemp+11,plusw1
  3546  000A1A                     l2714:
  3547                           
  3548                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3549                           ;stkvar	sprintf@ap @ sp[(-23)+20]
  3550  000A1A  0EFD               	movlw	-3
  3551  000A1C  CFE3 F062          	movff	plusw1,btemp
  3552  000A20  0E04               	movlw	4
  3553  000A22  5E62               	subwf	btemp^0,f,c
  3554  000A24  0EFD               	movlw	-3
  3555  000A26  C062  FFE3         	movff	btemp,plusw1
  3556  000A2A  0EFE               	movlw	-2
  3557  000A2C  CFE3 F062          	movff	plusw1,btemp
  3558  000A30  0E00               	movlw	0
  3559  000A32  5A62               	subwfb	btemp^0,f,c
  3560  000A34  0EFE               	movlw	-2
  3561  000A36  C062  FFE3         	movff	btemp,plusw1
  3562  000A3A  0EFD               	movlw	-3
  3563  000A3C  CFE3 FFD9          	movff	plusw1,fsr2l
  3564  000A40  0EFE               	movlw	-2
  3565  000A42  CFE3 FFDA          	movff	plusw1,fsr2h
  3566  000A46  CFDE F06A          	movff	postinc2,btemp+8
  3567  000A4A  CFDE F06B          	movff	postinc2,btemp+9
  3568  000A4E  CFDE F06C          	movff	postinc2,btemp+10
  3569  000A52  CFDE F06D          	movff	postinc2,btemp+11
  3570                           
  3571                           ;stkvar	sprintf@fval @ sp[(-23)+0]
  3572  000A56  0EE9               	movlw	-23
  3573  000A58  C06A  FFE3         	movff	btemp+8,plusw1
  3574  000A5C  0EEA               	movlw	-22
  3575  000A5E  C06B  FFE3         	movff	btemp+9,plusw1
  3576  000A62  0EEB               	movlw	-21
  3577  000A64  C06C  FFE3         	movff	btemp+10,plusw1
  3578  000A68  0EEC               	movlw	-20
  3579  000A6A  C06D  FFE3         	movff	btemp+11,plusw1
  3580  000A6E                     
  3581                           ;doprnt.c: 857: if(fval < 0.0) {
  3582                           ;stkvar	sprintf@fval @ sp[(-23)+0]
  3583  000A6E  0EEC               	movlw	-20
  3584  000A70  BEE3               	btfsc	plusw1,7,c
  3585  000A72  EF3F  F005         	goto	u192_20
  3586  000A76  EF3D  F005         	goto	u192_21
  3587  000A7A                     u192_21:
  3588  000A7A  EF5D  F005         	goto	l2722
  3589  000A7E                     u192_20:
  3590  000A7E                     
  3591                           ;doprnt.c: 858: fval = -fval;
  3592                           ;stkvar	sprintf@fval @ sp[(-23)+0]
  3593  000A7E  0EE9               	movlw	-23
  3594  000A80  CFE3 FFE6          	movff	plusw1,postinc1
  3595  000A84  CFE3 FFE6          	movff	plusw1,postinc1
  3596  000A88  CFE3 FFE6          	movff	plusw1,postinc1
  3597  000A8C  CFE3 FFE6          	movff	plusw1,postinc1
  3598  000A90  ECEC  F031         	call	___flneg	;wreg free
  3599                           
  3600                           ;stkvar	sprintf@fval @ sp[(-23)+0]
  3601  000A94  0EE9               	movlw	-23
  3602  000A96  C062  FFE3         	movff	btemp,plusw1
  3603  000A9A  0EEA               	movlw	-22
  3604  000A9C  C063  FFE3         	movff	btemp+1,plusw1
  3605  000AA0  0EEB               	movlw	-21
  3606  000AA2  C064  FFE3         	movff	btemp+2,plusw1
  3607  000AA6  0EEC               	movlw	-20
  3608  000AA8  C065  FFE3         	movff	btemp+3,plusw1
  3609  000AAC                     
  3610                           ;doprnt.c: 859: flag |= 0x03;
  3611                           ;stkvar	sprintf@flag @ sp[(-23)+16]
  3612  000AAC  0EF9               	movlw	-7
  3613  000AAE  50E3               	movf	plusw1,w,c
  3614  000AB0  0903               	iorlw	3
  3615  000AB2  6E62               	movwf	btemp^0,c
  3616  000AB4  0EF9               	movlw	-7
  3617  000AB6  C062  FFE3         	movff	btemp,plusw1
  3618  000ABA                     l2722:
  3619                           
  3620                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  3621                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  3622  000ABA  0EFB               	movlw	-5
  3623  000ABC  6AE3               	clrf	plusw1,c
  3624  000ABE  0EFC               	movlw	-4
  3625  000AC0  6AE3               	clrf	plusw1,c
  3626  000AC2                     
  3627                           ;doprnt.c: 862: if( fval!=0) {
  3628  000AC2  0E00               	movlw	0
  3629  000AC4  6EE6               	movwf	postinc1,c
  3630  000AC6  0E00               	movlw	0
  3631  000AC8  6EE6               	movwf	postinc1,c
  3632  000ACA  0E00               	movlw	0
  3633  000ACC  6EE6               	movwf	postinc1,c
  3634  000ACE  0E00               	movlw	0
  3635  000AD0  6EE6               	movwf	postinc1,c
  3636                           
  3637                           ;stkvar	sprintf@fval @ sp[(-27)+0]
  3638  000AD2  0EE5               	movlw	-27
  3639  000AD4  CFE3 FFE6          	movff	plusw1,postinc1
  3640  000AD8  CFE3 FFE6          	movff	plusw1,postinc1
  3641  000ADC  CFE3 FFE6          	movff	plusw1,postinc1
  3642  000AE0  CFE3 FFE6          	movff	plusw1,postinc1
  3643  000AE4  EC26  F02C         	call	___fleq	;wreg free
  3644  000AE8  B062               	btfsc	btemp& (0+255),0,c
  3645  000AEA  EF79  F005         	goto	u193_21
  3646  000AEE  EF7B  F005         	goto	u193_20
  3647  000AF2                     u193_21:
  3648  000AF2  EF62  F006         	goto	l486
  3649  000AF6                     u193_20:
  3650  000AF6                     
  3651                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  3652  000AF6  0E82               	movlw	130
  3653  000AF8  6E6C               	movwf	(btemp+10)^0,c
  3654  000AFA  0EFF               	movlw	255
  3655  000AFC  6E6D               	movwf	(btemp+11)^0,c
  3656                           
  3657                           ;stkvar	sprintf@fval @ sp[(-23)+0]
  3658  000AFE  0EE9               	movlw	-23
  3659  000B00  CFE3 F066          	movff	plusw1,btemp+4
  3660  000B04  0EEA               	movlw	-22
  3661  000B06  CFE3 F067          	movff	plusw1,btemp+5
  3662  000B0A  0EEB               	movlw	-21
  3663  000B0C  CFE3 F068          	movff	plusw1,btemp+6
  3664  000B10  0EEC               	movlw	-20
  3665  000B12  CFE3 F069          	movff	plusw1,btemp+7
  3666  000B16  0E18               	movlw	24
  3667  000B18  EF93  F005         	goto	u194_20
  3668  000B1C                     u194_25:
  3669  000B1C  90D8               	bcf	status,0,c
  3670  000B1E  3269               	rrcf	(btemp+7)^0,f,c
  3671  000B20  3268               	rrcf	(btemp+6)^0,f,c
  3672  000B22  3267               	rrcf	(btemp+5)^0,f,c
  3673  000B24  3266               	rrcf	(btemp+4)^0,f,c
  3674  000B26                     u194_20:
  3675  000B26  2EE8               	decfsz	wreg,f,c
  3676  000B28  EF8E  F005         	goto	u194_25
  3677  000B2C  5066               	movf	(btemp+4)^0,w,c
  3678  000B2E  6E6A               	movwf	(btemp+8)^0,c
  3679  000B30  6A6B               	clrf	(btemp+9)^0,c
  3680  000B32  506C               	movf	(btemp+10)^0,w,c
  3681  000B34  266A               	addwf	(btemp+8)^0,f,c
  3682  000B36  506D               	movf	(btemp+11)^0,w,c
  3683  000B38  226B               	addwfc	(btemp+9)^0,f,c
  3684                           
  3685                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  3686  000B3A  0EFB               	movlw	-5
  3687  000B3C  C06A  FFE3         	movff	btemp+8,plusw1
  3688  000B40  0EFC               	movlw	-4
  3689  000B42  C06B  FFE3         	movff	btemp+9,plusw1
  3690  000B46                     
  3691                           ;doprnt.c: 864: eexp--;
  3692                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  3693  000B46  50E1               	movf	fsr1l,w,c
  3694  000B48  0FFB               	addlw	-5
  3695  000B4A  6ED9               	movwf	fsr2l,c
  3696  000B4C  50E2               	movf	fsr1h,w,c
  3697  000B4E  6EDA               	movwf	fsr2h,c
  3698  000B50  0EFF               	movlw	255
  3699  000B52  22DA               	addwfc	fsr2h,f,c
  3700  000B54  06DE               	decf	postinc2,f,c
  3701  000B56  0E00               	movlw	0
  3702  000B58  5ADD               	subwfb	postdec2,f,c
  3703  000B5A                     
  3704                           ;doprnt.c: 865: eexp *= 3;
  3705  000B5A  0E03               	movlw	3
  3706  000B5C  6EE6               	movwf	postinc1,c
  3707  000B5E  0E00               	movlw	0
  3708  000B60  6EE6               	movwf	postinc1,c
  3709                           
  3710                           ;stkvar	sprintf@eexp @ sp[(-25)+18]
  3711  000B62  0EF9               	movlw	-7
  3712  000B64  CFE3 FFE6          	movff	plusw1,postinc1
  3713  000B68  CFE3 FFE6          	movff	plusw1,postinc1
  3714  000B6C  ECBE  F02F         	call	___wmul	;wreg free
  3715                           
  3716                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  3717  000B70  0EFB               	movlw	-5
  3718  000B72  C062  FFE3         	movff	btemp,plusw1
  3719  000B76  0EFC               	movlw	-4
  3720  000B78  C063  FFE3         	movff	btemp+1,plusw1
  3721  000B7C                     
  3722                           ;doprnt.c: 866: eexp /= 10;
  3723  000B7C  0E0A               	movlw	10
  3724  000B7E  6EE6               	movwf	postinc1,c
  3725  000B80  0E00               	movlw	0
  3726  000B82  6EE6               	movwf	postinc1,c
  3727                           
  3728                           ;stkvar	sprintf@eexp @ sp[(-25)+18]
  3729  000B84  0EF9               	movlw	-7
  3730  000B86  CFE3 FFE6          	movff	plusw1,postinc1
  3731  000B8A  CFE3 FFE6          	movff	plusw1,postinc1
  3732  000B8E  EC7D  F027         	call	___awdiv	;wreg free
  3733                           
  3734                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  3735  000B92  0EFB               	movlw	-5
  3736  000B94  C062  FFE3         	movff	btemp,plusw1
  3737  000B98  0EFC               	movlw	-4
  3738  000B9A  C063  FFE3         	movff	btemp+1,plusw1
  3739  000B9E                     
  3740                           ;doprnt.c: 867: if(eexp < 0)
  3741                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  3742  000B9E  0EFC               	movlw	-4
  3743  000BA0  BEE3               	btfsc	plusw1,7,c
  3744  000BA2  EFD7  F005         	goto	u195_20
  3745  000BA6  EFD5  F005         	goto	u195_21
  3746  000BAA                     u195_21:
  3747  000BAA  EFE1  F005         	goto	l2738
  3748  000BAE                     u195_20:
  3749  000BAE                     
  3750                           ;doprnt.c: 868: eexp--;
  3751                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  3752  000BAE  50E1               	movf	fsr1l,w,c
  3753  000BB0  0FFB               	addlw	-5
  3754  000BB2  6ED9               	movwf	fsr2l,c
  3755  000BB4  50E2               	movf	fsr1h,w,c
  3756  000BB6  6EDA               	movwf	fsr2h,c
  3757  000BB8  0EFF               	movlw	255
  3758  000BBA  22DA               	addwfc	fsr2h,f,c
  3759  000BBC  06DE               	decf	postinc2,f,c
  3760  000BBE  0E00               	movlw	0
  3761  000BC0  5ADD               	subwfb	postdec2,f,c
  3762  000BC2                     l2738:
  3763                           
  3764                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  3765                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  3766  000BC2  0EFB               	movlw	-5
  3767  000BC4  50E3               	movf	plusw1,w,c
  3768  000BC6  0800               	sublw	0
  3769  000BC8  6EE6               	movwf	postinc1,c
  3770  000BCA  EC0C  F01B         	call	_scale	;wreg free
  3771                           
  3772                           ;stkvar	sprintf@tmpval @ sp[(-23)+4]
  3773  000BCE  0EED               	movlw	-19
  3774  000BD0  C062  FFE3         	movff	btemp,plusw1
  3775  000BD4  0EEE               	movlw	-18
  3776  000BD6  C063  FFE3         	movff	btemp+1,plusw1
  3777  000BDA  0EEF               	movlw	-17
  3778  000BDC  C064  FFE3         	movff	btemp+2,plusw1
  3779  000BE0  0EF0               	movlw	-16
  3780  000BE2  C065  FFE3         	movff	btemp+3,plusw1
  3781  000BE6                     
  3782                           ;doprnt.c: 873: tmpval.integ *= fval;
  3783                           ;stkvar	sprintf@fval @ sp[(-23)+0]
  3784  000BE6  0EE9               	movlw	-23
  3785  000BE8  CFE3 FFE6          	movff	plusw1,postinc1
  3786  000BEC  CFE3 FFE6          	movff	plusw1,postinc1
  3787  000BF0  CFE3 FFE6          	movff	plusw1,postinc1
  3788  000BF4  CFE3 FFE6          	movff	plusw1,postinc1
  3789                           
  3790                           ;stkvar	sprintf@tmpval @ sp[(-27)+4]
  3791  000BF8  0EE9               	movlw	-23
  3792  000BFA  CFE3 FFE6          	movff	plusw1,postinc1
  3793  000BFE  CFE3 FFE6          	movff	plusw1,postinc1
  3794  000C02  CFE3 FFE6          	movff	plusw1,postinc1
  3795  000C06  CFE3 FFE6          	movff	plusw1,postinc1
  3796  000C0A  EC32  F011         	call	___flmul	;wreg free
  3797                           
  3798                           ;stkvar	sprintf@tmpval @ sp[(-23)+4]
  3799  000C0E  0EED               	movlw	-19
  3800  000C10  C062  FFE3         	movff	btemp,plusw1
  3801  000C14  0EEE               	movlw	-18
  3802  000C16  C063  FFE3         	movff	btemp+1,plusw1
  3803  000C1A  0EEF               	movlw	-17
  3804  000C1C  C064  FFE3         	movff	btemp+2,plusw1
  3805  000C20  0EF0               	movlw	-16
  3806  000C22  C065  FFE3         	movff	btemp+3,plusw1
  3807  000C26                     
  3808                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  3809  000C26  0E00               	movlw	0
  3810  000C28  6EE6               	movwf	postinc1,c
  3811  000C2A  0E00               	movlw	0
  3812  000C2C  6EE6               	movwf	postinc1,c
  3813  000C2E  0E80               	movlw	128
  3814  000C30  6EE6               	movwf	postinc1,c
  3815  000C32  0E3F               	movlw	63
  3816  000C34  6EE6               	movwf	postinc1,c
  3817                           
  3818                           ;stkvar	sprintf@tmpval @ sp[(-27)+4]
  3819  000C36  0EE9               	movlw	-23
  3820  000C38  CFE3 FFE6          	movff	plusw1,postinc1
  3821  000C3C  CFE3 FFE6          	movff	plusw1,postinc1
  3822  000C40  CFE3 FFE6          	movff	plusw1,postinc1
  3823  000C44  CFE3 FFE6          	movff	plusw1,postinc1
  3824  000C48  ECFC  F025         	call	___flge	;wreg free
  3825  000C4C  B062               	btfsc	btemp& (0+255),0,c
  3826  000C4E  EF2B  F006         	goto	u196_21
  3827  000C52  EF2D  F006         	goto	u196_20
  3828  000C56                     u196_21:
  3829  000C56  EF39  F006         	goto	l2746
  3830  000C5A                     u196_20:
  3831  000C5A                     
  3832                           ;doprnt.c: 875: eexp--;
  3833                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  3834  000C5A  50E1               	movf	fsr1l,w,c
  3835  000C5C  0FFB               	addlw	-5
  3836  000C5E  6ED9               	movwf	fsr2l,c
  3837  000C60  50E2               	movf	fsr1h,w,c
  3838  000C62  6EDA               	movwf	fsr2h,c
  3839  000C64  0EFF               	movlw	255
  3840  000C66  22DA               	addwfc	fsr2h,f,c
  3841  000C68  06DE               	decf	postinc2,f,c
  3842  000C6A  0E00               	movlw	0
  3843  000C6C  5ADD               	subwfb	postdec2,f,c
  3844  000C6E  EF62  F006         	goto	l486
  3845  000C72                     l2746:
  3846                           
  3847                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  3848  000C72  0E00               	movlw	0
  3849  000C74  6EE6               	movwf	postinc1,c
  3850  000C76  0E00               	movlw	0
  3851  000C78  6EE6               	movwf	postinc1,c
  3852  000C7A  0E20               	movlw	32
  3853  000C7C  6EE6               	movwf	postinc1,c
  3854  000C7E  0E41               	movlw	65
  3855  000C80  6EE6               	movwf	postinc1,c
  3856                           
  3857                           ;stkvar	sprintf@tmpval @ sp[(-27)+4]
  3858  000C82  0EE9               	movlw	-23
  3859  000C84  CFE3 FFE6          	movff	plusw1,postinc1
  3860  000C88  CFE3 FFE6          	movff	plusw1,postinc1
  3861  000C8C  CFE3 FFE6          	movff	plusw1,postinc1
  3862  000C90  CFE3 FFE6          	movff	plusw1,postinc1
  3863  000C94  ECFC  F025         	call	___flge	;wreg free
  3864  000C98  A062               	btfss	btemp& (0+255),0,c
  3865  000C9A  EF51  F006         	goto	u197_21
  3866  000C9E  EF53  F006         	goto	u197_20
  3867  000CA2                     u197_21:
  3868  000CA2  EF62  F006         	goto	l486
  3869  000CA6                     u197_20:
  3870  000CA6                     
  3871                           ;doprnt.c: 877: eexp++;
  3872                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  3873  000CA6  0EFB               	movlw	-5
  3874  000CA8  50E3               	movf	plusw1,w,c
  3875  000CAA  0F01               	addlw	1
  3876  000CAC  6E62               	movwf	btemp^0,c
  3877  000CAE  0EFB               	movlw	-5
  3878  000CB0  C062  FFE3         	movff	btemp,plusw1
  3879  000CB4  6A62               	clrf	btemp^0,c
  3880  000CB6  0EFC               	movlw	-4
  3881  000CB8  50E3               	movf	plusw1,w,c
  3882  000CBA  2062               	addwfc	btemp^0,w,c
  3883  000CBC  6E62               	movwf	btemp^0,c
  3884  000CBE  0EFC               	movlw	-4
  3885  000CC0  C062  FFE3         	movff	btemp,plusw1
  3886  000CC4                     l486:
  3887                           
  3888                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  3889                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  3890  000CC4  0EF6               	movlw	-10
  3891  000CC6  BEE3               	btfsc	plusw1,7,c
  3892  000CC8  EF75  F006         	goto	u198_20
  3893  000CCC  0EF6               	movlw	-10
  3894  000CCE  50E3               	movf	plusw1,w,c
  3895  000CD0  E10A               	bnz	u198_21
  3896  000CD2  0EF5               	movlw	-11
  3897  000CD4  CFE3 F062          	movff	plusw1,btemp
  3898  000CD8  0E0D               	movlw	13
  3899  000CDA  5E62               	subwf	btemp^0,f,c
  3900  000CDC  B0D8               	btfsc	status,0,c
  3901  000CDE  EF73  F006         	goto	u198_21
  3902  000CE2  EF75  F006         	goto	u198_20
  3903  000CE6                     u198_21:
  3904  000CE6  EF99  F006         	goto	l2752
  3905  000CEA                     u198_20:
  3906  000CEA                     
  3907                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  3908                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  3909  000CEA  0EF5               	movlw	-11
  3910  000CEC  50E3               	movf	plusw1,w,c
  3911  000CEE  6EE6               	movwf	postinc1,c
  3912  000CF0  EC01  F021         	call	_fround	;wreg free
  3913  000CF4  C062  FFE6         	movff	btemp,postinc1
  3914  000CF8  C063  FFE6         	movff	btemp+1,postinc1
  3915  000CFC  C064  FFE6         	movff	btemp+2,postinc1
  3916  000D00  C065  FFE6         	movff	btemp+3,postinc1
  3917                           
  3918                           ;stkvar	sprintf@fval @ sp[(-27)+0]
  3919  000D04  0EE5               	movlw	-27
  3920  000D06  CFE3 FFE6          	movff	plusw1,postinc1
  3921  000D0A  CFE3 FFE6          	movff	plusw1,postinc1
  3922  000D0E  CFE3 FFE6          	movff	plusw1,postinc1
  3923  000D12  CFE3 FFE6          	movff	plusw1,postinc1
  3924  000D16  ECBE  F00C         	call	___fladd	;wreg free
  3925                           
  3926                           ;stkvar	sprintf@fval @ sp[(-23)+0]
  3927  000D1A  0EE9               	movlw	-23
  3928  000D1C  C062  FFE3         	movff	btemp,plusw1
  3929  000D20  0EEA               	movlw	-22
  3930  000D22  C063  FFE3         	movff	btemp+1,plusw1
  3931  000D26  0EEB               	movlw	-21
  3932  000D28  C064  FFE3         	movff	btemp+2,plusw1
  3933  000D2C  0EEC               	movlw	-20
  3934  000D2E  C065  FFE3         	movff	btemp+3,plusw1
  3935  000D32                     l2752:
  3936                           
  3937                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3938                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  3939  000D32  0EFC               	movlw	-4
  3940  000D34  BEE3               	btfsc	plusw1,7,c
  3941  000D36  EFAC  F006         	goto	u199_20
  3942  000D3A  0EFC               	movlw	-4
  3943  000D3C  50E3               	movf	plusw1,w,c
  3944  000D3E  E10A               	bnz	u199_21
  3945  000D40  0EFB               	movlw	-5
  3946  000D42  CFE3 F062          	movff	plusw1,btemp
  3947  000D46  0E0A               	movlw	10
  3948  000D48  5E62               	subwf	btemp^0,f,c
  3949  000D4A  B0D8               	btfsc	status,0,c
  3950  000D4C  EFAA  F006         	goto	u199_21
  3951  000D50  EFAC  F006         	goto	u199_20
  3952  000D54                     u199_21:
  3953  000D54  EF03  F007         	goto	l2760
  3954  000D58                     u199_20:
  3955  000D58  0E00               	movlw	0
  3956  000D5A  6EE6               	movwf	postinc1,c
  3957  000D5C  0E00               	movlw	0
  3958  000D5E  6EE6               	movwf	postinc1,c
  3959  000D60  0E00               	movlw	0
  3960  000D62  6EE6               	movwf	postinc1,c
  3961  000D64  0E00               	movlw	0
  3962  000D66  6EE6               	movwf	postinc1,c
  3963                           
  3964                           ;stkvar	sprintf@fval @ sp[(-27)+0]
  3965  000D68  0EE5               	movlw	-27
  3966  000D6A  CFE3 FFE6          	movff	plusw1,postinc1
  3967  000D6E  CFE3 FFE6          	movff	plusw1,postinc1
  3968  000D72  CFE3 FFE6          	movff	plusw1,postinc1
  3969  000D76  CFE3 FFE6          	movff	plusw1,postinc1
  3970  000D7A  EC26  F02C         	call	___fleq	;wreg free
  3971  000D7E  B062               	btfsc	btemp& (0+255),0,c
  3972  000D80  EFC4  F006         	goto	u200_21
  3973  000D84  EFC6  F006         	goto	u200_20
  3974  000D88                     u200_21:
  3975  000D88  EF7C  F007         	goto	l2774
  3976  000D8C                     u200_20:
  3977  000D8C                     
  3978                           ;stkvar	sprintf@fval @ sp[(-23)+0]
  3979  000D8C  0EE9               	movlw	-23
  3980  000D8E  CFE3 FFE6          	movff	plusw1,postinc1
  3981  000D92  CFE3 FFE6          	movff	plusw1,postinc1
  3982  000D96  CFE3 FFE6          	movff	plusw1,postinc1
  3983  000D9A  CFE3 FFE6          	movff	plusw1,postinc1
  3984  000D9E  EC28  F025         	call	___fltol	;wreg free
  3985  000DA2  C062  F066         	movff	btemp,btemp+4
  3986  000DA6  C063  F067         	movff	btemp+1,btemp+5
  3987  000DAA  C064  F068         	movff	btemp+2,btemp+6
  3988  000DAE  C065  F069         	movff	btemp+3,btemp+7
  3989  000DB2  0E00               	movlw	0
  3990  000DB4  6E6A               	movwf	(btemp+8)^0,c
  3991  000DB6  6A6B               	clrf	(btemp+9)^0,c
  3992  000DB8  6A6C               	clrf	(btemp+10)^0,c
  3993  000DBA  6A6D               	clrf	(btemp+11)^0,c
  3994  000DBC  506D               	movf	(btemp+11)^0,w,c
  3995  000DBE  1869               	xorwf	(btemp+7)& (0+255),w,c
  3996  000DC0  E108               	bnz	u201_25
  3997  000DC2  506C               	movf	(btemp+10)^0,w,c
  3998  000DC4  1868               	xorwf	(btemp+6)& (0+255),w,c
  3999  000DC6  E105               	bnz	u201_25
  4000  000DC8  506B               	movf	(btemp+9)^0,w,c
  4001  000DCA  1867               	xorwf	(btemp+5)& (0+255),w,c
  4002  000DCC  E102               	bnz	u201_25
  4003  000DCE  506A               	movf	(btemp+8)^0,w,c
  4004  000DD0  1866               	xorwf	(btemp+4)& (0+255),w,c
  4005  000DD2                     u201_25:
  4006  000DD2  A4D8               	btfss	status,2,c
  4007  000DD4  EFEE  F006         	goto	u201_21
  4008  000DD8  EFF0  F006         	goto	u201_20
  4009  000DDC                     u201_21:
  4010  000DDC  EF7C  F007         	goto	l2774
  4011  000DE0                     u201_20:
  4012  000DE0                     
  4013                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  4014  000DE0  0EFC               	movlw	-4
  4015  000DE2  BEE3               	btfsc	plusw1,7,c
  4016  000DE4  EF01  F007         	goto	u202_21
  4017  000DE8  0EFC               	movlw	-4
  4018  000DEA  50E3               	movf	plusw1,w,c
  4019  000DEC  E10C               	bnz	u202_20
  4020  000DEE  0EFB               	movlw	-5
  4021  000DF0  CFE3 F062          	movff	plusw1,btemp
  4022  000DF4  0E02               	movlw	2
  4023  000DF6  5E62               	subwf	btemp^0,f,c
  4024  000DF8  A0D8               	btfss	status,0,c
  4025  000DFA  EF01  F007         	goto	u202_21
  4026  000DFE  EF03  F007         	goto	u202_20
  4027  000E02                     u202_21:
  4028  000E02  EF7C  F007         	goto	l2774
  4029  000E06                     u202_20:
  4030  000E06                     l2760:
  4031                           
  4032                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  4033  000E06  0E5F               	movlw	95
  4034  000E08  6EE6               	movwf	postinc1,c
  4035  000E0A  0E70               	movlw	112
  4036  000E0C  6EE6               	movwf	postinc1,c
  4037  000E0E  0E89               	movlw	137
  4038  000E10  6EE6               	movwf	postinc1,c
  4039  000E12  0E40               	movlw	64
  4040  000E14  6EE6               	movwf	postinc1,c
  4041                           
  4042                           ;stkvar	sprintf@tmpval @ sp[(-27)+4]
  4043  000E16  0EE9               	movlw	-23
  4044  000E18  CFE3 FFE6          	movff	plusw1,postinc1
  4045  000E1C  CFE3 FFE6          	movff	plusw1,postinc1
  4046  000E20  CFE3 FFE6          	movff	plusw1,postinc1
  4047  000E24  CFE3 FFE6          	movff	plusw1,postinc1
  4048  000E28  ECFC  F025         	call	___flge	;wreg free
  4049  000E2C  B062               	btfsc	btemp& (0+255),0,c
  4050  000E2E  EF1B  F007         	goto	u203_21
  4051  000E32  EF1D  F007         	goto	u203_20
  4052  000E36                     u203_21:
  4053  000E36  EF2A  F007         	goto	l2764
  4054  000E3A                     u203_20:
  4055  000E3A                     
  4056                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  4057                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  4058  000E3A  50E1               	movf	fsr1l,w,c
  4059  000E3C  0FFB               	addlw	-5
  4060  000E3E  6ED9               	movwf	fsr2l,c
  4061  000E40  50E2               	movf	fsr1h,w,c
  4062  000E42  6EDA               	movwf	fsr2h,c
  4063  000E44  0EFF               	movlw	255
  4064  000E46  22DA               	addwfc	fsr2h,f,c
  4065  000E48  0EF7               	movlw	247
  4066  000E4A  26DE               	addwf	postinc2,f,c
  4067  000E4C  0EFF               	movlw	255
  4068  000E4E  22DD               	addwfc	postdec2,f,c
  4069                           
  4070                           ;doprnt.c: 1148: }else{
  4071  000E50  EF35  F007         	goto	l2766
  4072  000E54                     l2764:
  4073                           
  4074                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  4075                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  4076  000E54  50E1               	movf	fsr1l,w,c
  4077  000E56  0FFB               	addlw	-5
  4078  000E58  6ED9               	movwf	fsr2l,c
  4079  000E5A  50E2               	movf	fsr1h,w,c
  4080  000E5C  6EDA               	movwf	fsr2h,c
  4081  000E5E  0EFF               	movlw	255
  4082  000E60  22DA               	addwfc	fsr2h,f,c
  4083  000E62  0EF8               	movlw	248
  4084  000E64  26DE               	addwf	postinc2,f,c
  4085  000E66  0EFF               	movlw	255
  4086  000E68  22DD               	addwfc	postdec2,f,c
  4087  000E6A                     l2766:
  4088                           
  4089                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  4090                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  4091  000E6A  0EFB               	movlw	-5
  4092  000E6C  50E3               	movf	plusw1,w,c
  4093  000E6E  6EE6               	movwf	postinc1,c
  4094  000E70  EC0C  F01B         	call	_scale	;wreg free
  4095                           
  4096                           ;stkvar	sprintf@tmpval @ sp[(-23)+4]
  4097  000E74  0EED               	movlw	-19
  4098  000E76  C062  FFE3         	movff	btemp,plusw1
  4099  000E7A  0EEE               	movlw	-18
  4100  000E7C  C063  FFE3         	movff	btemp+1,plusw1
  4101  000E80  0EEF               	movlw	-17
  4102  000E82  C064  FFE3         	movff	btemp+2,plusw1
  4103  000E86  0EF0               	movlw	-16
  4104  000E88  C065  FFE3         	movff	btemp+3,plusw1
  4105  000E8C                     
  4106                           ;stkvar	sprintf@tmpval @ sp[(-23)+4]
  4107  000E8C  0EED               	movlw	-19
  4108  000E8E  CFE3 FFE6          	movff	plusw1,postinc1
  4109  000E92  CFE3 FFE6          	movff	plusw1,postinc1
  4110  000E96  CFE3 FFE6          	movff	plusw1,postinc1
  4111  000E9A  CFE3 FFE6          	movff	plusw1,postinc1
  4112                           
  4113                           ;stkvar	sprintf@fval @ sp[(-27)+0]
  4114  000E9E  0EE5               	movlw	-27
  4115  000EA0  CFE3 FFE6          	movff	plusw1,postinc1
  4116  000EA4  CFE3 FFE6          	movff	plusw1,postinc1
  4117  000EA8  CFE3 FFE6          	movff	plusw1,postinc1
  4118  000EAC  CFE3 FFE6          	movff	plusw1,postinc1
  4119  000EB0  EC8F  F01E         	call	__div_to_l_	;wreg free
  4120                           
  4121                           ;stkvar	sprintf@val @ sp[(-23)+8]
  4122  000EB4  0EF1               	movlw	-15
  4123  000EB6  C062  FFE3         	movff	btemp,plusw1
  4124  000EBA  0EF2               	movlw	-14
  4125  000EBC  C063  FFE3         	movff	btemp+1,plusw1
  4126  000EC0  0EF3               	movlw	-13
  4127  000EC2  C064  FFE3         	movff	btemp+2,plusw1
  4128  000EC6  0EF4               	movlw	-12
  4129  000EC8  C065  FFE3         	movff	btemp+3,plusw1
  4130  000ECC                     
  4131                           ;doprnt.c: 1155: fval = 0.0;
  4132  000ECC  0E00               	movlw	0
  4133  000ECE  6E6A               	movwf	(btemp+8)^0,c
  4134  000ED0  0E00               	movlw	0
  4135  000ED2  6E6B               	movwf	(btemp+9)^0,c
  4136  000ED4  0E00               	movlw	0
  4137  000ED6  6E6C               	movwf	(btemp+10)^0,c
  4138  000ED8  0E00               	movlw	0
  4139  000EDA  6E6D               	movwf	(btemp+11)^0,c
  4140                           
  4141                           ;stkvar	sprintf@fval @ sp[(-23)+0]
  4142  000EDC  0EE9               	movlw	-23
  4143  000EDE  C06A  FFE3         	movff	btemp+8,plusw1
  4144  000EE2  0EEA               	movlw	-22
  4145  000EE4  C06B  FFE3         	movff	btemp+9,plusw1
  4146  000EE8  0EEB               	movlw	-21
  4147  000EEA  C06C  FFE3         	movff	btemp+10,plusw1
  4148  000EEE  0EEC               	movlw	-20
  4149  000EF0  C06D  FFE3         	movff	btemp+11,plusw1
  4150                           
  4151                           ;doprnt.c: 1156: } else {
  4152  000EF4  EFC3  F007         	goto	l2780
  4153  000EF8                     l2774:
  4154                           
  4155                           ;doprnt.c: 1157: val = (unsigned long)fval;
  4156                           ;stkvar	sprintf@fval @ sp[(-23)+0]
  4157  000EF8  0EE9               	movlw	-23
  4158  000EFA  CFE3 FFE6          	movff	plusw1,postinc1
  4159  000EFE  CFE3 FFE6          	movff	plusw1,postinc1
  4160  000F02  CFE3 FFE6          	movff	plusw1,postinc1
  4161  000F06  CFE3 FFE6          	movff	plusw1,postinc1
  4162  000F0A  EC28  F025         	call	___fltol	;wreg free
  4163                           
  4164                           ;stkvar	sprintf@val @ sp[(-23)+8]
  4165  000F0E  0EF1               	movlw	-15
  4166  000F10  C062  FFE3         	movff	btemp,plusw1
  4167  000F14  0EF2               	movlw	-14
  4168  000F16  C063  FFE3         	movff	btemp+1,plusw1
  4169  000F1A  0EF3               	movlw	-13
  4170  000F1C  C064  FFE3         	movff	btemp+2,plusw1
  4171  000F20  0EF4               	movlw	-12
  4172  000F22  C065  FFE3         	movff	btemp+3,plusw1
  4173  000F26                     
  4174                           ;doprnt.c: 1158: fval -= (double)val;
  4175                           ;stkvar	sprintf@val @ sp[(-23)+8]
  4176  000F26  0EF1               	movlw	-15
  4177  000F28  CFE3 FFE6          	movff	plusw1,postinc1
  4178  000F2C  CFE3 FFE6          	movff	plusw1,postinc1
  4179  000F30  CFE3 FFE6          	movff	plusw1,postinc1
  4180  000F34  CFE3 FFE6          	movff	plusw1,postinc1
  4181  000F38  0E00               	movlw	0
  4182  000F3A  6EE6               	movwf	postinc1,c
  4183  000F3C  ECD1  F01F         	call	___xxtofl	;wreg free
  4184  000F40  C062  FFE6         	movff	btemp,postinc1
  4185  000F44  C063  FFE6         	movff	btemp+1,postinc1
  4186  000F48  C064  FFE6         	movff	btemp+2,postinc1
  4187  000F4C  C065  FFE6         	movff	btemp+3,postinc1
  4188                           
  4189                           ;stkvar	sprintf@fval @ sp[(-27)+0]
  4190  000F50  0EE5               	movlw	-27
  4191  000F52  CFE3 FFE6          	movff	plusw1,postinc1
  4192  000F56  CFE3 FFE6          	movff	plusw1,postinc1
  4193  000F5A  CFE3 FFE6          	movff	plusw1,postinc1
  4194  000F5E  CFE3 FFE6          	movff	plusw1,postinc1
  4195  000F62  ECB3  F032         	call	___flsub	;wreg free
  4196                           
  4197                           ;stkvar	sprintf@fval @ sp[(-23)+0]
  4198  000F66  0EE9               	movlw	-23
  4199  000F68  C062  FFE3         	movff	btemp,plusw1
  4200  000F6C  0EEA               	movlw	-22
  4201  000F6E  C063  FFE3         	movff	btemp+1,plusw1
  4202  000F72  0EEB               	movlw	-21
  4203  000F74  C064  FFE3         	movff	btemp+2,plusw1
  4204  000F78  0EEC               	movlw	-20
  4205  000F7A  C065  FFE3         	movff	btemp+3,plusw1
  4206  000F7E                     
  4207                           ;doprnt.c: 1159: eexp = 0;
  4208                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  4209  000F7E  0EFB               	movlw	-5
  4210  000F80  6AE3               	clrf	plusw1,c
  4211  000F82  0EFC               	movlw	-4
  4212  000F84  6AE3               	clrf	plusw1,c
  4213  000F86                     l2780:
  4214                           
  4215                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  4216                           ;stkvar	sprintf@c @ sp[(-23)+22]
  4217  000F86  0EFF               	movlw	-1
  4218  000F88  6AE3               	clrf	plusw1,c
  4219  000F8A  2AE3               	incf	plusw1,f,c
  4220  000F8C                     l2786:
  4221                           
  4222                           ;doprnt.c: 1163: if(val < dpowers[c])
  4223                           ;stkvar	sprintf@c @ sp[(-23)+22]
  4224  000F8C  0EFF               	movlw	-1
  4225  000F8E  50E3               	movf	plusw1,w,c
  4226  000F90  0D04               	mullw	4
  4227  000F92  0E69               	movlw	low _dpowers
  4228  000F94  24F3               	addwf	243,w,c
  4229  000F96  6EF6               	movwf	tblptrl,c
  4230  000F98  0E06               	movlw	high _dpowers
  4231  000F9A  20F4               	addwfc	244,w,c
  4232  000F9C  6EF7               	movwf	tblptrh,c
  4233  000F9E                     	if	0	;There are less than 3 active tblptr bytes
  4234  000F9E                     	endif
  4235                           
  4236                           ;stkvar	sprintf@val @ sp[(-23)+8]
  4237  000F9E  0EF1               	movlw	-15
  4238  000FA0  CFE3 F062          	movff	plusw1,btemp
  4239  000FA4  0009               	tblrd		*+
  4240  000FA6  50F5               	movf	tablat,w,c
  4241  000FA8  5C62               	subwf	btemp^0,w,c
  4242  000FAA  0EF2               	movlw	-14
  4243  000FAC  CFE3 F062          	movff	plusw1,btemp
  4244  000FB0  0009               	tblrd		*+
  4245  000FB2  50F5               	movf	tablat,w,c
  4246  000FB4  5862               	subwfb	btemp^0,w,c
  4247  000FB6  0EF3               	movlw	-13
  4248  000FB8  CFE3 F062          	movff	plusw1,btemp
  4249  000FBC  0009               	tblrd		*+
  4250  000FBE  50F5               	movf	tablat,w,c
  4251  000FC0  5862               	subwfb	btemp^0,w,c
  4252  000FC2  0EF4               	movlw	-12
  4253  000FC4  CFE3 F062          	movff	plusw1,btemp
  4254  000FC8  0009               	tblrd		*+
  4255  000FCA  50F5               	movf	tablat,w,c
  4256  000FCC  5862               	subwfb	btemp^0,w,c
  4257  000FCE  B0D8               	btfsc	status,0,c
  4258  000FD0  EFEC  F007         	goto	u204_21
  4259  000FD4  EFEE  F007         	goto	u204_20
  4260  000FD8                     u204_21:
  4261  000FD8  EFF0  F007         	goto	l2790
  4262  000FDC                     u204_20:
  4263  000FDC  EFFE  F007         	goto	l2794
  4264  000FE0                     l2790:
  4265                           
  4266                           ;stkvar	sprintf@c @ sp[(-23)+22]
  4267  000FE0  0EFF               	movlw	-1
  4268  000FE2  2AE3               	incf	plusw1,f,c
  4269  000FE4                     
  4270                           ;stkvar	sprintf@c @ sp[(-23)+22]
  4271  000FE4  0EFF               	movlw	-1
  4272  000FE6  CFE3 F062          	movff	plusw1,btemp
  4273  000FEA  0E0A               	movlw	10
  4274  000FEC  1862               	xorwf	btemp^0,w,c
  4275  000FEE  A4D8               	btfss	status,2,c
  4276  000FF0  EFFC  F007         	goto	u205_21
  4277  000FF4  EFFE  F007         	goto	u205_20
  4278  000FF8                     u205_21:
  4279  000FF8  EFC6  F007         	goto	l2786
  4280  000FFC                     u205_20:
  4281  000FFC                     l2794:
  4282                           
  4283                           ;doprnt.c: 1168: width -= prec + c + eexp;
  4284                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  4285                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  4286                           ;stkvar	sprintf@c @ sp[(-23)+22]
  4287  000FFC  0EFF               	movlw	-1
  4288  000FFE  50E3               	movf	plusw1,w,c
  4289  001000  6E6C               	movwf	(btemp+10)^0,c
  4290  001002  6A6D               	clrf	(btemp+11)^0,c
  4291  001004  0EF5               	movlw	-11
  4292  001006  50E3               	movf	plusw1,w,c
  4293  001008  266C               	addwf	(btemp+10)^0,f,c
  4294  00100A  0EF6               	movlw	-10
  4295  00100C  50E3               	movf	plusw1,w,c
  4296  00100E  226D               	addwfc	(btemp+11)^0,f,c
  4297  001010  0EFB               	movlw	-5
  4298  001012  50E3               	movf	plusw1,w,c
  4299  001014  266C               	addwf	(btemp+10)^0,f,c
  4300  001016  0EFC               	movlw	-4
  4301  001018  50E3               	movf	plusw1,w,c
  4302  00101A  226D               	addwfc	(btemp+11)^0,f,c
  4303                           
  4304                           ;stkvar	sprintf@width @ sp[(-23)+14]
  4305  00101C  0EF7               	movlw	-9
  4306  00101E  CFE3 F062          	movff	plusw1,btemp
  4307  001022  506C               	movf	(btemp+10)^0,w,c
  4308  001024  5E62               	subwf	btemp^0,f,c
  4309  001026  0EF7               	movlw	-9
  4310  001028  C062  FFE3         	movff	btemp,plusw1
  4311  00102C  0EF8               	movlw	-8
  4312  00102E  CFE3 F062          	movff	plusw1,btemp
  4313  001032  506D               	movf	(btemp+11)^0,w,c
  4314  001034  5A62               	subwfb	btemp^0,f,c
  4315  001036  0EF8               	movlw	-8
  4316  001038  C062  FFE3         	movff	btemp,plusw1
  4317  00103C                     
  4318                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
  4319                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  4320  00103C  0EF5               	movlw	-11
  4321  00103E  CFE3 F062          	movff	plusw1,btemp
  4322  001042  0EF6               	movlw	-10
  4323  001044  50E3               	movf	plusw1,w,c
  4324  001046  1062               	iorwf	btemp^0,w,c
  4325  001048  B4D8               	btfsc	status,2,c
  4326  00104A  EF29  F008         	goto	u206_21
  4327  00104E  EF2B  F008         	goto	u206_20
  4328  001052                     u206_21:
  4329  001052  EF35  F008         	goto	l2800
  4330  001056                     u206_20:
  4331  001056                     
  4332                           ;doprnt.c: 1174: width--;
  4333                           ;stkvar	sprintf@width @ sp[(-23)+14]
  4334  001056  50E1               	movf	fsr1l,w,c
  4335  001058  0FF7               	addlw	-9
  4336  00105A  6ED9               	movwf	fsr2l,c
  4337  00105C  50E2               	movf	fsr1h,w,c
  4338  00105E  6EDA               	movwf	fsr2h,c
  4339  001060  0EFF               	movlw	255
  4340  001062  22DA               	addwfc	fsr2h,f,c
  4341  001064  06DE               	decf	postinc2,f,c
  4342  001066  0E00               	movlw	0
  4343  001068  5ADD               	subwfb	postdec2,f,c
  4344  00106A                     l2800:
  4345                           
  4346                           ;doprnt.c: 1175: if(flag & 0x03)
  4347                           ;stkvar	sprintf@flag @ sp[(-23)+16]
  4348  00106A  0EF9               	movlw	-7
  4349  00106C  CFE3 F06D          	movff	plusw1,btemp+11
  4350  001070  0E03               	movlw	3
  4351  001072  166D               	andwf	(btemp+11)^0,f,c
  4352  001074  B4D8               	btfsc	status,2,c
  4353  001076  EF3F  F008         	goto	u207_21
  4354  00107A  EF41  F008         	goto	u207_20
  4355  00107E                     u207_21:
  4356  00107E  EF4B  F008         	goto	l2804
  4357  001082                     u207_20:
  4358  001082                     
  4359                           ;doprnt.c: 1176: width--;
  4360                           ;stkvar	sprintf@width @ sp[(-23)+14]
  4361  001082  50E1               	movf	fsr1l,w,c
  4362  001084  0FF7               	addlw	-9
  4363  001086  6ED9               	movwf	fsr2l,c
  4364  001088  50E2               	movf	fsr1h,w,c
  4365  00108A  6EDA               	movwf	fsr2h,c
  4366  00108C  0EFF               	movlw	255
  4367  00108E  22DA               	addwfc	fsr2h,f,c
  4368  001090  06DE               	decf	postinc2,f,c
  4369  001092  0E00               	movlw	0
  4370  001094  5ADD               	subwfb	postdec2,f,c
  4371  001096                     l2804:
  4372                           
  4373                           ;doprnt.c: 1179: if(flag & 0x04) {
  4374                           ;stkvar	sprintf@flag @ sp[(-23)+16]
  4375  001096  0EF9               	movlw	-7
  4376  001098  A4E3               	btfss	plusw1,2,c
  4377  00109A  EF51  F008         	goto	u208_21
  4378  00109E  EF53  F008         	goto	u208_20
  4379  0010A2                     u208_21:
  4380  0010A2  EFCC  F008         	goto	l2826
  4381  0010A6                     u208_20:
  4382  0010A6                     
  4383                           ;doprnt.c: 1183: if(flag & 0x03)
  4384                           ;stkvar	sprintf@flag @ sp[(-23)+16]
  4385  0010A6  0EF9               	movlw	-7
  4386  0010A8  CFE3 F06D          	movff	plusw1,btemp+11
  4387  0010AC  0E03               	movlw	3
  4388  0010AE  166D               	andwf	(btemp+11)^0,f,c
  4389  0010B0  B4D8               	btfsc	status,2,c
  4390  0010B2  EF5D  F008         	goto	u209_21
  4391  0010B6  EF5F  F008         	goto	u209_20
  4392  0010BA                     u209_21:
  4393  0010BA  EF99  F008         	goto	l2818
  4394  0010BE                     u209_20:
  4395  0010BE                     
  4396                           ;doprnt.c: 1185: ((*sp++ = ('-')));
  4397                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  4398  0010BE  0EE6               	movlw	-26
  4399  0010C0  CFE3 FFD9          	movff	plusw1,fsr2l
  4400  0010C4  0EE7               	movlw	-25
  4401  0010C6  CFE3 FFDA          	movff	plusw1,fsr2h
  4402  0010CA  0E2D               	movlw	45
  4403  0010CC  6EDF               	movwf	indf2,c
  4404  0010CE                     
  4405                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  4406  0010CE  0EE6               	movlw	-26
  4407  0010D0  50E3               	movf	plusw1,w,c
  4408  0010D2  0F01               	addlw	1
  4409  0010D4  6E62               	movwf	btemp^0,c
  4410  0010D6  0EE6               	movlw	-26
  4411  0010D8  C062  FFE3         	movff	btemp,plusw1
  4412  0010DC  6A62               	clrf	btemp^0,c
  4413  0010DE  0EE7               	movlw	-25
  4414  0010E0  50E3               	movf	plusw1,w,c
  4415  0010E2  2062               	addwfc	btemp^0,w,c
  4416  0010E4  6E62               	movwf	btemp^0,c
  4417  0010E6  0EE7               	movlw	-25
  4418  0010E8  C062  FFE3         	movff	btemp,plusw1
  4419  0010EC  EF99  F008         	goto	l2818
  4420  0010F0                     l2812:
  4421                           
  4422                           ;doprnt.c: 1195: ((*sp++ = ('0')));
  4423                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  4424  0010F0  0EE6               	movlw	-26
  4425  0010F2  CFE3 FFD9          	movff	plusw1,fsr2l
  4426  0010F6  0EE7               	movlw	-25
  4427  0010F8  CFE3 FFDA          	movff	plusw1,fsr2h
  4428  0010FC  0E30               	movlw	48
  4429  0010FE  6EDF               	movwf	indf2,c
  4430  001100                     
  4431                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  4432  001100  0EE6               	movlw	-26
  4433  001102  50E3               	movf	plusw1,w,c
  4434  001104  0F01               	addlw	1
  4435  001106  6E62               	movwf	btemp^0,c
  4436  001108  0EE6               	movlw	-26
  4437  00110A  C062  FFE3         	movff	btemp,plusw1
  4438  00110E  6A62               	clrf	btemp^0,c
  4439  001110  0EE7               	movlw	-25
  4440  001112  50E3               	movf	plusw1,w,c
  4441  001114  2062               	addwfc	btemp^0,w,c
  4442  001116  6E62               	movwf	btemp^0,c
  4443  001118  0EE7               	movlw	-25
  4444  00111A  C062  FFE3         	movff	btemp,plusw1
  4445  00111E                     
  4446                           ;doprnt.c: 1196: width--;
  4447                           ;stkvar	sprintf@width @ sp[(-23)+14]
  4448  00111E  50E1               	movf	fsr1l,w,c
  4449  001120  0FF7               	addlw	-9
  4450  001122  6ED9               	movwf	fsr2l,c
  4451  001124  50E2               	movf	fsr1h,w,c
  4452  001126  6EDA               	movwf	fsr2h,c
  4453  001128  0EFF               	movlw	255
  4454  00112A  22DA               	addwfc	fsr2h,f,c
  4455  00112C  06DE               	decf	postinc2,f,c
  4456  00112E  0E00               	movlw	0
  4457  001130  5ADD               	subwfb	postdec2,f,c
  4458  001132                     l2818:
  4459                           
  4460                           ;stkvar	sprintf@width @ sp[(-23)+14]
  4461  001132  0EF8               	movlw	-8
  4462  001134  BEE3               	btfsc	plusw1,7,c
  4463  001136  EFA9  F008         	goto	u210_20
  4464  00113A  0EF8               	movlw	-8
  4465  00113C  50E3               	movf	plusw1,w,c
  4466  00113E  E107               	bnz	u210_21
  4467  001140  0EF7               	movlw	-9
  4468  001142  04E3               	decf	plusw1,w,c
  4469  001144  B0D8               	btfsc	status,0,c
  4470  001146  EFA7  F008         	goto	u210_21
  4471  00114A  EFA9  F008         	goto	u210_20
  4472  00114E                     u210_21:
  4473  00114E  EF78  F008         	goto	l2812
  4474  001152                     u210_20:
  4475  001152  EF58  F009         	goto	l2842
  4476  001156                     l2820:
  4477                           
  4478                           ;doprnt.c: 1207: ((*sp++ = (' ')));
  4479                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  4480  001156  0EE6               	movlw	-26
  4481  001158  CFE3 FFD9          	movff	plusw1,fsr2l
  4482  00115C  0EE7               	movlw	-25
  4483  00115E  CFE3 FFDA          	movff	plusw1,fsr2h
  4484  001162  0E20               	movlw	32
  4485  001164  6EDF               	movwf	indf2,c
  4486  001166                     
  4487                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  4488  001166  0EE6               	movlw	-26
  4489  001168  50E3               	movf	plusw1,w,c
  4490  00116A  0F01               	addlw	1
  4491  00116C  6E62               	movwf	btemp^0,c
  4492  00116E  0EE6               	movlw	-26
  4493  001170  C062  FFE3         	movff	btemp,plusw1
  4494  001174  6A62               	clrf	btemp^0,c
  4495  001176  0EE7               	movlw	-25
  4496  001178  50E3               	movf	plusw1,w,c
  4497  00117A  2062               	addwfc	btemp^0,w,c
  4498  00117C  6E62               	movwf	btemp^0,c
  4499  00117E  0EE7               	movlw	-25
  4500  001180  C062  FFE3         	movff	btemp,plusw1
  4501  001184                     
  4502                           ;doprnt.c: 1208: width--;
  4503                           ;stkvar	sprintf@width @ sp[(-23)+14]
  4504  001184  50E1               	movf	fsr1l,w,c
  4505  001186  0FF7               	addlw	-9
  4506  001188  6ED9               	movwf	fsr2l,c
  4507  00118A  50E2               	movf	fsr1h,w,c
  4508  00118C  6EDA               	movwf	fsr2h,c
  4509  00118E  0EFF               	movlw	255
  4510  001190  22DA               	addwfc	fsr2h,f,c
  4511  001192  06DE               	decf	postinc2,f,c
  4512  001194  0E00               	movlw	0
  4513  001196  5ADD               	subwfb	postdec2,f,c
  4514  001198                     l2826:
  4515                           
  4516                           ;stkvar	sprintf@width @ sp[(-23)+14]
  4517  001198  0EF8               	movlw	-8
  4518  00119A  BEE3               	btfsc	plusw1,7,c
  4519  00119C  EFDC  F008         	goto	u211_20
  4520  0011A0  0EF8               	movlw	-8
  4521  0011A2  50E3               	movf	plusw1,w,c
  4522  0011A4  E107               	bnz	u211_21
  4523  0011A6  0EF7               	movlw	-9
  4524  0011A8  04E3               	decf	plusw1,w,c
  4525  0011AA  B0D8               	btfsc	status,0,c
  4526  0011AC  EFDA  F008         	goto	u211_21
  4527  0011B0  EFDC  F008         	goto	u211_20
  4528  0011B4                     u211_21:
  4529  0011B4  EFAB  F008         	goto	l2820
  4530  0011B8                     u211_20:
  4531  0011B8                     
  4532                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  4533                           ;stkvar	sprintf@flag @ sp[(-23)+16]
  4534  0011B8  0EF9               	movlw	-7
  4535  0011BA  CFE3 F06D          	movff	plusw1,btemp+11
  4536  0011BE  0E03               	movlw	3
  4537  0011C0  166D               	andwf	(btemp+11)^0,f,c
  4538  0011C2  B4D8               	btfsc	status,2,c
  4539  0011C4  EFE6  F008         	goto	u212_21
  4540  0011C8  EFE8  F008         	goto	u212_20
  4541  0011CC                     u212_21:
  4542  0011CC  EF58  F009         	goto	l2842
  4543  0011D0                     u212_20:
  4544  0011D0                     
  4545                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  4546                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  4547  0011D0  0EE6               	movlw	-26
  4548  0011D2  CFE3 FFD9          	movff	plusw1,fsr2l
  4549  0011D6  0EE7               	movlw	-25
  4550  0011D8  CFE3 FFDA          	movff	plusw1,fsr2h
  4551  0011DC  0E2D               	movlw	45
  4552  0011DE  6EDF               	movwf	indf2,c
  4553  0011E0                     l2832:
  4554                           
  4555                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  4556  0011E0  0EE6               	movlw	-26
  4557  0011E2  50E3               	movf	plusw1,w,c
  4558  0011E4  0F01               	addlw	1
  4559  0011E6  6E62               	movwf	btemp^0,c
  4560  0011E8  0EE6               	movlw	-26
  4561  0011EA  C062  FFE3         	movff	btemp,plusw1
  4562  0011EE  6A62               	clrf	btemp^0,c
  4563  0011F0  0EE7               	movlw	-25
  4564  0011F2  50E3               	movf	plusw1,w,c
  4565  0011F4  2062               	addwfc	btemp^0,w,c
  4566  0011F6  6E62               	movwf	btemp^0,c
  4567  0011F8  0EE7               	movlw	-25
  4568  0011FA  C062  FFE3         	movff	btemp,plusw1
  4569  0011FE  EF58  F009         	goto	l2842
  4570  001202                     l2834:
  4571                           
  4572                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  4573                           ;stkvar	sprintf@c @ sp[(-23)+22]
  4574  001202  0EFF               	movlw	-1
  4575  001204  50E3               	movf	plusw1,w,c
  4576  001206  0D04               	mullw	4
  4577  001208  0E69               	movlw	low _dpowers
  4578  00120A  24F3               	addwf	243,w,c
  4579  00120C  6EF6               	movwf	tblptrl,c
  4580  00120E  0E06               	movlw	high _dpowers
  4581  001210  20F4               	addwfc	244,w,c
  4582  001212  6EF7               	movwf	tblptrh,c
  4583  001214                     	if	0	;There are less than 3 active tblptr bytes
  4584  001214                     	endif
  4585  001214  0009               	tblrd		*+
  4586  001216  CFF5 FFE6          	movff	tablat,postinc1
  4587  00121A  0009               	tblrd		*+
  4588  00121C  CFF5 FFE6          	movff	tablat,postinc1
  4589  001220  0009               	tblrd		*+
  4590  001222  CFF5 FFE6          	movff	tablat,postinc1
  4591  001226  0009               	tblrd		*+
  4592  001228  CFF5 FFE6          	movff	tablat,postinc1
  4593                           
  4594                           ;stkvar	sprintf@val @ sp[(-27)+8]
  4595  00122C  0EED               	movlw	-19
  4596  00122E  CFE3 FFE6          	movff	plusw1,postinc1
  4597  001232  CFE3 FFE6          	movff	plusw1,postinc1
  4598  001236  CFE3 FFE6          	movff	plusw1,postinc1
  4599  00123A  CFE3 FFE6          	movff	plusw1,postinc1
  4600  00123E  EC87  F029         	call	___lldiv	;wreg free
  4601                           
  4602                           ;stkvar	sprintf@tmpval @ sp[(-23)+4]
  4603  001242  0EED               	movlw	-19
  4604  001244  C062  FFE3         	movff	btemp,plusw1
  4605  001248  0EEE               	movlw	-18
  4606  00124A  C063  FFE3         	movff	btemp+1,plusw1
  4607  00124E  0EEF               	movlw	-17
  4608  001250  C064  FFE3         	movff	btemp+2,plusw1
  4609  001254  0EF0               	movlw	-16
  4610  001256  C065  FFE3         	movff	btemp+3,plusw1
  4611  00125A                     
  4612                           ;doprnt.c: 1228: tmpval.vd %= 10;
  4613  00125A  0E0A               	movlw	10
  4614  00125C  6EE6               	movwf	postinc1,c
  4615  00125E  0E00               	movlw	0
  4616  001260  6EE6               	movwf	postinc1,c
  4617  001262  0E00               	movlw	0
  4618  001264  6EE6               	movwf	postinc1,c
  4619  001266  0E00               	movlw	0
  4620  001268  6EE6               	movwf	postinc1,c
  4621                           
  4622                           ;stkvar	sprintf@tmpval @ sp[(-27)+4]
  4623  00126A  0EE9               	movlw	-23
  4624  00126C  CFE3 FFE6          	movff	plusw1,postinc1
  4625  001270  CFE3 FFE6          	movff	plusw1,postinc1
  4626  001274  CFE3 FFE6          	movff	plusw1,postinc1
  4627  001278  CFE3 FFE6          	movff	plusw1,postinc1
  4628  00127C  ECB1  F02A         	call	___llmod	;wreg free
  4629                           
  4630                           ;stkvar	sprintf@tmpval @ sp[(-23)+4]
  4631  001280  0EED               	movlw	-19
  4632  001282  C062  FFE3         	movff	btemp,plusw1
  4633  001286  0EEE               	movlw	-18
  4634  001288  C063  FFE3         	movff	btemp+1,plusw1
  4635  00128C  0EEF               	movlw	-17
  4636  00128E  C064  FFE3         	movff	btemp+2,plusw1
  4637  001292  0EF0               	movlw	-16
  4638  001294  C065  FFE3         	movff	btemp+3,plusw1
  4639  001298                     
  4640                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  4641                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  4642  001298  0EE6               	movlw	-26
  4643  00129A  CFE3 FFD9          	movff	plusw1,fsr2l
  4644  00129E  0EE7               	movlw	-25
  4645  0012A0  CFE3 FFDA          	movff	plusw1,fsr2h
  4646                           
  4647                           ;stkvar	sprintf@tmpval @ sp[(-23)+4]
  4648  0012A4  0EED               	movlw	-19
  4649  0012A6  50E3               	movf	plusw1,w,c
  4650  0012A8  0F30               	addlw	48
  4651  0012AA  6EDF               	movwf	indf2,c
  4652  0012AC  EFF0  F008         	goto	l2832
  4653  0012B0                     l2842:
  4654                           
  4655                           ;stkvar	sprintf@c @ sp[(-23)+22]
  4656  0012B0  0EFF               	movlw	-1
  4657  0012B2  06E3               	decf	plusw1,f,c
  4658  0012B4  0EFF               	movlw	-1
  4659  0012B6  28E3               	incf	plusw1,w,c
  4660  0012B8  A4D8               	btfss	status,2,c
  4661  0012BA  EF61  F009         	goto	u213_21
  4662  0012BE  EF63  F009         	goto	u213_20
  4663  0012C2                     u213_21:
  4664  0012C2  EF01  F009         	goto	l2834
  4665  0012C6                     u213_20:
  4666  0012C6  EF86  F009         	goto	l2850
  4667  0012CA                     l2844:
  4668                           
  4669                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  4670                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  4671  0012CA  0EE6               	movlw	-26
  4672  0012CC  CFE3 FFD9          	movff	plusw1,fsr2l
  4673  0012D0  0EE7               	movlw	-25
  4674  0012D2  CFE3 FFDA          	movff	plusw1,fsr2h
  4675  0012D6  0E30               	movlw	48
  4676  0012D8  6EDF               	movwf	indf2,c
  4677  0012DA                     
  4678                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  4679  0012DA  0EE6               	movlw	-26
  4680  0012DC  50E3               	movf	plusw1,w,c
  4681  0012DE  0F01               	addlw	1
  4682  0012E0  6E62               	movwf	btemp^0,c
  4683  0012E2  0EE6               	movlw	-26
  4684  0012E4  C062  FFE3         	movff	btemp,plusw1
  4685  0012E8  6A62               	clrf	btemp^0,c
  4686  0012EA  0EE7               	movlw	-25
  4687  0012EC  50E3               	movf	plusw1,w,c
  4688  0012EE  2062               	addwfc	btemp^0,w,c
  4689  0012F0  6E62               	movwf	btemp^0,c
  4690  0012F2  0EE7               	movlw	-25
  4691  0012F4  C062  FFE3         	movff	btemp,plusw1
  4692  0012F8                     
  4693                           ;doprnt.c: 1235: eexp--;
  4694                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  4695  0012F8  50E1               	movf	fsr1l,w,c
  4696  0012FA  0FFB               	addlw	-5
  4697  0012FC  6ED9               	movwf	fsr2l,c
  4698  0012FE  50E2               	movf	fsr1h,w,c
  4699  001300  6EDA               	movwf	fsr2h,c
  4700  001302  0EFF               	movlw	255
  4701  001304  22DA               	addwfc	fsr2h,f,c
  4702  001306  06DE               	decf	postinc2,f,c
  4703  001308  0E00               	movlw	0
  4704  00130A  5ADD               	subwfb	postdec2,f,c
  4705  00130C                     l2850:
  4706                           
  4707                           ;stkvar	sprintf@eexp @ sp[(-23)+18]
  4708  00130C  0EFC               	movlw	-4
  4709  00130E  BEE3               	btfsc	plusw1,7,c
  4710  001310  EF96  F009         	goto	u214_20
  4711  001314  0EFC               	movlw	-4
  4712  001316  50E3               	movf	plusw1,w,c
  4713  001318  E107               	bnz	u214_21
  4714  00131A  0EFB               	movlw	-5
  4715  00131C  04E3               	decf	plusw1,w,c
  4716  00131E  B0D8               	btfsc	status,0,c
  4717  001320  EF94  F009         	goto	u214_21
  4718  001324  EF96  F009         	goto	u214_20
  4719  001328                     u214_21:
  4720  001328  EF65  F009         	goto	l2844
  4721  00132C                     u214_20:
  4722  00132C                     
  4723                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  4724                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  4725  00132C  0EF6               	movlw	-10
  4726  00132E  BEE3               	btfsc	plusw1,7,c
  4727  001330  EFA7  F009         	goto	u215_21
  4728  001334  0EF6               	movlw	-10
  4729  001336  50E3               	movf	plusw1,w,c
  4730  001338  E10C               	bnz	u215_20
  4731  00133A  0EF5               	movlw	-11
  4732  00133C  CFE3 F062          	movff	plusw1,btemp
  4733  001340  0E09               	movlw	9
  4734  001342  5E62               	subwf	btemp^0,f,c
  4735  001344  A0D8               	btfss	status,0,c
  4736  001346  EFA7  F009         	goto	u215_21
  4737  00134A  EFA9  F009         	goto	u215_20
  4738  00134E                     u215_21:
  4739  00134E  EFAE  F009         	goto	l2856
  4740  001352                     u215_20:
  4741  001352                     
  4742                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  4743                           ;stkvar	sprintf@c @ sp[(-23)+22]
  4744  001352  0EFF               	movlw	-1
  4745  001354  6AE3               	clrf	plusw1,c
  4746  001356  86E3               	bsf	plusw1,3,c
  4747  001358  EFB4  F009         	goto	l2858
  4748  00135C                     l2856:
  4749                           
  4750                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  4751                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  4752                           ;stkvar	sprintf@c @ sp[(-23)+22]
  4753  00135C  0EF5               	movlw	-11
  4754  00135E  CFE3 F062          	movff	plusw1,btemp
  4755  001362  0EFF               	movlw	-1
  4756  001364  C062  FFE3         	movff	btemp,plusw1
  4757  001368                     l2858:
  4758                           
  4759                           ;doprnt.c: 1241: prec -= (int)c;
  4760                           ;stkvar	sprintf@c @ sp[(-23)+22]
  4761  001368  0EFF               	movlw	-1
  4762  00136A  50E3               	movf	plusw1,w,c
  4763  00136C  6E6C               	movwf	(btemp+10)^0,c
  4764  00136E  6A6D               	clrf	(btemp+11)^0,c
  4765                           
  4766                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  4767  001370  0EF5               	movlw	-11
  4768  001372  CFE3 F062          	movff	plusw1,btemp
  4769  001376  506C               	movf	(btemp+10)^0,w,c
  4770  001378  5E62               	subwf	btemp^0,f,c
  4771  00137A  0EF5               	movlw	-11
  4772  00137C  C062  FFE3         	movff	btemp,plusw1
  4773  001380  0EF6               	movlw	-10
  4774  001382  CFE3 F062          	movff	plusw1,btemp
  4775  001386  506D               	movf	(btemp+11)^0,w,c
  4776  001388  5A62               	subwfb	btemp^0,f,c
  4777  00138A  0EF6               	movlw	-10
  4778  00138C  C062  FFE3         	movff	btemp,plusw1
  4779  001390                     
  4780                           ;doprnt.c: 1245: if(c)
  4781                           ;stkvar	sprintf@c @ sp[(-23)+22]
  4782  001390  0EFF               	movlw	-1
  4783  001392  50E3               	movf	plusw1,w,c
  4784  001394  B4D8               	btfsc	status,2,c
  4785  001396  EFCF  F009         	goto	u216_21
  4786  00139A  EFD1  F009         	goto	u216_20
  4787  00139E                     u216_21:
  4788  00139E  EFE8  F009         	goto	l2866
  4789  0013A2                     u216_20:
  4790  0013A2                     
  4791                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  4792                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  4793  0013A2  0EE6               	movlw	-26
  4794  0013A4  CFE3 FFD9          	movff	plusw1,fsr2l
  4795  0013A8  0EE7               	movlw	-25
  4796  0013AA  CFE3 FFDA          	movff	plusw1,fsr2h
  4797  0013AE  0E2E               	movlw	46
  4798  0013B0  6EDF               	movwf	indf2,c
  4799  0013B2                     
  4800                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  4801  0013B2  0EE6               	movlw	-26
  4802  0013B4  50E3               	movf	plusw1,w,c
  4803  0013B6  0F01               	addlw	1
  4804  0013B8  6E62               	movwf	btemp^0,c
  4805  0013BA  0EE6               	movlw	-26
  4806  0013BC  C062  FFE3         	movff	btemp,plusw1
  4807  0013C0  6A62               	clrf	btemp^0,c
  4808  0013C2  0EE7               	movlw	-25
  4809  0013C4  50E3               	movf	plusw1,w,c
  4810  0013C6  2062               	addwfc	btemp^0,w,c
  4811  0013C8  6E62               	movwf	btemp^0,c
  4812  0013CA  0EE7               	movlw	-25
  4813  0013CC  C062  FFE3         	movff	btemp,plusw1
  4814  0013D0                     l2866:
  4815                           
  4816                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  4817                           ;stkvar	sprintf@fval @ sp[(-23)+0]
  4818  0013D0  0EE9               	movlw	-23
  4819  0013D2  CFE3 FFE6          	movff	plusw1,postinc1
  4820  0013D6  CFE3 FFE6          	movff	plusw1,postinc1
  4821  0013DA  CFE3 FFE6          	movff	plusw1,postinc1
  4822  0013DE  CFE3 FFE6          	movff	plusw1,postinc1
  4823                           
  4824                           ;stkvar	sprintf@c @ sp[(-27)+22]
  4825  0013E2  0EFB               	movlw	-5
  4826  0013E4  50E3               	movf	plusw1,w,c
  4827  0013E6  6EE6               	movwf	postinc1,c
  4828  0013E8  EC0C  F01B         	call	_scale	;wreg free
  4829  0013EC  C062  FFE6         	movff	btemp,postinc1
  4830  0013F0  C063  FFE6         	movff	btemp+1,postinc1
  4831  0013F4  C064  FFE6         	movff	btemp+2,postinc1
  4832  0013F8  C065  FFE6         	movff	btemp+3,postinc1
  4833  0013FC  EC32  F011         	call	___flmul	;wreg free
  4834  001400  C062  FFE6         	movff	btemp,postinc1
  4835  001404  C063  FFE6         	movff	btemp+1,postinc1
  4836  001408  C064  FFE6         	movff	btemp+2,postinc1
  4837  00140C  C065  FFE6         	movff	btemp+3,postinc1
  4838  001410  EC28  F025         	call	___fltol	;wreg free
  4839                           
  4840                           ;stkvar	sprintf@val @ sp[(-23)+8]
  4841  001414  0EF1               	movlw	-15
  4842  001416  C062  FFE3         	movff	btemp,plusw1
  4843  00141A  0EF2               	movlw	-14
  4844  00141C  C063  FFE3         	movff	btemp+1,plusw1
  4845  001420  0EF3               	movlw	-13
  4846  001422  C064  FFE3         	movff	btemp+2,plusw1
  4847  001426  0EF4               	movlw	-12
  4848  001428  C065  FFE3         	movff	btemp+3,plusw1
  4849                           
  4850                           ;doprnt.c: 1254: while(c--) {
  4851  00142C  EFA8  F00A         	goto	l2878
  4852  001430                     l2868:
  4853                           
  4854                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  4855                           ;stkvar	sprintf@c @ sp[(-23)+22]
  4856  001430  0EFF               	movlw	-1
  4857  001432  50E3               	movf	plusw1,w,c
  4858  001434  0D04               	mullw	4
  4859  001436  0E69               	movlw	low _dpowers
  4860  001438  24F3               	addwf	243,w,c
  4861  00143A  6EF6               	movwf	tblptrl,c
  4862  00143C  0E06               	movlw	high _dpowers
  4863  00143E  20F4               	addwfc	244,w,c
  4864  001440  6EF7               	movwf	tblptrh,c
  4865  001442                     	if	0	;There are less than 3 active tblptr bytes
  4866  001442                     	endif
  4867  001442  0009               	tblrd		*+
  4868  001444  CFF5 FFE6          	movff	tablat,postinc1
  4869  001448  0009               	tblrd		*+
  4870  00144A  CFF5 FFE6          	movff	tablat,postinc1
  4871  00144E  0009               	tblrd		*+
  4872  001450  CFF5 FFE6          	movff	tablat,postinc1
  4873  001454  0009               	tblrd		*+
  4874  001456  CFF5 FFE6          	movff	tablat,postinc1
  4875                           
  4876                           ;stkvar	sprintf@val @ sp[(-27)+8]
  4877  00145A  0EED               	movlw	-19
  4878  00145C  CFE3 FFE6          	movff	plusw1,postinc1
  4879  001460  CFE3 FFE6          	movff	plusw1,postinc1
  4880  001464  CFE3 FFE6          	movff	plusw1,postinc1
  4881  001468  CFE3 FFE6          	movff	plusw1,postinc1
  4882  00146C  EC87  F029         	call	___lldiv	;wreg free
  4883                           
  4884                           ;stkvar	sprintf@tmpval @ sp[(-23)+4]
  4885  001470  0EED               	movlw	-19
  4886  001472  C062  FFE3         	movff	btemp,plusw1
  4887  001476  0EEE               	movlw	-18
  4888  001478  C063  FFE3         	movff	btemp+1,plusw1
  4889  00147C  0EEF               	movlw	-17
  4890  00147E  C064  FFE3         	movff	btemp+2,plusw1
  4891  001482  0EF0               	movlw	-16
  4892  001484  C065  FFE3         	movff	btemp+3,plusw1
  4893  001488                     
  4894                           ;doprnt.c: 1256: tmpval.vd %= 10;
  4895  001488  0E0A               	movlw	10
  4896  00148A  6EE6               	movwf	postinc1,c
  4897  00148C  0E00               	movlw	0
  4898  00148E  6EE6               	movwf	postinc1,c
  4899  001490  0E00               	movlw	0
  4900  001492  6EE6               	movwf	postinc1,c
  4901  001494  0E00               	movlw	0
  4902  001496  6EE6               	movwf	postinc1,c
  4903                           
  4904                           ;stkvar	sprintf@tmpval @ sp[(-27)+4]
  4905  001498  0EE9               	movlw	-23
  4906  00149A  CFE3 FFE6          	movff	plusw1,postinc1
  4907  00149E  CFE3 FFE6          	movff	plusw1,postinc1
  4908  0014A2  CFE3 FFE6          	movff	plusw1,postinc1
  4909  0014A6  CFE3 FFE6          	movff	plusw1,postinc1
  4910  0014AA  ECB1  F02A         	call	___llmod	;wreg free
  4911                           
  4912                           ;stkvar	sprintf@tmpval @ sp[(-23)+4]
  4913  0014AE  0EED               	movlw	-19
  4914  0014B0  C062  FFE3         	movff	btemp,plusw1
  4915  0014B4  0EEE               	movlw	-18
  4916  0014B6  C063  FFE3         	movff	btemp+1,plusw1
  4917  0014BA  0EEF               	movlw	-17
  4918  0014BC  C064  FFE3         	movff	btemp+2,plusw1
  4919  0014C0  0EF0               	movlw	-16
  4920  0014C2  C065  FFE3         	movff	btemp+3,plusw1
  4921  0014C6                     
  4922                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  4923                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  4924  0014C6  0EE6               	movlw	-26
  4925  0014C8  CFE3 FFD9          	movff	plusw1,fsr2l
  4926  0014CC  0EE7               	movlw	-25
  4927  0014CE  CFE3 FFDA          	movff	plusw1,fsr2h
  4928                           
  4929                           ;stkvar	sprintf@tmpval @ sp[(-23)+4]
  4930  0014D2  0EED               	movlw	-19
  4931  0014D4  50E3               	movf	plusw1,w,c
  4932  0014D6  0F30               	addlw	48
  4933  0014D8  6EDF               	movwf	indf2,c
  4934  0014DA                     
  4935                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  4936  0014DA  0EE6               	movlw	-26
  4937  0014DC  50E3               	movf	plusw1,w,c
  4938  0014DE  0F01               	addlw	1
  4939  0014E0  6E62               	movwf	btemp^0,c
  4940  0014E2  0EE6               	movlw	-26
  4941  0014E4  C062  FFE3         	movff	btemp,plusw1
  4942  0014E8  6A62               	clrf	btemp^0,c
  4943  0014EA  0EE7               	movlw	-25
  4944  0014EC  50E3               	movf	plusw1,w,c
  4945  0014EE  2062               	addwfc	btemp^0,w,c
  4946  0014F0  6E62               	movwf	btemp^0,c
  4947  0014F2  0EE7               	movlw	-25
  4948  0014F4  C062  FFE3         	movff	btemp,plusw1
  4949  0014F8                     
  4950                           ;doprnt.c: 1258: val %= dpowers[c];
  4951                           ;stkvar	sprintf@c @ sp[(-23)+22]
  4952  0014F8  0EFF               	movlw	-1
  4953  0014FA  50E3               	movf	plusw1,w,c
  4954  0014FC  0D04               	mullw	4
  4955  0014FE  0E69               	movlw	low _dpowers
  4956  001500  24F3               	addwf	243,w,c
  4957  001502  6EF6               	movwf	tblptrl,c
  4958  001504  0E06               	movlw	high _dpowers
  4959  001506  20F4               	addwfc	244,w,c
  4960  001508  6EF7               	movwf	tblptrh,c
  4961  00150A                     	if	0	;There are less than 3 active tblptr bytes
  4962  00150A                     	endif
  4963  00150A  0009               	tblrd		*+
  4964  00150C  CFF5 FFE6          	movff	tablat,postinc1
  4965  001510  0009               	tblrd		*+
  4966  001512  CFF5 FFE6          	movff	tablat,postinc1
  4967  001516  0009               	tblrd		*+
  4968  001518  CFF5 FFE6          	movff	tablat,postinc1
  4969  00151C  0009               	tblrd		*+
  4970  00151E  CFF5 FFE6          	movff	tablat,postinc1
  4971                           
  4972                           ;stkvar	sprintf@val @ sp[(-27)+8]
  4973  001522  0EED               	movlw	-19
  4974  001524  CFE3 FFE6          	movff	plusw1,postinc1
  4975  001528  CFE3 FFE6          	movff	plusw1,postinc1
  4976  00152C  CFE3 FFE6          	movff	plusw1,postinc1
  4977  001530  CFE3 FFE6          	movff	plusw1,postinc1
  4978  001534  ECB1  F02A         	call	___llmod	;wreg free
  4979                           
  4980                           ;stkvar	sprintf@val @ sp[(-23)+8]
  4981  001538  0EF1               	movlw	-15
  4982  00153A  C062  FFE3         	movff	btemp,plusw1
  4983  00153E  0EF2               	movlw	-14
  4984  001540  C063  FFE3         	movff	btemp+1,plusw1
  4985  001544  0EF3               	movlw	-13
  4986  001546  C064  FFE3         	movff	btemp+2,plusw1
  4987  00154A  0EF4               	movlw	-12
  4988  00154C  C065  FFE3         	movff	btemp+3,plusw1
  4989  001550                     l2878:
  4990                           
  4991                           ;stkvar	sprintf@c @ sp[(-23)+22]
  4992  001550  0EFF               	movlw	-1
  4993  001552  06E3               	decf	plusw1,f,c
  4994  001554  0EFF               	movlw	-1
  4995  001556  28E3               	incf	plusw1,w,c
  4996  001558  A4D8               	btfss	status,2,c
  4997  00155A  EFB1  F00A         	goto	u217_21
  4998  00155E  EFB3  F00A         	goto	u217_20
  4999  001562                     u217_21:
  5000  001562  EF18  F00A         	goto	l2868
  5001  001566                     u217_20:
  5002  001566  EFD6  F00A         	goto	l2886
  5003  00156A                     l2880:
  5004                           
  5005                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  5006                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  5007  00156A  0EE6               	movlw	-26
  5008  00156C  CFE3 FFD9          	movff	plusw1,fsr2l
  5009  001570  0EE7               	movlw	-25
  5010  001572  CFE3 FFDA          	movff	plusw1,fsr2h
  5011  001576  0E30               	movlw	48
  5012  001578  6EDF               	movwf	indf2,c
  5013  00157A                     
  5014                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  5015  00157A  0EE6               	movlw	-26
  5016  00157C  50E3               	movf	plusw1,w,c
  5017  00157E  0F01               	addlw	1
  5018  001580  6E62               	movwf	btemp^0,c
  5019  001582  0EE6               	movlw	-26
  5020  001584  C062  FFE3         	movff	btemp,plusw1
  5021  001588  6A62               	clrf	btemp^0,c
  5022  00158A  0EE7               	movlw	-25
  5023  00158C  50E3               	movf	plusw1,w,c
  5024  00158E  2062               	addwfc	btemp^0,w,c
  5025  001590  6E62               	movwf	btemp^0,c
  5026  001592  0EE7               	movlw	-25
  5027  001594  C062  FFE3         	movff	btemp,plusw1
  5028  001598                     
  5029                           ;doprnt.c: 1263: prec--;
  5030                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  5031  001598  50E1               	movf	fsr1l,w,c
  5032  00159A  0FF5               	addlw	-11
  5033  00159C  6ED9               	movwf	fsr2l,c
  5034  00159E  50E2               	movf	fsr1h,w,c
  5035  0015A0  6EDA               	movwf	fsr2h,c
  5036  0015A2  0EFF               	movlw	255
  5037  0015A4  22DA               	addwfc	fsr2h,f,c
  5038  0015A6  06DE               	decf	postinc2,f,c
  5039  0015A8  0E00               	movlw	0
  5040  0015AA  5ADD               	subwfb	postdec2,f,c
  5041  0015AC                     l2886:
  5042                           
  5043                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  5044  0015AC  0EF5               	movlw	-11
  5045  0015AE  CFE3 F062          	movff	plusw1,btemp
  5046  0015B2  0EF6               	movlw	-10
  5047  0015B4  50E3               	movf	plusw1,w,c
  5048  0015B6  1062               	iorwf	btemp^0,w,c
  5049  0015B8  A4D8               	btfss	status,2,c
  5050  0015BA  EFE1  F00A         	goto	u218_21
  5051  0015BE  EFE3  F00A         	goto	u218_20
  5052  0015C2                     u218_21:
  5053  0015C2  EFB5  F00A         	goto	l2880
  5054  0015C6                     u218_20:
  5055  0015C6  EF8C  F00C         	goto	l2950
  5056  0015CA                     l2888:
  5057                           
  5058                           ;doprnt.c: 1272: };doprnt.c: 1316: if(prec == 0 && val == 0)
  5059                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  5060  0015CA  0EF5               	movlw	-11
  5061  0015CC  CFE3 F062          	movff	plusw1,btemp
  5062  0015D0  0EF6               	movlw	-10
  5063  0015D2  50E3               	movf	plusw1,w,c
  5064  0015D4  1062               	iorwf	btemp^0,w,c
  5065  0015D6  A4D8               	btfss	status,2,c
  5066  0015D8  EFF0  F00A         	goto	u219_21
  5067  0015DC  EFF2  F00A         	goto	u219_20
  5068  0015E0                     u219_21:
  5069  0015E0  EF13  F00B         	goto	l2894
  5070  0015E4                     u219_20:
  5071  0015E4                     
  5072                           ;stkvar	sprintf@val @ sp[(-23)+8]
  5073  0015E4  0EF1               	movlw	-15
  5074  0015E6  50E3               	movf	plusw1,w,c
  5075  0015E8  E10D               	bnz	u220_21
  5076  0015EA  0EF2               	movlw	-14
  5077  0015EC  50E3               	movf	plusw1,w,c
  5078  0015EE  E10A               	bnz	u220_21
  5079  0015F0  0EF3               	movlw	-13
  5080  0015F2  50E3               	movf	plusw1,w,c
  5081  0015F4  E107               	bnz	u220_21
  5082  0015F6  0EF4               	movlw	-12
  5083  0015F8  50E3               	movf	plusw1,w,c
  5084  0015FA  A4D8               	btfss	status,2,c
  5085  0015FC  EF02  F00B         	goto	u220_21
  5086  001600  EF04  F00B         	goto	u220_20
  5087  001604                     u220_21:
  5088  001604  EF13  F00B         	goto	l2894
  5089  001608                     u220_20:
  5090  001608                     
  5091                           ;doprnt.c: 1317: prec++;
  5092                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  5093  001608  0EF5               	movlw	-11
  5094  00160A  50E3               	movf	plusw1,w,c
  5095  00160C  0F01               	addlw	1
  5096  00160E  6E62               	movwf	btemp^0,c
  5097  001610  0EF5               	movlw	-11
  5098  001612  C062  FFE3         	movff	btemp,plusw1
  5099  001616  6A62               	clrf	btemp^0,c
  5100  001618  0EF6               	movlw	-10
  5101  00161A  50E3               	movf	plusw1,w,c
  5102  00161C  2062               	addwfc	btemp^0,w,c
  5103  00161E  6E62               	movwf	btemp^0,c
  5104  001620  0EF6               	movlw	-10
  5105  001622  C062  FFE3         	movff	btemp,plusw1
  5106  001626                     l2894:
  5107                           
  5108                           ;doprnt.c: 1365: if(c < prec)
  5109                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  5110                           ;stkvar	sprintf@c @ sp[(-23)+22]
  5111  001626  0EFF               	movlw	-1
  5112  001628  50E3               	movf	plusw1,w,c
  5113  00162A  6E6C               	movwf	(btemp+10)^0,c
  5114  00162C  6A6D               	clrf	(btemp+11)^0,c
  5115  00162E  0EF5               	movlw	-11
  5116  001630  50E3               	movf	plusw1,w,c
  5117  001632  5C6C               	subwf	(btemp+10)^0,w,c
  5118  001634  506D               	movf	(btemp+11)^0,w,c
  5119  001636  0A80               	xorlw	128
  5120  001638  6E62               	movwf	btemp^0,c
  5121  00163A  0EF6               	movlw	-10
  5122  00163C  50E3               	movf	plusw1,w,c
  5123  00163E  0A80               	xorlw	128
  5124  001640  5862               	subwfb	btemp^0,w,c
  5125  001642  B0D8               	btfsc	status,0,c
  5126  001644  EF26  F00B         	goto	u221_21
  5127  001648  EF28  F00B         	goto	u221_20
  5128  00164C                     u221_21:
  5129  00164C  EF30  F00B         	goto	l2898
  5130  001650                     u221_20:
  5131  001650                     
  5132                           ;doprnt.c: 1366: c = (char)prec;
  5133                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  5134                           ;stkvar	sprintf@c @ sp[(-23)+22]
  5135  001650  0EF5               	movlw	-11
  5136  001652  CFE3 F062          	movff	plusw1,btemp
  5137  001656  0EFF               	movlw	-1
  5138  001658  C062  FFE3         	movff	btemp,plusw1
  5139  00165C  EF51  F00B         	goto	l2902
  5140  001660                     l2898:
  5141                           
  5142                           ;doprnt.c: 1367: else if(prec < c)
  5143                           ;stkvar	sprintf@c @ sp[(-23)+22]
  5144  001660  0EFF               	movlw	-1
  5145  001662  50E3               	movf	plusw1,w,c
  5146  001664  6E6C               	movwf	(btemp+10)^0,c
  5147  001666  6A6D               	clrf	(btemp+11)^0,c
  5148                           
  5149                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  5150  001668  0EF5               	movlw	-11
  5151  00166A  CFE3 F062          	movff	plusw1,btemp
  5152  00166E  506C               	movf	(btemp+10)^0,w,c
  5153  001670  5C62               	subwf	btemp^0,w,c
  5154  001672  0EF6               	movlw	-10
  5155  001674  50E3               	movf	plusw1,w,c
  5156  001676  0A80               	xorlw	128
  5157  001678  6E62               	movwf	btemp^0,c
  5158  00167A  506D               	movf	(btemp+11)^0,w,c
  5159  00167C  0A80               	xorlw	128
  5160  00167E  5862               	subwfb	btemp^0,w,c
  5161  001680  B0D8               	btfsc	status,0,c
  5162  001682  EF45  F00B         	goto	u222_21
  5163  001686  EF47  F00B         	goto	u222_20
  5164  00168A                     u222_21:
  5165  00168A  EF51  F00B         	goto	l2902
  5166  00168E                     u222_20:
  5167  00168E                     
  5168                           ;doprnt.c: 1368: prec = c;
  5169                           ;stkvar	sprintf@c @ sp[(-23)+22]
  5170  00168E  0EFF               	movlw	-1
  5171  001690  50E3               	movf	plusw1,w,c
  5172  001692  6E6C               	movwf	(btemp+10)^0,c
  5173  001694  6A6D               	clrf	(btemp+11)^0,c
  5174                           
  5175                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  5176  001696  0EF5               	movlw	-11
  5177  001698  C06C  FFE3         	movff	btemp+10,plusw1
  5178  00169C  0EF6               	movlw	-10
  5179  00169E  C06D  FFE3         	movff	btemp+11,plusw1
  5180  0016A2                     l2902:
  5181                           
  5182                           ;doprnt.c: 1371: if(width && flag & 0x03)
  5183                           ;stkvar	sprintf@width @ sp[(-23)+14]
  5184  0016A2  0EF7               	movlw	-9
  5185  0016A4  CFE3 F062          	movff	plusw1,btemp
  5186  0016A8  0EF8               	movlw	-8
  5187  0016AA  50E3               	movf	plusw1,w,c
  5188  0016AC  1062               	iorwf	btemp^0,w,c
  5189  0016AE  B4D8               	btfsc	status,2,c
  5190  0016B0  EF5C  F00B         	goto	u223_21
  5191  0016B4  EF5E  F00B         	goto	u223_20
  5192  0016B8                     u223_21:
  5193  0016B8  EF74  F00B         	goto	l2908
  5194  0016BC                     u223_20:
  5195  0016BC                     
  5196                           ;stkvar	sprintf@flag @ sp[(-23)+16]
  5197  0016BC  0EF9               	movlw	-7
  5198  0016BE  CFE3 F06D          	movff	plusw1,btemp+11
  5199  0016C2  0E03               	movlw	3
  5200  0016C4  166D               	andwf	(btemp+11)^0,f,c
  5201  0016C6  B4D8               	btfsc	status,2,c
  5202  0016C8  EF68  F00B         	goto	u224_21
  5203  0016CC  EF6A  F00B         	goto	u224_20
  5204  0016D0                     u224_21:
  5205  0016D0  EF74  F00B         	goto	l2908
  5206  0016D4                     u224_20:
  5207  0016D4                     
  5208                           ;doprnt.c: 1372: width--;
  5209                           ;stkvar	sprintf@width @ sp[(-23)+14]
  5210  0016D4  50E1               	movf	fsr1l,w,c
  5211  0016D6  0FF7               	addlw	-9
  5212  0016D8  6ED9               	movwf	fsr2l,c
  5213  0016DA  50E2               	movf	fsr1h,w,c
  5214  0016DC  6EDA               	movwf	fsr2h,c
  5215  0016DE  0EFF               	movlw	255
  5216  0016E0  22DA               	addwfc	fsr2h,f,c
  5217  0016E2  06DE               	decf	postinc2,f,c
  5218  0016E4  0E00               	movlw	0
  5219  0016E6  5ADD               	subwfb	postdec2,f,c
  5220  0016E8                     l2908:
  5221                           
  5222                           ;doprnt.c: 1374: if(flag & 0x4000) {
  5223                           ;stkvar	sprintf@flag @ sp[(-23)+16]
  5224  0016E8  0EFA               	movlw	-6
  5225  0016EA  ACE3               	btfss	plusw1,6,c
  5226  0016EC  EF7A  F00B         	goto	u225_21
  5227  0016F0  EF7C  F00B         	goto	u225_20
  5228  0016F4                     u225_21:
  5229  0016F4  EFAC  F00B         	goto	l2916
  5230  0016F8                     u225_20:
  5231  0016F8                     
  5232                           ;doprnt.c: 1375: if(width > prec)
  5233                           ;stkvar	sprintf@width @ sp[(-23)+14]
  5234                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  5235  0016F8  50E1               	movf	fsr1l,w,c
  5236  0016FA  0FF5               	addlw	-11
  5237  0016FC  6ED9               	movwf	fsr2l,c
  5238  0016FE  50E2               	movf	fsr1h,w,c
  5239  001700  6EDA               	movwf	fsr2h,c
  5240  001702  0EFF               	movlw	255
  5241  001704  22DA               	addwfc	fsr2h,f,c
  5242  001706  0EF7               	movlw	-9
  5243  001708  50E3               	movf	plusw1,w,c
  5244  00170A  5CDE               	subwf	postinc2,w,c
  5245  00170C  50DE               	movf	postinc2,w,c
  5246  00170E  0A80               	xorlw	128
  5247  001710  6E62               	movwf	btemp^0,c
  5248  001712  0EF8               	movlw	-8
  5249  001714  50E3               	movf	plusw1,w,c
  5250  001716  0A80               	xorlw	128
  5251  001718  5862               	subwfb	btemp^0,w,c
  5252  00171A  B0D8               	btfsc	status,0,c
  5253  00171C  EF92  F00B         	goto	u226_21
  5254  001720  EF94  F00B         	goto	u226_20
  5255  001724                     u226_21:
  5256  001724  EFA8  F00B         	goto	l2914
  5257  001728                     u226_20:
  5258  001728                     
  5259                           ;doprnt.c: 1376: width -= prec;
  5260                           ;stkvar	sprintf@prec @ sp[(-23)+12]
  5261                           ;stkvar	sprintf@width @ sp[(-23)+14]
  5262  001728  0EF7               	movlw	-9
  5263  00172A  50E3               	movf	plusw1,w,c
  5264  00172C  6E62               	movwf	btemp^0,c
  5265  00172E  0EF5               	movlw	-11
  5266  001730  50E3               	movf	plusw1,w,c
  5267  001732  5E62               	subwf	btemp^0,f,c
  5268  001734  0EF7               	movlw	-9
  5269  001736  C062  FFE3         	movff	btemp,plusw1
  5270  00173A  0EF8               	movlw	-8
  5271  00173C  50E3               	movf	plusw1,w,c
  5272  00173E  6E62               	movwf	btemp^0,c
  5273  001740  0EF6               	movlw	-10
  5274  001742  50E3               	movf	plusw1,w,c
  5275  001744  5A62               	subwfb	btemp^0,f,c
  5276  001746  0EF8               	movlw	-8
  5277  001748  C062  FFE3         	movff	btemp,plusw1
  5278  00174C  EFAC  F00B         	goto	l2916
  5279  001750                     l2914:
  5280                           
  5281                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  5282                           ;stkvar	sprintf@width @ sp[(-23)+14]
  5283  001750  0EF7               	movlw	-9
  5284  001752  6AE3               	clrf	plusw1,c
  5285  001754  0EF8               	movlw	-8
  5286  001756  6AE3               	clrf	plusw1,c
  5287  001758                     l2916:
  5288                           
  5289                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  5290                           ;stkvar	sprintf@width @ sp[(-23)+14]
  5291                           ;stkvar	sprintf@c @ sp[(-23)+22]
  5292  001758  0EFF               	movlw	-1
  5293  00175A  50E3               	movf	plusw1,w,c
  5294  00175C  6E6C               	movwf	(btemp+10)^0,c
  5295  00175E  6A6D               	clrf	(btemp+11)^0,c
  5296  001760  0EF7               	movlw	-9
  5297  001762  50E3               	movf	plusw1,w,c
  5298  001764  5C6C               	subwf	(btemp+10)^0,w,c
  5299  001766  506D               	movf	(btemp+11)^0,w,c
  5300  001768  0A80               	xorlw	128
  5301  00176A  6E62               	movwf	btemp^0,c
  5302  00176C  0EF8               	movlw	-8
  5303  00176E  50E3               	movf	plusw1,w,c
  5304  001770  0A80               	xorlw	128
  5305  001772  5862               	subwfb	btemp^0,w,c
  5306  001774  B0D8               	btfsc	status,0,c
  5307  001776  EFBF  F00B         	goto	u227_21
  5308  00177A  EFC1  F00B         	goto	u227_20
  5309  00177E                     u227_21:
  5310  00177E  EFD7  F00B         	goto	l2920
  5311  001782                     u227_20:
  5312  001782                     
  5313                           ;doprnt.c: 1408: width -= c;
  5314                           ;stkvar	sprintf@c @ sp[(-23)+22]
  5315  001782  0EFF               	movlw	-1
  5316  001784  50E3               	movf	plusw1,w,c
  5317  001786  6E6C               	movwf	(btemp+10)^0,c
  5318  001788  6A6D               	clrf	(btemp+11)^0,c
  5319                           
  5320                           ;stkvar	sprintf@width @ sp[(-23)+14]
  5321  00178A  0EF7               	movlw	-9
  5322  00178C  CFE3 F062          	movff	plusw1,btemp
  5323  001790  506C               	movf	(btemp+10)^0,w,c
  5324  001792  5E62               	subwf	btemp^0,f,c
  5325  001794  0EF7               	movlw	-9
  5326  001796  C062  FFE3         	movff	btemp,plusw1
  5327  00179A  0EF8               	movlw	-8
  5328  00179C  CFE3 F062          	movff	plusw1,btemp
  5329  0017A0  506D               	movf	(btemp+11)^0,w,c
  5330  0017A2  5A62               	subwfb	btemp^0,f,c
  5331  0017A4  0EF8               	movlw	-8
  5332  0017A6  C062  FFE3         	movff	btemp,plusw1
  5333  0017AA  EFDB  F00B         	goto	l541
  5334  0017AE                     l2920:
  5335                           
  5336                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  5337                           ;stkvar	sprintf@width @ sp[(-23)+14]
  5338  0017AE  0EF7               	movlw	-9
  5339  0017B0  6AE3               	clrf	plusw1,c
  5340  0017B2  0EF8               	movlw	-8
  5341  0017B4  6AE3               	clrf	plusw1,c
  5342  0017B6                     l541:
  5343                           
  5344                           ;doprnt.c: 1413: if(flag & 0x04) {
  5345                           ;stkvar	sprintf@flag @ sp[(-23)+16]
  5346  0017B6  0EF9               	movlw	-7
  5347  0017B8  A4E3               	btfss	plusw1,2,c
  5348  0017BA  EFE1  F00B         	goto	u228_21
  5349  0017BE  EFE3  F00B         	goto	u228_20
  5350  0017C2                     u228_21:
  5351  0017C2  EF3F  F00C         	goto	l2936
  5352  0017C6                     u228_20:
  5353  0017C6                     
  5354                           ;doprnt.c: 1418: if(flag & 0x03)
  5355                           ;stkvar	sprintf@flag @ sp[(-23)+16]
  5356  0017C6  0EF9               	movlw	-7
  5357  0017C8  CFE3 F06D          	movff	plusw1,btemp+11
  5358  0017CC  0E03               	movlw	3
  5359  0017CE  166D               	andwf	(btemp+11)^0,f,c
  5360  0017D0  B4D8               	btfsc	status,2,c
  5361  0017D2  EFED  F00B         	goto	u229_21
  5362  0017D6  EFEF  F00B         	goto	u229_20
  5363  0017DA                     u229_21:
  5364  0017DA  EF06  F00C         	goto	l2928
  5365  0017DE                     u229_20:
  5366  0017DE                     
  5367                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  5368                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  5369  0017DE  0EE6               	movlw	-26
  5370  0017E0  CFE3 FFD9          	movff	plusw1,fsr2l
  5371  0017E4  0EE7               	movlw	-25
  5372  0017E6  CFE3 FFDA          	movff	plusw1,fsr2h
  5373  0017EA  0E2D               	movlw	45
  5374  0017EC  6EDF               	movwf	indf2,c
  5375  0017EE                     
  5376                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  5377  0017EE  0EE6               	movlw	-26
  5378  0017F0  50E3               	movf	plusw1,w,c
  5379  0017F2  0F01               	addlw	1
  5380  0017F4  6E62               	movwf	btemp^0,c
  5381  0017F6  0EE6               	movlw	-26
  5382  0017F8  C062  FFE3         	movff	btemp,plusw1
  5383  0017FC  6A62               	clrf	btemp^0,c
  5384  0017FE  0EE7               	movlw	-25
  5385  001800  50E3               	movf	plusw1,w,c
  5386  001802  2062               	addwfc	btemp^0,w,c
  5387  001804  6E62               	movwf	btemp^0,c
  5388  001806  0EE7               	movlw	-25
  5389  001808  C062  FFE3         	movff	btemp,plusw1
  5390  00180C                     l2928:
  5391                           
  5392                           ;doprnt.c: 1441: if(width)
  5393                           ;stkvar	sprintf@width @ sp[(-23)+14]
  5394  00180C  0EF7               	movlw	-9
  5395  00180E  CFE3 F062          	movff	plusw1,btemp
  5396  001812  0EF8               	movlw	-8
  5397  001814  50E3               	movf	plusw1,w,c
  5398  001816  1062               	iorwf	btemp^0,w,c
  5399  001818  B4D8               	btfsc	status,2,c
  5400  00181A  EF11  F00C         	goto	u230_21
  5401  00181E  EF13  F00C         	goto	u230_20
  5402  001822                     u230_21:
  5403  001822  EF8C  F00C         	goto	l2950
  5404  001826                     u230_20:
  5405  001826                     l2930:
  5406                           
  5407                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  5408                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  5409  001826  0EE6               	movlw	-26
  5410  001828  CFE3 FFD9          	movff	plusw1,fsr2l
  5411  00182C  0EE7               	movlw	-25
  5412  00182E  CFE3 FFDA          	movff	plusw1,fsr2h
  5413  001832  0E30               	movlw	48
  5414  001834  6EDF               	movwf	indf2,c
  5415  001836                     
  5416                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  5417  001836  0EE6               	movlw	-26
  5418  001838  50E3               	movf	plusw1,w,c
  5419  00183A  0F01               	addlw	1
  5420  00183C  6E62               	movwf	btemp^0,c
  5421  00183E  0EE6               	movlw	-26
  5422  001840  C062  FFE3         	movff	btemp,plusw1
  5423  001844  6A62               	clrf	btemp^0,c
  5424  001846  0EE7               	movlw	-25
  5425  001848  50E3               	movf	plusw1,w,c
  5426  00184A  2062               	addwfc	btemp^0,w,c
  5427  00184C  6E62               	movwf	btemp^0,c
  5428  00184E  0EE7               	movlw	-25
  5429  001850  C062  FFE3         	movff	btemp,plusw1
  5430  001854                     
  5431                           ;doprnt.c: 1444: while(--width);
  5432                           ;stkvar	sprintf@width @ sp[(-23)+14]
  5433  001854  50E1               	movf	fsr1l,w,c
  5434  001856  0FF7               	addlw	-9
  5435  001858  6ED9               	movwf	fsr2l,c
  5436  00185A  50E2               	movf	fsr1h,w,c
  5437  00185C  6EDA               	movwf	fsr2h,c
  5438  00185E  0EFF               	movlw	255
  5439  001860  22DA               	addwfc	fsr2h,f,c
  5440  001862  06DE               	decf	postinc2,f,c
  5441  001864  0E00               	movlw	0
  5442  001866  5ADD               	subwfb	postdec2,f,c
  5443  001868  50DE               	movf	postinc2,w,c
  5444  00186A  10DE               	iorwf	postinc2,w,c
  5445  00186C  A4D8               	btfss	status,2,c
  5446  00186E  EF3B  F00C         	goto	u231_21
  5447  001872  EF3D  F00C         	goto	u231_20
  5448  001876                     u231_21:
  5449  001876  EF13  F00C         	goto	l2930
  5450  00187A                     u231_20:
  5451  00187A  EF8C  F00C         	goto	l2950
  5452  00187E                     l2936:
  5453                           
  5454                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  5455                           ;stkvar	sprintf@width @ sp[(-23)+14]
  5456  00187E  0EF7               	movlw	-9
  5457  001880  CFE3 F062          	movff	plusw1,btemp
  5458  001884  0EF8               	movlw	-8
  5459  001886  50E3               	movf	plusw1,w,c
  5460  001888  1062               	iorwf	btemp^0,w,c
  5461  00188A  B4D8               	btfsc	status,2,c
  5462  00188C  EF4A  F00C         	goto	u232_21
  5463  001890  EF4C  F00C         	goto	u232_20
  5464  001894                     u232_21:
  5465  001894  EF76  F00C         	goto	l2944
  5466  001898                     u232_20:
  5467  001898                     l2938:
  5468                           
  5469                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  5470                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  5471  001898  0EE6               	movlw	-26
  5472  00189A  CFE3 FFD9          	movff	plusw1,fsr2l
  5473  00189E  0EE7               	movlw	-25
  5474  0018A0  CFE3 FFDA          	movff	plusw1,fsr2h
  5475  0018A4  0E20               	movlw	32
  5476  0018A6  6EDF               	movwf	indf2,c
  5477  0018A8                     
  5478                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  5479  0018A8  0EE6               	movlw	-26
  5480  0018AA  50E3               	movf	plusw1,w,c
  5481  0018AC  0F01               	addlw	1
  5482  0018AE  6E62               	movwf	btemp^0,c
  5483  0018B0  0EE6               	movlw	-26
  5484  0018B2  C062  FFE3         	movff	btemp,plusw1
  5485  0018B6  6A62               	clrf	btemp^0,c
  5486  0018B8  0EE7               	movlw	-25
  5487  0018BA  50E3               	movf	plusw1,w,c
  5488  0018BC  2062               	addwfc	btemp^0,w,c
  5489  0018BE  6E62               	movwf	btemp^0,c
  5490  0018C0  0EE7               	movlw	-25
  5491  0018C2  C062  FFE3         	movff	btemp,plusw1
  5492  0018C6                     
  5493                           ;doprnt.c: 1457: while(--width);
  5494                           ;stkvar	sprintf@width @ sp[(-23)+14]
  5495  0018C6  50E1               	movf	fsr1l,w,c
  5496  0018C8  0FF7               	addlw	-9
  5497  0018CA  6ED9               	movwf	fsr2l,c
  5498  0018CC  50E2               	movf	fsr1h,w,c
  5499  0018CE  6EDA               	movwf	fsr2h,c
  5500  0018D0  0EFF               	movlw	255
  5501  0018D2  22DA               	addwfc	fsr2h,f,c
  5502  0018D4  06DE               	decf	postinc2,f,c
  5503  0018D6  0E00               	movlw	0
  5504  0018D8  5ADD               	subwfb	postdec2,f,c
  5505  0018DA  50DE               	movf	postinc2,w,c
  5506  0018DC  10DE               	iorwf	postinc2,w,c
  5507  0018DE  A4D8               	btfss	status,2,c
  5508  0018E0  EF74  F00C         	goto	u233_21
  5509  0018E4  EF76  F00C         	goto	u233_20
  5510  0018E8                     u233_21:
  5511  0018E8  EF4C  F00C         	goto	l2938
  5512  0018EC                     u233_20:
  5513  0018EC                     l2944:
  5514                           
  5515                           ;doprnt.c: 1464: if(flag & 0x03)
  5516                           ;stkvar	sprintf@flag @ sp[(-23)+16]
  5517  0018EC  0EF9               	movlw	-7
  5518  0018EE  CFE3 F06D          	movff	plusw1,btemp+11
  5519  0018F2  0E03               	movlw	3
  5520  0018F4  166D               	andwf	(btemp+11)^0,f,c
  5521  0018F6  B4D8               	btfsc	status,2,c
  5522  0018F8  EF80  F00C         	goto	u234_21
  5523  0018FC  EF82  F00C         	goto	u234_20
  5524  001900                     u234_21:
  5525  001900  EF8C  F00C         	goto	l2950
  5526  001904                     u234_20:
  5527  001904                     
  5528                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  5529                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  5530  001904  0EE6               	movlw	-26
  5531  001906  CFE3 FFD9          	movff	plusw1,fsr2l
  5532  00190A  0EE7               	movlw	-25
  5533  00190C  CFE3 FFDA          	movff	plusw1,fsr2h
  5534  001910  0E2D               	movlw	45
  5535  001912  6EDF               	movwf	indf2,c
  5536  001914  EF81  F003         	goto	l2660
  5537  001918                     l2950:
  5538                           
  5539                           ;stkvar	sprintf@f @ sp[(-23)+-5]
  5540  001918  50E1               	movf	fsr1l,w,c
  5541  00191A  0FE4               	addlw	-28
  5542  00191C  6ED9               	movwf	fsr2l,c
  5543  00191E  50E2               	movf	fsr1h,w,c
  5544  001920  6EDA               	movwf	fsr2h,c
  5545  001922  0EFF               	movlw	255
  5546  001924  22DA               	addwfc	fsr2h,f,c
  5547  001926  CFDF F06C          	movff	indf2,btemp+10
  5548  00192A  0E01               	movlw	1
  5549  00192C  26DE               	addwf	postinc2,f,c
  5550  00192E  CFDF F06D          	movff	indf2,btemp+11
  5551  001932  0E00               	movlw	0
  5552  001934  22DD               	addwfc	postdec2,f,c
  5553  001936  C06C  FFF6         	movff	btemp+10,tblptrl
  5554  00193A  C06D  FFF7         	movff	btemp+11,tblptrh
  5555  00193E                     	if	0	;tblptru may be non-zero
  5556  00193E                     	endif
  5557  00193E                     	if	0	;tblptru may be non-zero
  5558  00193E                     	endif
  5559                           
  5560                           ;stkvar	sprintf@c @ sp[(-23)+22]
  5561  00193E  0008               	tblrd		*
  5562  001940  0EFF               	movlw	-1
  5563  001942  CFF5 FFE3          	movff	tablat,plusw1
  5564  001946  0EFF               	movlw	-1
  5565  001948  50E3               	movf	plusw1,w,c
  5566  00194A  A4D8               	btfss	status,2,c
  5567  00194C  EFAA  F00C         	goto	u235_21
  5568  001950  EFAC  F00C         	goto	u235_20
  5569  001954                     u235_21:
  5570  001954  EF6C  F003         	goto	l2656
  5571  001958                     u235_20:
  5572  001958                     l2952:
  5573                           
  5574                           ;doprnt.c: 1564: *sp = 0;
  5575                           ;stkvar	sprintf@sp @ sp[(-23)+-3]
  5576  001958  0EE6               	movlw	-26
  5577  00195A  CFE3 FFD9          	movff	plusw1,fsr2l
  5578  00195E  0EE7               	movlw	-25
  5579  001960  CFE3 FFDA          	movff	plusw1,fsr2h
  5580  001964  0E00               	movlw	0
  5581  001966  6EDF               	movwf	indf2,c
  5582  001968                     
  5583                           ; _sprintf: autosize = 23, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 4, vargsize = 0
  5584  001968  0EE9               	movlw	233
  5585  00196A  26E1               	addwf	fsr1l,f,c
  5586  00196C  0EFF               	movlw	255
  5587  00196E  22E2               	addwfc	fsr1h,f,c
  5588  001970  52E5               	movf	postdec1,f,c
  5589  001972  50E7               	movf	indf1,w,c
  5590  001974  5EE1               	subwf	fsr1l,f,c
  5591  001976  0E00               	movlw	0
  5592  001978  5AE2               	subwfb	fsr1h,f,c
  5593  00197A  0012               	return		;funcret
  5594  00197C                     __end_of_sprintf:
  5595                           	opt callstack 0
  5596                           
  5597 ;; *************** function _scale *****************
  5598 ;; Defined at:
  5599 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;  scl             1  [STACK] char 
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;		None
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  4  [STACK] char 
  5606 ;; Registers used:
  5607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5613 ;;      Params:         0       0       0       0       0       0       0
  5614 ;;      Locals:         0       0       0       0       0       0       0
  5615 ;;      Temps:          0       0       0       0       0       0       0
  5616 ;;      Totals:         0       0       0       0       0       0       0
  5617 ;;Total ram usage:        0 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:    5
  5620 ;; This function calls:
  5621 ;;		___awdiv
  5622 ;;		___awmod
  5623 ;;		___flmul
  5624 ;; This function is called by:
  5625 ;;		_sprintf
  5626 ;; This function uses a reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text18
  5630  003618                     __ptext18:
  5631                           	opt callstack 0
  5632  003618                     _scale:
  5633                           	opt callstack 18
  5634  003618                     
  5635                           ;doprnt.c: 436: if(scl < 0) {
  5636                           ;stkvar	scale@scl @ sp[(0)+-1]
  5637  003618  0EFF               	movlw	-1
  5638  00361A  BEE3               	btfsc	plusw1,7,c
  5639  00361C  EF14  F01B         	goto	u104_20
  5640  003620  EF12  F01B         	goto	u104_21
  5641  003624                     u104_21:
  5642  003624  EF1B  F01C         	goto	l2136
  5643  003628                     u104_20:
  5644  003628                     
  5645                           ;doprnt.c: 437: scl = -scl;
  5646                           ;stkvar	scale@scl @ sp[(0)+-1]
  5647  003628  0EFF               	movlw	-1
  5648  00362A  50E3               	movf	plusw1,w,c
  5649  00362C  0800               	sublw	0
  5650  00362E  6E6D               	movwf	(btemp+11)^0,c
  5651                           
  5652                           ;stkvar	scale@scl @ sp[(0)+-1]
  5653  003630  0EFF               	movlw	-1
  5654  003632  C06D  FFE3         	movff	btemp+11,plusw1
  5655  003636                     
  5656                           ;doprnt.c: 438: if(scl>=110)
  5657                           ;stkvar	scale@scl @ sp[(0)+-1]
  5658  003636  0EFF               	movlw	-1
  5659  003638  50E3               	movf	plusw1,w,c
  5660  00363A  0A80               	xorlw	128
  5661  00363C  0F12               	addlw	-238
  5662  00363E  A0D8               	btfss	status,0,c
  5663  003640  EF24  F01B         	goto	u105_21
  5664  003644  EF26  F01B         	goto	u105_20
  5665  003648                     u105_21:
  5666  003648  EFAC  F01B         	goto	l2126
  5667  00364C                     u105_20:
  5668  00364C                     
  5669                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  5670  00364C  0E0A               	movlw	10
  5671  00364E  6EE6               	movwf	postinc1,c
  5672  003650  0E00               	movlw	0
  5673  003652  6EE6               	movwf	postinc1,c
  5674                           
  5675                           ;stkvar	scale@scl @ sp[(-2)+-1]
  5676  003654  0EFD               	movlw	-3
  5677  003656  50E3               	movf	plusw1,w,c
  5678  003658  6E6C               	movwf	(btemp+10)^0,c
  5679  00365A  6A6D               	clrf	(btemp+11)^0,c
  5680  00365C  BE6C               	btfsc	(btemp+10)^0,7,c
  5681  00365E  066D               	decf	(btemp+11)^0,f,c
  5682  003660  C06C  FFE6         	movff	btemp+10,postinc1
  5683  003664  C06D  FFE6         	movff	btemp+11,postinc1
  5684  003668  ECE2  F028         	call	___awmod	;wreg free
  5685  00366C  5062               	movf	btemp^0,w,c
  5686  00366E  0D04               	mullw	4
  5687  003670  0E35               	movlw	low __npowers_
  5688  003672  24F3               	addwf	243,w,c
  5689  003674  6EF6               	movwf	tblptrl,c
  5690  003676  0E06               	movlw	high __npowers_
  5691  003678  20F4               	addwfc	244,w,c
  5692  00367A  6EF7               	movwf	tblptrh,c
  5693  00367C                     	if	0	;There are less than 3 active tblptr bytes
  5694  00367C                     	endif
  5695  00367C  0009               	tblrd		*+
  5696  00367E  CFF5 FFE6          	movff	tablat,postinc1
  5697  003682  0009               	tblrd		*+
  5698  003684  CFF5 FFE6          	movff	tablat,postinc1
  5699  003688  0009               	tblrd		*+
  5700  00368A  CFF5 FFE6          	movff	tablat,postinc1
  5701  00368E  0009               	tblrd		*+
  5702  003690  CFF5 FFE6          	movff	tablat,postinc1
  5703  003694  0E0A               	movlw	10
  5704  003696  6EE6               	movwf	postinc1,c
  5705  003698  0E00               	movlw	0
  5706  00369A  6EE6               	movwf	postinc1,c
  5707  00369C  0E64               	movlw	100
  5708  00369E  6EE6               	movwf	postinc1,c
  5709  0036A0  0E00               	movlw	0
  5710  0036A2  6EE6               	movwf	postinc1,c
  5711                           
  5712                           ;stkvar	scale@scl @ sp[(-8)+-1]
  5713  0036A4  0EF7               	movlw	-9
  5714  0036A6  50E3               	movf	plusw1,w,c
  5715  0036A8  6E6C               	movwf	(btemp+10)^0,c
  5716  0036AA  6A6D               	clrf	(btemp+11)^0,c
  5717  0036AC  BE6C               	btfsc	(btemp+10)^0,7,c
  5718  0036AE  066D               	decf	(btemp+11)^0,f,c
  5719  0036B0  C06C  FFE6         	movff	btemp+10,postinc1
  5720  0036B4  C06D  FFE6         	movff	btemp+11,postinc1
  5721  0036B8  ECE2  F028         	call	___awmod	;wreg free
  5722  0036BC  C062  FFE6         	movff	btemp,postinc1
  5723  0036C0  C063  FFE6         	movff	btemp+1,postinc1
  5724  0036C4  EC7D  F027         	call	___awdiv	;wreg free
  5725  0036C8  5062               	movf	btemp^0,w,c
  5726  0036CA  0F09               	addlw	9
  5727  0036CC  0D04               	mullw	4
  5728  0036CE  0E35               	movlw	low __npowers_
  5729  0036D0  24F3               	addwf	243,w,c
  5730  0036D2  6EF6               	movwf	tblptrl,c
  5731  0036D4  0E06               	movlw	high __npowers_
  5732  0036D6  20F4               	addwfc	244,w,c
  5733  0036D8  6EF7               	movwf	tblptrh,c
  5734  0036DA                     	if	0	;There are less than 3 active tblptr bytes
  5735  0036DA                     	endif
  5736  0036DA  0009               	tblrd		*+
  5737  0036DC  CFF5 FFE6          	movff	tablat,postinc1
  5738  0036E0  0009               	tblrd		*+
  5739  0036E2  CFF5 FFE6          	movff	tablat,postinc1
  5740  0036E6  0009               	tblrd		*+
  5741  0036E8  CFF5 FFE6          	movff	tablat,postinc1
  5742  0036EC  0009               	tblrd		*+
  5743  0036EE  CFF5 FFE6          	movff	tablat,postinc1
  5744  0036F2  0E64               	movlw	100
  5745  0036F4  6EE6               	movwf	postinc1,c
  5746  0036F6  0E00               	movlw	0
  5747  0036F8  6EE6               	movwf	postinc1,c
  5748                           
  5749                           ;stkvar	scale@scl @ sp[(-10)+-1]
  5750  0036FA  0EF5               	movlw	-11
  5751  0036FC  50E3               	movf	plusw1,w,c
  5752  0036FE  6E6C               	movwf	(btemp+10)^0,c
  5753  003700  6A6D               	clrf	(btemp+11)^0,c
  5754  003702  BE6C               	btfsc	(btemp+10)^0,7,c
  5755  003704  066D               	decf	(btemp+11)^0,f,c
  5756  003706  C06C  FFE6         	movff	btemp+10,postinc1
  5757  00370A  C06D  FFE6         	movff	btemp+11,postinc1
  5758  00370E  EC7D  F027         	call	___awdiv	;wreg free
  5759  003712  5062               	movf	btemp^0,w,c
  5760  003714  0F12               	addlw	18
  5761  003716  0D04               	mullw	4
  5762  003718  0E35               	movlw	low __npowers_
  5763  00371A  24F3               	addwf	243,w,c
  5764  00371C  6EF6               	movwf	tblptrl,c
  5765  00371E  0E06               	movlw	high __npowers_
  5766  003720  20F4               	addwfc	244,w,c
  5767  003722  6EF7               	movwf	tblptrh,c
  5768  003724                     	if	0	;There are less than 3 active tblptr bytes
  5769  003724                     	endif
  5770  003724  0009               	tblrd		*+
  5771  003726  CFF5 FFE6          	movff	tablat,postinc1
  5772  00372A  0009               	tblrd		*+
  5773  00372C  CFF5 FFE6          	movff	tablat,postinc1
  5774  003730  0009               	tblrd		*+
  5775  003732  CFF5 FFE6          	movff	tablat,postinc1
  5776  003736  0009               	tblrd		*+
  5777  003738  CFF5 FFE6          	movff	tablat,postinc1
  5778  00373C  EC32  F011         	call	___flmul	;wreg free
  5779  003740  C062  FFE6         	movff	btemp,postinc1
  5780  003744  C063  FFE6         	movff	btemp+1,postinc1
  5781  003748  C064  FFE6         	movff	btemp+2,postinc1
  5782  00374C  C065  FFE6         	movff	btemp+3,postinc1
  5783  003750  EC32  F011         	call	___flmul	;wreg free
  5784  003754  EF19  F01D         	goto	l452
  5785  003758                     l2126:
  5786                           
  5787                           ;doprnt.c: 440: else if(scl > 10)
  5788                           ;stkvar	scale@scl @ sp[(0)+-1]
  5789  003758  0EFF               	movlw	-1
  5790  00375A  50E3               	movf	plusw1,w,c
  5791  00375C  0A80               	xorlw	128
  5792  00375E  0F75               	addlw	-139
  5793  003760  A0D8               	btfss	status,0,c
  5794  003762  EFB5  F01B         	goto	u106_21
  5795  003766  EFB7  F01B         	goto	u106_20
  5796  00376A                     u106_21:
  5797  00376A  EF04  F01C         	goto	l2132
  5798  00376E                     u106_20:
  5799  00376E                     
  5800                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  5801  00376E  0E0A               	movlw	10
  5802  003770  6EE6               	movwf	postinc1,c
  5803  003772  0E00               	movlw	0
  5804  003774  6EE6               	movwf	postinc1,c
  5805                           
  5806                           ;stkvar	scale@scl @ sp[(-2)+-1]
  5807  003776  0EFD               	movlw	-3
  5808  003778  50E3               	movf	plusw1,w,c
  5809  00377A  6E6C               	movwf	(btemp+10)^0,c
  5810  00377C  6A6D               	clrf	(btemp+11)^0,c
  5811  00377E  BE6C               	btfsc	(btemp+10)^0,7,c
  5812  003780  066D               	decf	(btemp+11)^0,f,c
  5813  003782  C06C  FFE6         	movff	btemp+10,postinc1
  5814  003786  C06D  FFE6         	movff	btemp+11,postinc1
  5815  00378A  ECE2  F028         	call	___awmod	;wreg free
  5816  00378E  5062               	movf	btemp^0,w,c
  5817  003790  0D04               	mullw	4
  5818  003792  0E35               	movlw	low __npowers_
  5819  003794  24F3               	addwf	243,w,c
  5820  003796  6EF6               	movwf	tblptrl,c
  5821  003798  0E06               	movlw	high __npowers_
  5822  00379A  20F4               	addwfc	244,w,c
  5823  00379C  6EF7               	movwf	tblptrh,c
  5824  00379E                     	if	0	;There are less than 3 active tblptr bytes
  5825  00379E                     	endif
  5826  00379E  0009               	tblrd		*+
  5827  0037A0  CFF5 FFE6          	movff	tablat,postinc1
  5828  0037A4  0009               	tblrd		*+
  5829  0037A6  CFF5 FFE6          	movff	tablat,postinc1
  5830  0037AA  0009               	tblrd		*+
  5831  0037AC  CFF5 FFE6          	movff	tablat,postinc1
  5832  0037B0  0009               	tblrd		*+
  5833  0037B2  CFF5 FFE6          	movff	tablat,postinc1
  5834  0037B6  0E0A               	movlw	10
  5835  0037B8  6EE6               	movwf	postinc1,c
  5836  0037BA  0E00               	movlw	0
  5837  0037BC  6EE6               	movwf	postinc1,c
  5838                           
  5839                           ;stkvar	scale@scl @ sp[(-6)+-1]
  5840  0037BE  0EF9               	movlw	-7
  5841  0037C0  50E3               	movf	plusw1,w,c
  5842  0037C2  6E6C               	movwf	(btemp+10)^0,c
  5843  0037C4  6A6D               	clrf	(btemp+11)^0,c
  5844  0037C6  BE6C               	btfsc	(btemp+10)^0,7,c
  5845  0037C8  066D               	decf	(btemp+11)^0,f,c
  5846  0037CA  C06C  FFE6         	movff	btemp+10,postinc1
  5847  0037CE  C06D  FFE6         	movff	btemp+11,postinc1
  5848  0037D2  EC7D  F027         	call	___awdiv	;wreg free
  5849  0037D6  5062               	movf	btemp^0,w,c
  5850  0037D8  0F09               	addlw	9
  5851  0037DA  0D04               	mullw	4
  5852  0037DC  0E35               	movlw	low __npowers_
  5853  0037DE  24F3               	addwf	243,w,c
  5854  0037E0  6EF6               	movwf	tblptrl,c
  5855  0037E2  0E06               	movlw	high __npowers_
  5856  0037E4  20F4               	addwfc	244,w,c
  5857  0037E6  6EF7               	movwf	tblptrh,c
  5858  0037E8                     	if	0	;There are less than 3 active tblptr bytes
  5859  0037E8                     	endif
  5860  0037E8  0009               	tblrd		*+
  5861  0037EA  CFF5 FFE6          	movff	tablat,postinc1
  5862  0037EE  0009               	tblrd		*+
  5863  0037F0  CFF5 FFE6          	movff	tablat,postinc1
  5864  0037F4  0009               	tblrd		*+
  5865  0037F6  CFF5 FFE6          	movff	tablat,postinc1
  5866  0037FA  0009               	tblrd		*+
  5867  0037FC  CFF5 FFE6          	movff	tablat,postinc1
  5868  003800  EC32  F011         	call	___flmul	;wreg free
  5869  003804  EF19  F01D         	goto	l452
  5870  003808                     l2132:
  5871                           
  5872                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  5873                           ;stkvar	scale@scl @ sp[(0)+-1]
  5874  003808  0EFF               	movlw	-1
  5875  00380A  50E3               	movf	plusw1,w,c
  5876  00380C  0D04               	mullw	4
  5877  00380E  0E35               	movlw	low __npowers_
  5878  003810  24F3               	addwf	243,w,c
  5879  003812  6EF6               	movwf	tblptrl,c
  5880  003814  0E06               	movlw	high __npowers_
  5881  003816  20F4               	addwfc	244,w,c
  5882  003818  6EF7               	movwf	tblptrh,c
  5883  00381A                     	if	0	;There are less than 3 active tblptr bytes
  5884  00381A                     	endif
  5885  00381A  0009               	tblrd		*+
  5886  00381C  CFF5 F062          	movff	tablat,btemp
  5887  003820  0009               	tblrd		*+
  5888  003822  CFF5 F063          	movff	tablat,btemp+1
  5889  003826  0009               	tblrd		*+
  5890  003828  CFF5 F064          	movff	tablat,btemp+2
  5891  00382C  0009               	tblrd		*+
  5892  00382E  CFF5 F065          	movff	tablat,btemp+3
  5893  003832  EF19  F01D         	goto	l452
  5894  003836                     l2136:
  5895                           
  5896                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  5897                           ;stkvar	scale@scl @ sp[(0)+-1]
  5898  003836  0EFF               	movlw	-1
  5899  003838  50E3               	movf	plusw1,w,c
  5900  00383A  0A80               	xorlw	128
  5901  00383C  0F12               	addlw	-238
  5902  00383E  A0D8               	btfss	status,0,c
  5903  003840  EF24  F01C         	goto	u107_21
  5904  003844  EF26  F01C         	goto	u107_20
  5905  003848                     u107_21:
  5906  003848  EFAC  F01C         	goto	l2144
  5907  00384C                     u107_20:
  5908  00384C                     
  5909                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  5910  00384C  0E0A               	movlw	10
  5911  00384E  6EE6               	movwf	postinc1,c
  5912  003850  0E00               	movlw	0
  5913  003852  6EE6               	movwf	postinc1,c
  5914                           
  5915                           ;stkvar	scale@scl @ sp[(-2)+-1]
  5916  003854  0EFD               	movlw	-3
  5917  003856  50E3               	movf	plusw1,w,c
  5918  003858  6E6C               	movwf	(btemp+10)^0,c
  5919  00385A  6A6D               	clrf	(btemp+11)^0,c
  5920  00385C  BE6C               	btfsc	(btemp+10)^0,7,c
  5921  00385E  066D               	decf	(btemp+11)^0,f,c
  5922  003860  C06C  FFE6         	movff	btemp+10,postinc1
  5923  003864  C06D  FFE6         	movff	btemp+11,postinc1
  5924  003868  ECE2  F028         	call	___awmod	;wreg free
  5925  00386C  5062               	movf	btemp^0,w,c
  5926  00386E  0D04               	mullw	4
  5927  003870  0E01               	movlw	low __powers_
  5928  003872  24F3               	addwf	243,w,c
  5929  003874  6EF6               	movwf	tblptrl,c
  5930  003876  0E06               	movlw	high __powers_
  5931  003878  20F4               	addwfc	244,w,c
  5932  00387A  6EF7               	movwf	tblptrh,c
  5933  00387C                     	if	0	;There are less than 3 active tblptr bytes
  5934  00387C                     	endif
  5935  00387C  0009               	tblrd		*+
  5936  00387E  CFF5 FFE6          	movff	tablat,postinc1
  5937  003882  0009               	tblrd		*+
  5938  003884  CFF5 FFE6          	movff	tablat,postinc1
  5939  003888  0009               	tblrd		*+
  5940  00388A  CFF5 FFE6          	movff	tablat,postinc1
  5941  00388E  0009               	tblrd		*+
  5942  003890  CFF5 FFE6          	movff	tablat,postinc1
  5943  003894  0E0A               	movlw	10
  5944  003896  6EE6               	movwf	postinc1,c
  5945  003898  0E00               	movlw	0
  5946  00389A  6EE6               	movwf	postinc1,c
  5947  00389C  0E64               	movlw	100
  5948  00389E  6EE6               	movwf	postinc1,c
  5949  0038A0  0E00               	movlw	0
  5950  0038A2  6EE6               	movwf	postinc1,c
  5951                           
  5952                           ;stkvar	scale@scl @ sp[(-8)+-1]
  5953  0038A4  0EF7               	movlw	-9
  5954  0038A6  50E3               	movf	plusw1,w,c
  5955  0038A8  6E6C               	movwf	(btemp+10)^0,c
  5956  0038AA  6A6D               	clrf	(btemp+11)^0,c
  5957  0038AC  BE6C               	btfsc	(btemp+10)^0,7,c
  5958  0038AE  066D               	decf	(btemp+11)^0,f,c
  5959  0038B0  C06C  FFE6         	movff	btemp+10,postinc1
  5960  0038B4  C06D  FFE6         	movff	btemp+11,postinc1
  5961  0038B8  ECE2  F028         	call	___awmod	;wreg free
  5962  0038BC  C062  FFE6         	movff	btemp,postinc1
  5963  0038C0  C063  FFE6         	movff	btemp+1,postinc1
  5964  0038C4  EC7D  F027         	call	___awdiv	;wreg free
  5965  0038C8  5062               	movf	btemp^0,w,c
  5966  0038CA  0F09               	addlw	9
  5967  0038CC  0D04               	mullw	4
  5968  0038CE  0E01               	movlw	low __powers_
  5969  0038D0  24F3               	addwf	243,w,c
  5970  0038D2  6EF6               	movwf	tblptrl,c
  5971  0038D4  0E06               	movlw	high __powers_
  5972  0038D6  20F4               	addwfc	244,w,c
  5973  0038D8  6EF7               	movwf	tblptrh,c
  5974  0038DA                     	if	0	;There are less than 3 active tblptr bytes
  5975  0038DA                     	endif
  5976  0038DA  0009               	tblrd		*+
  5977  0038DC  CFF5 FFE6          	movff	tablat,postinc1
  5978  0038E0  0009               	tblrd		*+
  5979  0038E2  CFF5 FFE6          	movff	tablat,postinc1
  5980  0038E6  0009               	tblrd		*+
  5981  0038E8  CFF5 FFE6          	movff	tablat,postinc1
  5982  0038EC  0009               	tblrd		*+
  5983  0038EE  CFF5 FFE6          	movff	tablat,postinc1
  5984  0038F2  0E64               	movlw	100
  5985  0038F4  6EE6               	movwf	postinc1,c
  5986  0038F6  0E00               	movlw	0
  5987  0038F8  6EE6               	movwf	postinc1,c
  5988                           
  5989                           ;stkvar	scale@scl @ sp[(-10)+-1]
  5990  0038FA  0EF5               	movlw	-11
  5991  0038FC  50E3               	movf	plusw1,w,c
  5992  0038FE  6E6C               	movwf	(btemp+10)^0,c
  5993  003900  6A6D               	clrf	(btemp+11)^0,c
  5994  003902  BE6C               	btfsc	(btemp+10)^0,7,c
  5995  003904  066D               	decf	(btemp+11)^0,f,c
  5996  003906  C06C  FFE6         	movff	btemp+10,postinc1
  5997  00390A  C06D  FFE6         	movff	btemp+11,postinc1
  5998  00390E  EC7D  F027         	call	___awdiv	;wreg free
  5999  003912  5062               	movf	btemp^0,w,c
  6000  003914  0F12               	addlw	18
  6001  003916  0D04               	mullw	4
  6002  003918  0E01               	movlw	low __powers_
  6003  00391A  24F3               	addwf	243,w,c
  6004  00391C  6EF6               	movwf	tblptrl,c
  6005  00391E  0E06               	movlw	high __powers_
  6006  003920  20F4               	addwfc	244,w,c
  6007  003922  6EF7               	movwf	tblptrh,c
  6008  003924                     	if	0	;There are less than 3 active tblptr bytes
  6009  003924                     	endif
  6010  003924  0009               	tblrd		*+
  6011  003926  CFF5 FFE6          	movff	tablat,postinc1
  6012  00392A  0009               	tblrd		*+
  6013  00392C  CFF5 FFE6          	movff	tablat,postinc1
  6014  003930  0009               	tblrd		*+
  6015  003932  CFF5 FFE6          	movff	tablat,postinc1
  6016  003936  0009               	tblrd		*+
  6017  003938  CFF5 FFE6          	movff	tablat,postinc1
  6018  00393C  EC32  F011         	call	___flmul	;wreg free
  6019  003940  C062  FFE6         	movff	btemp,postinc1
  6020  003944  C063  FFE6         	movff	btemp+1,postinc1
  6021  003948  C064  FFE6         	movff	btemp+2,postinc1
  6022  00394C  C065  FFE6         	movff	btemp+3,postinc1
  6023  003950  EC32  F011         	call	___flmul	;wreg free
  6024  003954  EF19  F01D         	goto	l452
  6025  003958                     l2144:
  6026                           
  6027                           ;doprnt.c: 446: else if(scl > 10)
  6028                           ;stkvar	scale@scl @ sp[(0)+-1]
  6029  003958  0EFF               	movlw	-1
  6030  00395A  50E3               	movf	plusw1,w,c
  6031  00395C  0A80               	xorlw	128
  6032  00395E  0F75               	addlw	-139
  6033  003960  A0D8               	btfss	status,0,c
  6034  003962  EFB5  F01C         	goto	u108_21
  6035  003966  EFB7  F01C         	goto	u108_20
  6036  00396A                     u108_21:
  6037  00396A  EF04  F01D         	goto	l2150
  6038  00396E                     u108_20:
  6039  00396E                     
  6040                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  6041  00396E  0E0A               	movlw	10
  6042  003970  6EE6               	movwf	postinc1,c
  6043  003972  0E00               	movlw	0
  6044  003974  6EE6               	movwf	postinc1,c
  6045                           
  6046                           ;stkvar	scale@scl @ sp[(-2)+-1]
  6047  003976  0EFD               	movlw	-3
  6048  003978  50E3               	movf	plusw1,w,c
  6049  00397A  6E6C               	movwf	(btemp+10)^0,c
  6050  00397C  6A6D               	clrf	(btemp+11)^0,c
  6051  00397E  BE6C               	btfsc	(btemp+10)^0,7,c
  6052  003980  066D               	decf	(btemp+11)^0,f,c
  6053  003982  C06C  FFE6         	movff	btemp+10,postinc1
  6054  003986  C06D  FFE6         	movff	btemp+11,postinc1
  6055  00398A  ECE2  F028         	call	___awmod	;wreg free
  6056  00398E  5062               	movf	btemp^0,w,c
  6057  003990  0D04               	mullw	4
  6058  003992  0E01               	movlw	low __powers_
  6059  003994  24F3               	addwf	243,w,c
  6060  003996  6EF6               	movwf	tblptrl,c
  6061  003998  0E06               	movlw	high __powers_
  6062  00399A  20F4               	addwfc	244,w,c
  6063  00399C  6EF7               	movwf	tblptrh,c
  6064  00399E                     	if	0	;There are less than 3 active tblptr bytes
  6065  00399E                     	endif
  6066  00399E  0009               	tblrd		*+
  6067  0039A0  CFF5 FFE6          	movff	tablat,postinc1
  6068  0039A4  0009               	tblrd		*+
  6069  0039A6  CFF5 FFE6          	movff	tablat,postinc1
  6070  0039AA  0009               	tblrd		*+
  6071  0039AC  CFF5 FFE6          	movff	tablat,postinc1
  6072  0039B0  0009               	tblrd		*+
  6073  0039B2  CFF5 FFE6          	movff	tablat,postinc1
  6074  0039B6  0E0A               	movlw	10
  6075  0039B8  6EE6               	movwf	postinc1,c
  6076  0039BA  0E00               	movlw	0
  6077  0039BC  6EE6               	movwf	postinc1,c
  6078                           
  6079                           ;stkvar	scale@scl @ sp[(-6)+-1]
  6080  0039BE  0EF9               	movlw	-7
  6081  0039C0  50E3               	movf	plusw1,w,c
  6082  0039C2  6E6C               	movwf	(btemp+10)^0,c
  6083  0039C4  6A6D               	clrf	(btemp+11)^0,c
  6084  0039C6  BE6C               	btfsc	(btemp+10)^0,7,c
  6085  0039C8  066D               	decf	(btemp+11)^0,f,c
  6086  0039CA  C06C  FFE6         	movff	btemp+10,postinc1
  6087  0039CE  C06D  FFE6         	movff	btemp+11,postinc1
  6088  0039D2  EC7D  F027         	call	___awdiv	;wreg free
  6089  0039D6  5062               	movf	btemp^0,w,c
  6090  0039D8  0F09               	addlw	9
  6091  0039DA  0D04               	mullw	4
  6092  0039DC  0E01               	movlw	low __powers_
  6093  0039DE  24F3               	addwf	243,w,c
  6094  0039E0  6EF6               	movwf	tblptrl,c
  6095  0039E2  0E06               	movlw	high __powers_
  6096  0039E4  20F4               	addwfc	244,w,c
  6097  0039E6  6EF7               	movwf	tblptrh,c
  6098  0039E8                     	if	0	;There are less than 3 active tblptr bytes
  6099  0039E8                     	endif
  6100  0039E8  0009               	tblrd		*+
  6101  0039EA  CFF5 FFE6          	movff	tablat,postinc1
  6102  0039EE  0009               	tblrd		*+
  6103  0039F0  CFF5 FFE6          	movff	tablat,postinc1
  6104  0039F4  0009               	tblrd		*+
  6105  0039F6  CFF5 FFE6          	movff	tablat,postinc1
  6106  0039FA  0009               	tblrd		*+
  6107  0039FC  CFF5 FFE6          	movff	tablat,postinc1
  6108  003A00  EC32  F011         	call	___flmul	;wreg free
  6109  003A04  EF19  F01D         	goto	l452
  6110  003A08                     l2150:
  6111                           
  6112                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  6113                           ;stkvar	scale@scl @ sp[(0)+-1]
  6114  003A08  0EFF               	movlw	-1
  6115  003A0A  50E3               	movf	plusw1,w,c
  6116  003A0C  0D04               	mullw	4
  6117  003A0E  0E01               	movlw	low __powers_
  6118  003A10  24F3               	addwf	243,w,c
  6119  003A12  6EF6               	movwf	tblptrl,c
  6120  003A14  0E06               	movlw	high __powers_
  6121  003A16  20F4               	addwfc	244,w,c
  6122  003A18  6EF7               	movwf	tblptrh,c
  6123  003A1A                     	if	0	;There are less than 3 active tblptr bytes
  6124  003A1A                     	endif
  6125  003A1A  0009               	tblrd		*+
  6126  003A1C  CFF5 F062          	movff	tablat,btemp
  6127  003A20  0009               	tblrd		*+
  6128  003A22  CFF5 F063          	movff	tablat,btemp+1
  6129  003A26  0009               	tblrd		*+
  6130  003A28  CFF5 F064          	movff	tablat,btemp+2
  6131  003A2C  0009               	tblrd		*+
  6132  003A2E  CFF5 F065          	movff	tablat,btemp+3
  6133  003A32                     l452:
  6134                           
  6135                           ; _scale: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
  6136  003A32  52E5               	movf	postdec1,f,c
  6137  003A34  0012               	return		;funcret
  6138  003A36                     __end_of_scale:
  6139                           	opt callstack 0
  6140                           
  6141 ;; *************** function ___awdiv *****************
  6142 ;; Defined at:
  6143 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;  dividend        2  [STACK] int 
  6146 ;;  divisor         2  [STACK] int 
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;  quotient        2  [STACK] int 
  6149 ;;  sign            1  [STACK] unsigned char 
  6150 ;;  counter         1  [STACK] unsigned char 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  2  [STACK] int 
  6153 ;; Registers used:
  6154 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6160 ;;      Params:         0       0       0       0       0       0       0
  6161 ;;      Locals:         0       0       0       0       0       0       0
  6162 ;;      Temps:          0       0       0       0       0       0       0
  6163 ;;      Totals:         0       0       0       0       0       0       0
  6164 ;;Total ram usage:        0 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; Hardware stack levels required when called:    4
  6167 ;; This function calls:
  6168 ;;		Nothing
  6169 ;; This function is called by:
  6170 ;;		_scale
  6171 ;;		_sprintf
  6172 ;; This function uses a reentrant model
  6173 ;;
  6174                           
  6175                           	psect	text19
  6176  004EFA                     __ptext19:
  6177                           	opt callstack 0
  6178  004EFA                     ___awdiv:
  6179                           	opt callstack 0
  6180                           
  6181                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6182  004EFA  52E6               	movf	postinc1,f,c
  6183  004EFC  52E6               	movf	postinc1,f,c
  6184  004EFE  52E6               	movf	postinc1,f,c
  6185  004F00  52E6               	movf	postinc1,f,c
  6186  004F02                     
  6187                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  6188  004F02  0EFE               	movlw	-2
  6189  004F04  6AE3               	clrf	plusw1,c
  6190  004F06                     
  6191                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  6192  004F06  0EF9               	movlw	-7
  6193  004F08  BEE3               	btfsc	plusw1,7,c
  6194  004F0A  EF8B  F027         	goto	u80_20
  6195  004F0E  EF89  F027         	goto	u80_21
  6196  004F12                     u80_21:
  6197  004F12  EF94  F027         	goto	l1900
  6198  004F16                     u80_20:
  6199  004F16                     
  6200                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  6201                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  6202  004F16  0EF8               	movlw	-8
  6203  004F18  6CE3               	negf	plusw1,c
  6204  004F1A  0EF9               	movlw	-7
  6205  004F1C  1EE3               	comf	plusw1,f,c
  6206  004F1E  B0D8               	btfsc	status,0,c
  6207  004F20  2AE3               	incf	plusw1,f,c
  6208  004F22                     
  6209                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  6210  004F22  0EFE               	movlw	-2
  6211  004F24  6AE3               	clrf	plusw1,c
  6212  004F26  2AE3               	incf	plusw1,f,c
  6213  004F28                     l1900:
  6214                           
  6215                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  6216  004F28  0EFB               	movlw	-5
  6217  004F2A  BEE3               	btfsc	plusw1,7,c
  6218  004F2C  EF9C  F027         	goto	u81_20
  6219  004F30  EF9A  F027         	goto	u81_21
  6220  004F34                     u81_21:
  6221  004F34  EFA4  F027         	goto	l1906
  6222  004F38                     u81_20:
  6223  004F38                     
  6224                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  6225                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  6226  004F38  0EFA               	movlw	-6
  6227  004F3A  6CE3               	negf	plusw1,c
  6228  004F3C  0EFB               	movlw	-5
  6229  004F3E  1EE3               	comf	plusw1,f,c
  6230  004F40  B0D8               	btfsc	status,0,c
  6231  004F42  2AE3               	incf	plusw1,f,c
  6232  004F44                     
  6233                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  6234  004F44  0EFE               	movlw	-2
  6235  004F46  70E3               	btg	plusw1,0,c
  6236  004F48                     l1906:
  6237                           
  6238                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  6239  004F48  0EFC               	movlw	-4
  6240  004F4A  6AE3               	clrf	plusw1,c
  6241  004F4C  0EFD               	movlw	-3
  6242  004F4E  6AE3               	clrf	plusw1,c
  6243  004F50                     
  6244                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  6245  004F50  0EF8               	movlw	-8
  6246  004F52  CFE3 F062          	movff	plusw1,btemp
  6247  004F56  0EF9               	movlw	-7
  6248  004F58  50E3               	movf	plusw1,w,c
  6249  004F5A  1062               	iorwf	btemp^0,w,c
  6250  004F5C  B4D8               	btfsc	status,2,c
  6251  004F5E  EFB3  F027         	goto	u82_21
  6252  004F62  EFB5  F027         	goto	u82_20
  6253  004F66                     u82_21:
  6254  004F66  EF21  F028         	goto	l1930
  6255  004F6A                     u82_20:
  6256  004F6A                     
  6257                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
  6258  004F6A  0EFF               	movlw	-1
  6259  004F6C  6AE3               	clrf	plusw1,c
  6260  004F6E  2AE3               	incf	plusw1,f,c
  6261  004F70  EFCB  F027         	goto	l1916
  6262  004F74                     l1912:
  6263                           
  6264                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  6265  004F74  0EF8               	movlw	-8
  6266  004F76  50E3               	movf	plusw1,w,c
  6267  004F78  90D8               	bcf	status,0,c
  6268  004F7A  34E8               	rlcf	wreg,w,c
  6269  004F7C  6E62               	movwf	btemp^0,c
  6270  004F7E  0EF8               	movlw	-8
  6271  004F80  C062  FFE3         	movff	btemp,plusw1
  6272  004F84  0EF9               	movlw	-7
  6273  004F86  50E3               	movf	plusw1,w,c
  6274  004F88  34E8               	rlcf	wreg,w,c
  6275  004F8A  6E62               	movwf	btemp^0,c
  6276  004F8C  0EF9               	movlw	-7
  6277  004F8E  C062  FFE3         	movff	btemp,plusw1
  6278  004F92                     
  6279                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
  6280  004F92  0EFF               	movlw	-1
  6281  004F94  2AE3               	incf	plusw1,f,c
  6282  004F96                     l1916:
  6283                           
  6284                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  6285  004F96  0EF9               	movlw	-7
  6286  004F98  AEE3               	btfss	plusw1,7,c
  6287  004F9A  EFD1  F027         	goto	u83_21
  6288  004F9E  EFD3  F027         	goto	u83_20
  6289  004FA2                     u83_21:
  6290  004FA2  EFBA  F027         	goto	l1912
  6291  004FA6                     u83_20:
  6292  004FA6                     l1918:
  6293                           
  6294                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  6295  004FA6  0EFC               	movlw	-4
  6296  004FA8  50E3               	movf	plusw1,w,c
  6297  004FAA  90D8               	bcf	status,0,c
  6298  004FAC  34E8               	rlcf	wreg,w,c
  6299  004FAE  6E62               	movwf	btemp^0,c
  6300  004FB0  0EFC               	movlw	-4
  6301  004FB2  C062  FFE3         	movff	btemp,plusw1
  6302  004FB6  0EFD               	movlw	-3
  6303  004FB8  50E3               	movf	plusw1,w,c
  6304  004FBA  34E8               	rlcf	wreg,w,c
  6305  004FBC  6E62               	movwf	btemp^0,c
  6306  004FBE  0EFD               	movlw	-3
  6307  004FC0  C062  FFE3         	movff	btemp,plusw1
  6308  004FC4                     
  6309                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  6310  004FC4  0EF8               	movlw	-8
  6311  004FC6  CFE3 F06C          	movff	plusw1,btemp+10
  6312  004FCA  0EF9               	movlw	-7
  6313  004FCC  CFE3 F06D          	movff	plusw1,btemp+11
  6314                           
  6315                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  6316  004FD0  0EFA               	movlw	-6
  6317  004FD2  CFE3 F06A          	movff	plusw1,btemp+8
  6318  004FD6  0EFB               	movlw	-5
  6319  004FD8  CFE3 F06B          	movff	plusw1,btemp+9
  6320  004FDC  506C               	movf	(btemp+10)^0,w,c
  6321  004FDE  5C6A               	subwf	(btemp+8)^0,w,c
  6322  004FE0  506D               	movf	(btemp+11)^0,w,c
  6323  004FE2  586B               	subwfb	(btemp+9)^0,w,c
  6324  004FE4  A0D8               	btfss	status,0,c
  6325  004FE6  EFF7  F027         	goto	u84_21
  6326  004FEA  EFF9  F027         	goto	u84_20
  6327  004FEE                     u84_21:
  6328  004FEE  EF0D  F028         	goto	l1926
  6329  004FF2                     u84_20:
  6330  004FF2                     
  6331                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  6332                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  6333  004FF2  0EFA               	movlw	-6
  6334  004FF4  50E3               	movf	plusw1,w,c
  6335  004FF6  6E62               	movwf	btemp^0,c
  6336  004FF8  0EF8               	movlw	-8
  6337  004FFA  50E3               	movf	plusw1,w,c
  6338  004FFC  5E62               	subwf	btemp^0,f,c
  6339  004FFE  0EFA               	movlw	-6
  6340  005000  C062  FFE3         	movff	btemp,plusw1
  6341  005004  0EFB               	movlw	-5
  6342  005006  50E3               	movf	plusw1,w,c
  6343  005008  6E62               	movwf	btemp^0,c
  6344  00500A  0EF9               	movlw	-7
  6345  00500C  50E3               	movf	plusw1,w,c
  6346  00500E  5A62               	subwfb	btemp^0,f,c
  6347  005010  0EFB               	movlw	-5
  6348  005012  C062  FFE3         	movff	btemp,plusw1
  6349  005016                     
  6350                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  6351  005016  0EFC               	movlw	-4
  6352  005018  80E3               	bsf	plusw1,0,c
  6353  00501A                     l1926:
  6354                           
  6355                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  6356  00501A  90D8               	bcf	status,0,c
  6357  00501C  0EF9               	movlw	-7
  6358  00501E  32E3               	rrcf	plusw1,f,c
  6359  005020  0EF8               	movlw	-8
  6360  005022  32E3               	rrcf	plusw1,f,c
  6361  005024                     
  6362                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
  6363  005024  0EFF               	movlw	-1
  6364  005026  50E3               	movf	plusw1,w,c
  6365  005028  6E62               	movwf	btemp^0,c
  6366  00502A  0E01               	movlw	1
  6367  00502C  5E62               	subwf	btemp^0,f,c
  6368  00502E  0EFF               	movlw	-1
  6369  005030  C062  FFE3         	movff	btemp,plusw1
  6370  005034  A4D8               	btfss	status,2,c
  6371  005036  EF1F  F028         	goto	u85_21
  6372  00503A  EF21  F028         	goto	u85_20
  6373  00503E                     u85_21:
  6374  00503E  EFD3  F027         	goto	l1918
  6375  005042                     u85_20:
  6376  005042                     l1930:
  6377                           
  6378                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  6379  005042  0EFE               	movlw	-2
  6380  005044  50E3               	movf	plusw1,w,c
  6381  005046  B4D8               	btfsc	status,2,c
  6382  005048  EF28  F028         	goto	u86_21
  6383  00504C  EF2A  F028         	goto	u86_20
  6384  005050                     u86_21:
  6385  005050  EF30  F028         	goto	l1934
  6386  005054                     u86_20:
  6387  005054                     
  6388                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  6389                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  6390  005054  0EFC               	movlw	-4
  6391  005056  6CE3               	negf	plusw1,c
  6392  005058  0EFD               	movlw	-3
  6393  00505A  1EE3               	comf	plusw1,f,c
  6394  00505C  B0D8               	btfsc	status,0,c
  6395  00505E  2AE3               	incf	plusw1,f,c
  6396  005060                     l1934:
  6397                           
  6398                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  6399  005060  0EFC               	movlw	-4
  6400  005062  CFE3 F062          	movff	plusw1,btemp
  6401  005066  0EFD               	movlw	-3
  6402  005068  CFE3 F063          	movff	plusw1,btemp+1
  6403  00506C                     
  6404                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  6405  00506C  0EF8               	movlw	248
  6406  00506E  26E1               	addwf	fsr1l,f,c
  6407  005070  0EFF               	movlw	255
  6408  005072  22E2               	addwfc	fsr1h,f,c
  6409  005074  0012               	return		;funcret
  6410  005076                     __end_of___awdiv:
  6411                           	opt callstack 0
  6412                           
  6413 ;; *************** function _isdigit *****************
  6414 ;; Defined at:
  6415 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;  c               1  [STACK] unsigned char 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;		None
  6420 ;; Return value:  Size  Location     Type
  6421 ;;		None               void
  6422 ;; Registers used:
  6423 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+11
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6429 ;;      Params:         0       0       0       0       0       0       0
  6430 ;;      Locals:         0       0       0       0       0       0       0
  6431 ;;      Temps:          0       0       0       0       0       0       0
  6432 ;;      Totals:         0       0       0       0       0       0       0
  6433 ;;Total ram usage:        0 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; Hardware stack levels required when called:    4
  6436 ;; This function calls:
  6437 ;;		Nothing
  6438 ;; This function is called by:
  6439 ;;		_sprintf
  6440 ;; This function uses a reentrant model
  6441 ;;
  6442                           
  6443                           	psect	text20
  6444  00638C                     __ptext20:
  6445                           	opt callstack 0
  6446  00638C                     _isdigit:
  6447                           	opt callstack 0
  6448                           
  6449                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6450  00638C  52E6               	movf	postinc1,f,c
  6451  00638E                     
  6452                           ;stkvar	_isdigit$1701 @ sp[(-1)+0]
  6453  00638E  0EFF               	movlw	-1
  6454  006390  6AE3               	clrf	plusw1,c
  6455  006392                     
  6456                           ;stkvar	isdigit@c @ sp[(-1)+-1]
  6457  006392  0EFE               	movlw	-2
  6458  006394  CFE3 F062          	movff	plusw1,btemp
  6459  006398  0E3A               	movlw	58
  6460  00639A  6062               	cpfslt	btemp^0,c
  6461  00639C  EFD2  F031         	goto	u109_21
  6462  0063A0  EFD4  F031         	goto	u109_20
  6463  0063A4                     u109_21:
  6464  0063A4  EFE2  F031         	goto	l2162
  6465  0063A8                     u109_20:
  6466  0063A8                     
  6467                           ;stkvar	isdigit@c @ sp[(-1)+-1]
  6468  0063A8  0EFE               	movlw	-2
  6469  0063AA  CFE3 F062          	movff	plusw1,btemp
  6470  0063AE  0E2F               	movlw	47
  6471  0063B0  6462               	cpfsgt	btemp^0,c
  6472  0063B2  EFDD  F031         	goto	u110_21
  6473  0063B6  EFDF  F031         	goto	u110_20
  6474  0063BA                     u110_21:
  6475  0063BA  EFE2  F031         	goto	l2162
  6476  0063BE                     u110_20:
  6477  0063BE                     
  6478                           ;stkvar	_isdigit$1701 @ sp[(-1)+0]
  6479  0063BE  0EFF               	movlw	-1
  6480  0063C0  6AE3               	clrf	plusw1,c
  6481  0063C2  2AE3               	incf	plusw1,f,c
  6482  0063C4                     l2162:
  6483                           
  6484                           ;stkvar	_isdigit$1701 @ sp[(-1)+0]
  6485  0063C4  0EFF               	movlw	-1
  6486  0063C6  CFE3 F06D          	movff	plusw1,btemp+11
  6487  0063CA  306D               	rrcf	(btemp+11)^0,w,c
  6488  0063CC  9062               	bcf	btemp& (0+255),0,c
  6489  0063CE  B0D8               	btfsc	status,0,c
  6490  0063D0  8062               	bsf	btemp& (0+255),0,c
  6491  0063D2                     
  6492                           ; _isdigit: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsi
      +                          ze = 1, vargsize = 0
  6493  0063D2  52E5               	movf	postdec1,f,c
  6494  0063D4  52E5               	movf	postdec1,f,c
  6495  0063D6  0012               	return		;funcret
  6496  0063D8                     __end_of_isdigit:
  6497                           	opt callstack 0
  6498                           
  6499 ;; *************** function _fround *****************
  6500 ;; Defined at:
  6501 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;  prec            1  [STACK] unsigned char 
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;		None
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  4  [STACK] unsigned char 
  6508 ;; Registers used:
  6509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6515 ;;      Params:         0       0       0       0       0       0       0
  6516 ;;      Locals:         0       0       0       0       0       0       0
  6517 ;;      Temps:          0       0       0       0       0       0       0
  6518 ;;      Totals:         0       0       0       0       0       0       0
  6519 ;;Total ram usage:        0 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; Hardware stack levels required when called:    5
  6522 ;; This function calls:
  6523 ;;		___flmul
  6524 ;;		___lbdiv
  6525 ;;		___lbmod
  6526 ;; This function is called by:
  6527 ;;		_sprintf
  6528 ;; This function uses a reentrant model
  6529 ;;
  6530                           
  6531                           	psect	text21
  6532  004202                     __ptext21:
  6533                           	opt callstack 0
  6534  004202                     _fround:
  6535                           	opt callstack 18
  6536  004202                     
  6537                           ;doprnt.c: 421: if(prec>=110)
  6538                           ;stkvar	fround@prec @ sp[(0)+-1]
  6539  004202  0EFF               	movlw	-1
  6540  004204  CFE3 F062          	movff	plusw1,btemp
  6541  004208  0E6D               	movlw	109
  6542  00420A  6462               	cpfsgt	btemp^0,c
  6543  00420C  EF0A  F021         	goto	u102_21
  6544  004210  EF0C  F021         	goto	u102_20
  6545  004214                     u102_21:
  6546  004214  EFA0  F021         	goto	l2104
  6547  004218                     u102_20:
  6548  004218                     
  6549                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6550  004218  0E0A               	movlw	10
  6551  00421A  6EE6               	movwf	postinc1,c
  6552                           
  6553                           ;stkvar	fround@prec @ sp[(-1)+-1]
  6554  00421C  0EFE               	movlw	-2
  6555  00421E  50E3               	movf	plusw1,w,c
  6556  004220  6EE6               	movwf	postinc1,c
  6557  004222  EC82  F02E         	call	___lbmod	;wreg free
  6558  004226  5062               	movf	btemp^0,w,c
  6559  004228  6E6C               	movwf	(btemp+10)^0,c
  6560  00422A  6A6D               	clrf	(btemp+11)^0,c
  6561  00422C  90D8               	bcf	status,0,c
  6562  00422E  366C               	rlcf	(btemp+10)^0,f,c
  6563  004230  366D               	rlcf	(btemp+11)^0,f,c
  6564  004232  90D8               	bcf	status,0,c
  6565  004234  366C               	rlcf	(btemp+10)^0,f,c
  6566  004236  366D               	rlcf	(btemp+11)^0,f,c
  6567  004238  0E35               	movlw	low __npowers_
  6568  00423A  246C               	addwf	(btemp+10)^0,w,c
  6569  00423C  6EF6               	movwf	tblptrl,c
  6570  00423E  0E06               	movlw	high __npowers_
  6571  004240  206D               	addwfc	(btemp+11)^0,w,c
  6572  004242  6EF7               	movwf	tblptrh,c
  6573  004244                     	if	0	;There are less than 3 active tblptr bytes
  6574  004244                     	endif
  6575  004244  0009               	tblrd		*+
  6576  004246  CFF5 FFE6          	movff	tablat,postinc1
  6577  00424A  0009               	tblrd		*+
  6578  00424C  CFF5 FFE6          	movff	tablat,postinc1
  6579  004250  0009               	tblrd		*+
  6580  004252  CFF5 FFE6          	movff	tablat,postinc1
  6581  004256  0009               	tblrd		*+
  6582  004258  CFF5 FFE6          	movff	tablat,postinc1
  6583  00425C  0E0A               	movlw	10
  6584  00425E  6EE6               	movwf	postinc1,c
  6585  004260  0E64               	movlw	100
  6586  004262  6EE6               	movwf	postinc1,c
  6587                           
  6588                           ;stkvar	fround@prec @ sp[(-6)+-1]
  6589  004264  0EF9               	movlw	-7
  6590  004266  50E3               	movf	plusw1,w,c
  6591  004268  6EE6               	movwf	postinc1,c
  6592  00426A  EC82  F02E         	call	___lbmod	;wreg free
  6593  00426E  5062               	movf	btemp^0,w,c
  6594  004270  6EE6               	movwf	postinc1,c
  6595  004272  EC05  F02D         	call	___lbdiv	;wreg free
  6596  004276  5062               	movf	btemp^0,w,c
  6597  004278  6E6C               	movwf	(btemp+10)^0,c
  6598  00427A  6A6D               	clrf	(btemp+11)^0,c
  6599  00427C  90D8               	bcf	status,0,c
  6600  00427E  366C               	rlcf	(btemp+10)^0,f,c
  6601  004280  366D               	rlcf	(btemp+11)^0,f,c
  6602  004282  90D8               	bcf	status,0,c
  6603  004284  366C               	rlcf	(btemp+10)^0,f,c
  6604  004286  366D               	rlcf	(btemp+11)^0,f,c
  6605  004288  0E24               	movlw	36
  6606  00428A  266C               	addwf	(btemp+10)^0,f,c
  6607  00428C  0E00               	movlw	0
  6608  00428E  226D               	addwfc	(btemp+11)^0,f,c
  6609  004290  0E35               	movlw	low __npowers_
  6610  004292  246C               	addwf	(btemp+10)^0,w,c
  6611  004294  6EF6               	movwf	tblptrl,c
  6612  004296  0E06               	movlw	high __npowers_
  6613  004298  206D               	addwfc	(btemp+11)^0,w,c
  6614  00429A  6EF7               	movwf	tblptrh,c
  6615  00429C                     	if	0	;There are less than 3 active tblptr bytes
  6616  00429C                     	endif
  6617  00429C  0009               	tblrd		*+
  6618  00429E  CFF5 FFE6          	movff	tablat,postinc1
  6619  0042A2  0009               	tblrd		*+
  6620  0042A4  CFF5 FFE6          	movff	tablat,postinc1
  6621  0042A8  0009               	tblrd		*+
  6622  0042AA  CFF5 FFE6          	movff	tablat,postinc1
  6623  0042AE  0009               	tblrd		*+
  6624  0042B0  CFF5 FFE6          	movff	tablat,postinc1
  6625  0042B4  0E00               	movlw	0
  6626  0042B6  6EE6               	movwf	postinc1,c
  6627  0042B8  0E00               	movlw	0
  6628  0042BA  6EE6               	movwf	postinc1,c
  6629  0042BC  0E00               	movlw	0
  6630  0042BE  6EE6               	movwf	postinc1,c
  6631  0042C0  0E3F               	movlw	63
  6632  0042C2  6EE6               	movwf	postinc1,c
  6633  0042C4  0E64               	movlw	100
  6634  0042C6  6EE6               	movwf	postinc1,c
  6635                           
  6636                           ;stkvar	fround@prec @ sp[(-13)+-1]
  6637  0042C8  0EF2               	movlw	-14
  6638  0042CA  50E3               	movf	plusw1,w,c
  6639  0042CC  6EE6               	movwf	postinc1,c
  6640  0042CE  EC05  F02D         	call	___lbdiv	;wreg free
  6641  0042D2  5062               	movf	btemp^0,w,c
  6642  0042D4  6E6C               	movwf	(btemp+10)^0,c
  6643  0042D6  6A6D               	clrf	(btemp+11)^0,c
  6644  0042D8  90D8               	bcf	status,0,c
  6645  0042DA  366C               	rlcf	(btemp+10)^0,f,c
  6646  0042DC  366D               	rlcf	(btemp+11)^0,f,c
  6647  0042DE  90D8               	bcf	status,0,c
  6648  0042E0  366C               	rlcf	(btemp+10)^0,f,c
  6649  0042E2  366D               	rlcf	(btemp+11)^0,f,c
  6650  0042E4  0E48               	movlw	72
  6651  0042E6  266C               	addwf	(btemp+10)^0,f,c
  6652  0042E8  0E00               	movlw	0
  6653  0042EA  226D               	addwfc	(btemp+11)^0,f,c
  6654  0042EC  0E35               	movlw	low __npowers_
  6655  0042EE  246C               	addwf	(btemp+10)^0,w,c
  6656  0042F0  6EF6               	movwf	tblptrl,c
  6657  0042F2  0E06               	movlw	high __npowers_
  6658  0042F4  206D               	addwfc	(btemp+11)^0,w,c
  6659  0042F6  6EF7               	movwf	tblptrh,c
  6660  0042F8                     	if	0	;There are less than 3 active tblptr bytes
  6661  0042F8                     	endif
  6662  0042F8  0009               	tblrd		*+
  6663  0042FA  CFF5 FFE6          	movff	tablat,postinc1
  6664  0042FE  0009               	tblrd		*+
  6665  004300  CFF5 FFE6          	movff	tablat,postinc1
  6666  004304  0009               	tblrd		*+
  6667  004306  CFF5 FFE6          	movff	tablat,postinc1
  6668  00430A  0009               	tblrd		*+
  6669  00430C  CFF5 FFE6          	movff	tablat,postinc1
  6670  004310  EC32  F011         	call	___flmul	;wreg free
  6671  004314  C062  FFE6         	movff	btemp,postinc1
  6672  004318  C063  FFE6         	movff	btemp+1,postinc1
  6673  00431C  C064  FFE6         	movff	btemp+2,postinc1
  6674  004320  C065  FFE6         	movff	btemp+3,postinc1
  6675  004324  EC32  F011         	call	___flmul	;wreg free
  6676  004328  C062  FFE6         	movff	btemp,postinc1
  6677  00432C  C063  FFE6         	movff	btemp+1,postinc1
  6678  004330  C064  FFE6         	movff	btemp+2,postinc1
  6679  004334  C065  FFE6         	movff	btemp+3,postinc1
  6680  004338  EC32  F011         	call	___flmul	;wreg free
  6681  00433C  EF28  F022         	goto	l445
  6682  004340                     l2104:
  6683                           
  6684                           ;doprnt.c: 423: else if(prec > 10)
  6685                           ;stkvar	fround@prec @ sp[(0)+-1]
  6686  004340  0EFF               	movlw	-1
  6687  004342  CFE3 F062          	movff	plusw1,btemp
  6688  004346  0E0A               	movlw	10
  6689  004348  6462               	cpfsgt	btemp^0,c
  6690  00434A  EFA9  F021         	goto	u103_21
  6691  00434E  EFAB  F021         	goto	u103_20
  6692  004352                     u103_21:
  6693  004352  EF09  F022         	goto	l2110
  6694  004356                     u103_20:
  6695  004356                     
  6696                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6697  004356  0E0A               	movlw	10
  6698  004358  6EE6               	movwf	postinc1,c
  6699                           
  6700                           ;stkvar	fround@prec @ sp[(-1)+-1]
  6701  00435A  0EFE               	movlw	-2
  6702  00435C  50E3               	movf	plusw1,w,c
  6703  00435E  6EE6               	movwf	postinc1,c
  6704  004360  EC82  F02E         	call	___lbmod	;wreg free
  6705  004364  5062               	movf	btemp^0,w,c
  6706  004366  6E6C               	movwf	(btemp+10)^0,c
  6707  004368  6A6D               	clrf	(btemp+11)^0,c
  6708  00436A  90D8               	bcf	status,0,c
  6709  00436C  366C               	rlcf	(btemp+10)^0,f,c
  6710  00436E  366D               	rlcf	(btemp+11)^0,f,c
  6711  004370  90D8               	bcf	status,0,c
  6712  004372  366C               	rlcf	(btemp+10)^0,f,c
  6713  004374  366D               	rlcf	(btemp+11)^0,f,c
  6714  004376  0E35               	movlw	low __npowers_
  6715  004378  246C               	addwf	(btemp+10)^0,w,c
  6716  00437A  6EF6               	movwf	tblptrl,c
  6717  00437C  0E06               	movlw	high __npowers_
  6718  00437E  206D               	addwfc	(btemp+11)^0,w,c
  6719  004380  6EF7               	movwf	tblptrh,c
  6720  004382                     	if	0	;There are less than 3 active tblptr bytes
  6721  004382                     	endif
  6722  004382  0009               	tblrd		*+
  6723  004384  CFF5 FFE6          	movff	tablat,postinc1
  6724  004388  0009               	tblrd		*+
  6725  00438A  CFF5 FFE6          	movff	tablat,postinc1
  6726  00438E  0009               	tblrd		*+
  6727  004390  CFF5 FFE6          	movff	tablat,postinc1
  6728  004394  0009               	tblrd		*+
  6729  004396  CFF5 FFE6          	movff	tablat,postinc1
  6730  00439A  0E00               	movlw	0
  6731  00439C  6EE6               	movwf	postinc1,c
  6732  00439E  0E00               	movlw	0
  6733  0043A0  6EE6               	movwf	postinc1,c
  6734  0043A2  0E00               	movlw	0
  6735  0043A4  6EE6               	movwf	postinc1,c
  6736  0043A6  0E3F               	movlw	63
  6737  0043A8  6EE6               	movwf	postinc1,c
  6738  0043AA  0E0A               	movlw	10
  6739  0043AC  6EE6               	movwf	postinc1,c
  6740                           
  6741                           ;stkvar	fround@prec @ sp[(-9)+-1]
  6742  0043AE  0EF6               	movlw	-10
  6743  0043B0  50E3               	movf	plusw1,w,c
  6744  0043B2  6EE6               	movwf	postinc1,c
  6745  0043B4  EC05  F02D         	call	___lbdiv	;wreg free
  6746  0043B8  5062               	movf	btemp^0,w,c
  6747  0043BA  6E6C               	movwf	(btemp+10)^0,c
  6748  0043BC  6A6D               	clrf	(btemp+11)^0,c
  6749  0043BE  90D8               	bcf	status,0,c
  6750  0043C0  366C               	rlcf	(btemp+10)^0,f,c
  6751  0043C2  366D               	rlcf	(btemp+11)^0,f,c
  6752  0043C4  90D8               	bcf	status,0,c
  6753  0043C6  366C               	rlcf	(btemp+10)^0,f,c
  6754  0043C8  366D               	rlcf	(btemp+11)^0,f,c
  6755  0043CA  0E24               	movlw	36
  6756  0043CC  266C               	addwf	(btemp+10)^0,f,c
  6757  0043CE  0E00               	movlw	0
  6758  0043D0  226D               	addwfc	(btemp+11)^0,f,c
  6759  0043D2  0E35               	movlw	low __npowers_
  6760  0043D4  246C               	addwf	(btemp+10)^0,w,c
  6761  0043D6  6EF6               	movwf	tblptrl,c
  6762  0043D8  0E06               	movlw	high __npowers_
  6763  0043DA  206D               	addwfc	(btemp+11)^0,w,c
  6764  0043DC  6EF7               	movwf	tblptrh,c
  6765  0043DE                     	if	0	;There are less than 3 active tblptr bytes
  6766  0043DE                     	endif
  6767  0043DE  0009               	tblrd		*+
  6768  0043E0  CFF5 FFE6          	movff	tablat,postinc1
  6769  0043E4  0009               	tblrd		*+
  6770  0043E6  CFF5 FFE6          	movff	tablat,postinc1
  6771  0043EA  0009               	tblrd		*+
  6772  0043EC  CFF5 FFE6          	movff	tablat,postinc1
  6773  0043F0  0009               	tblrd		*+
  6774  0043F2  CFF5 FFE6          	movff	tablat,postinc1
  6775  0043F6  EC32  F011         	call	___flmul	;wreg free
  6776  0043FA  C062  FFE6         	movff	btemp,postinc1
  6777  0043FE  C063  FFE6         	movff	btemp+1,postinc1
  6778  004402  C064  FFE6         	movff	btemp+2,postinc1
  6779  004406  C065  FFE6         	movff	btemp+3,postinc1
  6780  00440A  EC32  F011         	call	___flmul	;wreg free
  6781  00440E  EF28  F022         	goto	l445
  6782  004412                     l2110:
  6783                           
  6784                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  6785  004412  0E00               	movlw	0
  6786  004414  6EE6               	movwf	postinc1,c
  6787  004416  0E00               	movlw	0
  6788  004418  6EE6               	movwf	postinc1,c
  6789  00441A  0E00               	movlw	0
  6790  00441C  6EE6               	movwf	postinc1,c
  6791  00441E  0E3F               	movlw	63
  6792  004420  6EE6               	movwf	postinc1,c
  6793                           
  6794                           ;stkvar	fround@prec @ sp[(-4)+-1]
  6795  004422  0EFB               	movlw	-5
  6796  004424  50E3               	movf	plusw1,w,c
  6797  004426  0D04               	mullw	4
  6798  004428  0E35               	movlw	low __npowers_
  6799  00442A  24F3               	addwf	243,w,c
  6800  00442C  6EF6               	movwf	tblptrl,c
  6801  00442E  0E06               	movlw	high __npowers_
  6802  004430  20F4               	addwfc	244,w,c
  6803  004432  6EF7               	movwf	tblptrh,c
  6804  004434                     	if	0	;There are less than 3 active tblptr bytes
  6805  004434                     	endif
  6806  004434  0009               	tblrd		*+
  6807  004436  CFF5 FFE6          	movff	tablat,postinc1
  6808  00443A  0009               	tblrd		*+
  6809  00443C  CFF5 FFE6          	movff	tablat,postinc1
  6810  004440  0009               	tblrd		*+
  6811  004442  CFF5 FFE6          	movff	tablat,postinc1
  6812  004446  0009               	tblrd		*+
  6813  004448  CFF5 FFE6          	movff	tablat,postinc1
  6814  00444C  EC32  F011         	call	___flmul	;wreg free
  6815  004450                     l445:
  6816                           
  6817                           ; _fround: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsiz
      +                          e = 1, vargsize = 0
  6818  004450  52E5               	movf	postdec1,f,c
  6819  004452  0012               	return		;funcret
  6820  004454                     __end_of_fround:
  6821                           	opt callstack 0
  6822                           
  6823 ;; *************** function ___lbmod *****************
  6824 ;; Defined at:
  6825 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbmod.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;  dividend        1  [STACK] unsigned char 
  6828 ;;  divisor         1  [STACK] unsigned char 
  6829 ;; Auto vars:     Size  Location     Type
  6830 ;;  rem             1  [STACK] unsigned char 
  6831 ;;  counter         1  [STACK] unsigned char 
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  1  [STACK] unsigned char 
  6834 ;; Registers used:
  6835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6841 ;;      Params:         0       0       0       0       0       0       0
  6842 ;;      Locals:         0       0       0       0       0       0       0
  6843 ;;      Temps:          0       0       0       0       0       0       0
  6844 ;;      Totals:         0       0       0       0       0       0       0
  6845 ;;Total ram usage:        0 bytes
  6846 ;; Hardware stack levels used:    1
  6847 ;; Hardware stack levels required when called:    4
  6848 ;; This function calls:
  6849 ;;		Nothing
  6850 ;; This function is called by:
  6851 ;;		_fround
  6852 ;; This function uses a reentrant model
  6853 ;;
  6854                           
  6855                           	psect	text22
  6856  005D04                     __ptext22:
  6857                           	opt callstack 0
  6858  005D04                     ___lbmod:
  6859                           	opt callstack 0
  6860                           
  6861                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6862  005D04  52E6               	movf	postinc1,f,c
  6863  005D06  52E6               	movf	postinc1,f,c
  6864  005D08                     
  6865                           ;stkvar	___lbmod@counter @ sp[(-2)+1]
  6866  005D08  0EFF               	movlw	-1
  6867  005D0A  6AE3               	clrf	plusw1,c
  6868  005D0C  86E3               	bsf	plusw1,3,c
  6869  005D0E                     
  6870                           ;stkvar	___lbmod@rem @ sp[(-2)+0]
  6871  005D0E  0EFE               	movlw	-2
  6872  005D10  6AE3               	clrf	plusw1,c
  6873  005D12                     l2006:
  6874                           
  6875                           ;stkvar	___lbmod@dividend @ sp[(-2)+-1]
  6876  005D12  0EFD               	movlw	-3
  6877  005D14  CFE3 F06D          	movff	plusw1,btemp+11
  6878                           
  6879                           ;stkvar	___lbmod@rem @ sp[(-2)+0]
  6880  005D18  0EFE               	movlw	-2
  6881  005D1A  CFE3 F06C          	movff	plusw1,btemp+10
  6882  005D1E  90D8               	bcf	status,0,c
  6883  005D20  346D               	rlcf	(btemp+11)^0,w,c
  6884  005D22  346C               	rlcf	(btemp+10)^0,w,c
  6885  005D24  6E6D               	movwf	(btemp+11)^0,c
  6886                           
  6887                           ;stkvar	___lbmod@rem @ sp[(-2)+0]
  6888  005D26  0EFE               	movlw	-2
  6889  005D28  C06D  FFE3         	movff	btemp+11,plusw1
  6890  005D2C                     
  6891                           ;stkvar	___lbmod@dividend @ sp[(-2)+-1]
  6892  005D2C  50E1               	movf	fsr1l,w,c
  6893  005D2E  0FFD               	addlw	-3
  6894  005D30  6ED9               	movwf	fsr2l,c
  6895  005D32  50E2               	movf	fsr1h,w,c
  6896  005D34  6EDA               	movwf	fsr2h,c
  6897  005D36  0EFF               	movlw	255
  6898  005D38  22DA               	addwfc	fsr2h,f,c
  6899  005D3A  90D8               	bcf	status,0,c
  6900  005D3C  36DF               	rlcf	indf2,f,c
  6901  005D3E                     
  6902                           ;stkvar	___lbmod@divisor @ sp[(-2)+-2]
  6903                           ;stkvar	___lbmod@rem @ sp[(-2)+0]
  6904  005D3E  50E1               	movf	fsr1l,w,c
  6905  005D40  0FFE               	addlw	-2
  6906  005D42  6ED9               	movwf	fsr2l,c
  6907  005D44  50E2               	movf	fsr1h,w,c
  6908  005D46  6EDA               	movwf	fsr2h,c
  6909  005D48  0EFF               	movlw	255
  6910  005D4A  22DA               	addwfc	fsr2h,f,c
  6911  005D4C  0EFC               	movlw	-4
  6912  005D4E  50E3               	movf	plusw1,w,c
  6913  005D50  5CDE               	subwf	postinc2,w,c
  6914  005D52  A0D8               	btfss	status,0,c
  6915  005D54  EFAE  F02E         	goto	u98_21
  6916  005D58  EFB0  F02E         	goto	u98_20
  6917  005D5C                     u98_21:
  6918  005D5C  EFBC  F02E         	goto	l2014
  6919  005D60                     u98_20:
  6920  005D60                     
  6921                           ;stkvar	___lbmod@divisor @ sp[(-2)+-2]
  6922  005D60  0EFC               	movlw	-4
  6923  005D62  CFE3 F06D          	movff	plusw1,btemp+11
  6924                           
  6925                           ;stkvar	___lbmod@rem @ sp[(-2)+0]
  6926  005D66  50E1               	movf	fsr1l,w,c
  6927  005D68  0FFE               	addlw	-2
  6928  005D6A  6ED9               	movwf	fsr2l,c
  6929  005D6C  50E2               	movf	fsr1h,w,c
  6930  005D6E  6EDA               	movwf	fsr2h,c
  6931  005D70  0EFF               	movlw	255
  6932  005D72  22DA               	addwfc	fsr2h,f,c
  6933  005D74  506D               	movf	(btemp+11)^0,w,c
  6934  005D76  5EDF               	subwf	indf2,f,c
  6935  005D78                     l2014:
  6936                           
  6937                           ;stkvar	___lbmod@counter @ sp[(-2)+1]
  6938  005D78  0EFF               	movlw	-1
  6939  005D7A  50E3               	movf	plusw1,w,c
  6940  005D7C  6E62               	movwf	btemp^0,c
  6941  005D7E  0E01               	movlw	1
  6942  005D80  5E62               	subwf	btemp^0,f,c
  6943  005D82  0EFF               	movlw	-1
  6944  005D84  C062  FFE3         	movff	btemp,plusw1
  6945  005D88  A4D8               	btfss	status,2,c
  6946  005D8A  EFC9  F02E         	goto	u99_21
  6947  005D8E  EFCB  F02E         	goto	u99_20
  6948  005D92                     u99_21:
  6949  005D92  EF89  F02E         	goto	l2006
  6950  005D96                     u99_20:
  6951  005D96                     
  6952                           ;stkvar	___lbmod@rem @ sp[(-2)+0]
  6953  005D96  0EFE               	movlw	-2
  6954  005D98  CFE3 F062          	movff	plusw1,btemp
  6955  005D9C                     
  6956                           ; ___lbmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6957  005D9C  52E5               	movf	postdec1,f,c
  6958  005D9E  52E5               	movf	postdec1,f,c
  6959  005DA0  52E5               	movf	postdec1,f,c
  6960  005DA2  52E5               	movf	postdec1,f,c
  6961  005DA4  0012               	return		;funcret
  6962  005DA6                     __end_of___lbmod:
  6963                           	opt callstack 0
  6964                           
  6965 ;; *************** function ___lbdiv *****************
  6966 ;; Defined at:
  6967 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbdiv.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;  dividend        1  [STACK] unsigned char 
  6970 ;;  divisor         1  [STACK] unsigned char 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  quotient        1  [STACK] unsigned char 
  6973 ;;  counter         1  [STACK] unsigned char 
  6974 ;; Return value:  Size  Location     Type
  6975 ;;                  1  [STACK] unsigned char 
  6976 ;; Registers used:
  6977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6983 ;;      Params:         0       0       0       0       0       0       0
  6984 ;;      Locals:         0       0       0       0       0       0       0
  6985 ;;      Temps:          0       0       0       0       0       0       0
  6986 ;;      Totals:         0       0       0       0       0       0       0
  6987 ;;Total ram usage:        0 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; Hardware stack levels required when called:    4
  6990 ;; This function calls:
  6991 ;;		Nothing
  6992 ;; This function is called by:
  6993 ;;		_fround
  6994 ;; This function uses a reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text23
  6998  005A0A                     __ptext23:
  6999                           	opt callstack 0
  7000  005A0A                     ___lbdiv:
  7001                           	opt callstack 0
  7002                           
  7003                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7004  005A0A  52E6               	movf	postinc1,f,c
  7005  005A0C  52E6               	movf	postinc1,f,c
  7006  005A0E                     
  7007                           ;stkvar	___lbdiv@quotient @ sp[(-2)+0]
  7008  005A0E  0EFE               	movlw	-2
  7009  005A10  6AE3               	clrf	plusw1,c
  7010                           
  7011                           ;stkvar	___lbdiv@divisor @ sp[(-2)+-2]
  7012  005A12  0EFC               	movlw	-4
  7013  005A14  50E3               	movf	plusw1,w,c
  7014  005A16  B4D8               	btfsc	status,2,c
  7015  005A18  EF10  F02D         	goto	u94_21
  7016  005A1C  EF12  F02D         	goto	u94_20
  7017  005A20                     u94_21:
  7018  005A20  EF6A  F02D         	goto	l1998
  7019  005A24                     u94_20:
  7020  005A24                     
  7021                           ;stkvar	___lbdiv@counter @ sp[(-2)+1]
  7022  005A24  0EFF               	movlw	-1
  7023  005A26  6AE3               	clrf	plusw1,c
  7024  005A28  2AE3               	incf	plusw1,f,c
  7025  005A2A  EF22  F02D         	goto	l1984
  7026  005A2E                     l1980:
  7027                           
  7028                           ;stkvar	___lbdiv@divisor @ sp[(-2)+-2]
  7029  005A2E  50E1               	movf	fsr1l,w,c
  7030  005A30  0FFC               	addlw	-4
  7031  005A32  6ED9               	movwf	fsr2l,c
  7032  005A34  50E2               	movf	fsr1h,w,c
  7033  005A36  6EDA               	movwf	fsr2h,c
  7034  005A38  0EFF               	movlw	255
  7035  005A3A  22DA               	addwfc	fsr2h,f,c
  7036  005A3C  90D8               	bcf	status,0,c
  7037  005A3E  36DF               	rlcf	indf2,f,c
  7038  005A40                     
  7039                           ;stkvar	___lbdiv@counter @ sp[(-2)+1]
  7040  005A40  0EFF               	movlw	-1
  7041  005A42  2AE3               	incf	plusw1,f,c
  7042  005A44                     l1984:
  7043                           
  7044                           ;stkvar	___lbdiv@divisor @ sp[(-2)+-2]
  7045  005A44  0EFC               	movlw	-4
  7046  005A46  AEE3               	btfss	plusw1,7,c
  7047  005A48  EF28  F02D         	goto	u95_21
  7048  005A4C  EF2A  F02D         	goto	u95_20
  7049  005A50                     u95_21:
  7050  005A50  EF17  F02D         	goto	l1980
  7051  005A54                     u95_20:
  7052  005A54                     l1986:
  7053                           
  7054                           ;stkvar	___lbdiv@quotient @ sp[(-2)+0]
  7055  005A54  50E1               	movf	fsr1l,w,c
  7056  005A56  0FFE               	addlw	-2
  7057  005A58  6ED9               	movwf	fsr2l,c
  7058  005A5A  50E2               	movf	fsr1h,w,c
  7059  005A5C  6EDA               	movwf	fsr2h,c
  7060  005A5E  0EFF               	movlw	255
  7061  005A60  22DA               	addwfc	fsr2h,f,c
  7062  005A62  90D8               	bcf	status,0,c
  7063  005A64  36DF               	rlcf	indf2,f,c
  7064  005A66                     
  7065                           ;stkvar	___lbdiv@divisor @ sp[(-2)+-2]
  7066                           ;stkvar	___lbdiv@dividend @ sp[(-2)+-1]
  7067  005A66  50E1               	movf	fsr1l,w,c
  7068  005A68  0FFD               	addlw	-3
  7069  005A6A  6ED9               	movwf	fsr2l,c
  7070  005A6C  50E2               	movf	fsr1h,w,c
  7071  005A6E  6EDA               	movwf	fsr2h,c
  7072  005A70  0EFF               	movlw	255
  7073  005A72  22DA               	addwfc	fsr2h,f,c
  7074  005A74  0EFC               	movlw	-4
  7075  005A76  50E3               	movf	plusw1,w,c
  7076  005A78  5CDE               	subwf	postinc2,w,c
  7077  005A7A  A0D8               	btfss	status,0,c
  7078  005A7C  EF42  F02D         	goto	u96_21
  7079  005A80  EF44  F02D         	goto	u96_20
  7080  005A84                     u96_21:
  7081  005A84  EF52  F02D         	goto	l1994
  7082  005A88                     u96_20:
  7083  005A88                     
  7084                           ;stkvar	___lbdiv@divisor @ sp[(-2)+-2]
  7085  005A88  0EFC               	movlw	-4
  7086  005A8A  CFE3 F06D          	movff	plusw1,btemp+11
  7087                           
  7088                           ;stkvar	___lbdiv@dividend @ sp[(-2)+-1]
  7089  005A8E  50E1               	movf	fsr1l,w,c
  7090  005A90  0FFD               	addlw	-3
  7091  005A92  6ED9               	movwf	fsr2l,c
  7092  005A94  50E2               	movf	fsr1h,w,c
  7093  005A96  6EDA               	movwf	fsr2h,c
  7094  005A98  0EFF               	movlw	255
  7095  005A9A  22DA               	addwfc	fsr2h,f,c
  7096  005A9C  506D               	movf	(btemp+11)^0,w,c
  7097  005A9E  5EDF               	subwf	indf2,f,c
  7098  005AA0                     
  7099                           ;stkvar	___lbdiv@quotient @ sp[(-2)+0]
  7100  005AA0  0EFE               	movlw	-2
  7101  005AA2  80E3               	bsf	plusw1,0,c
  7102  005AA4                     l1994:
  7103                           
  7104                           ;stkvar	___lbdiv@divisor @ sp[(-2)+-2]
  7105  005AA4  50E1               	movf	fsr1l,w,c
  7106  005AA6  0FFC               	addlw	-4
  7107  005AA8  6ED9               	movwf	fsr2l,c
  7108  005AAA  50E2               	movf	fsr1h,w,c
  7109  005AAC  6EDA               	movwf	fsr2h,c
  7110  005AAE  0EFF               	movlw	255
  7111  005AB0  22DA               	addwfc	fsr2h,f,c
  7112  005AB2  90D8               	bcf	status,0,c
  7113  005AB4  32DF               	rrcf	indf2,f,c
  7114  005AB6                     
  7115                           ;stkvar	___lbdiv@counter @ sp[(-2)+1]
  7116  005AB6  0EFF               	movlw	-1
  7117  005AB8  50E3               	movf	plusw1,w,c
  7118  005ABA  6E62               	movwf	btemp^0,c
  7119  005ABC  0E01               	movlw	1
  7120  005ABE  5E62               	subwf	btemp^0,f,c
  7121  005AC0  0EFF               	movlw	-1
  7122  005AC2  C062  FFE3         	movff	btemp,plusw1
  7123  005AC6  A4D8               	btfss	status,2,c
  7124  005AC8  EF68  F02D         	goto	u97_21
  7125  005ACC  EF6A  F02D         	goto	u97_20
  7126  005AD0                     u97_21:
  7127  005AD0  EF2A  F02D         	goto	l1986
  7128  005AD4                     u97_20:
  7129  005AD4                     l1998:
  7130                           
  7131                           ;stkvar	___lbdiv@quotient @ sp[(-2)+0]
  7132  005AD4  0EFE               	movlw	-2
  7133  005AD6  CFE3 F062          	movff	plusw1,btemp
  7134  005ADA                     
  7135                           ; ___lbdiv: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  7136  005ADA  52E5               	movf	postdec1,f,c
  7137  005ADC  52E5               	movf	postdec1,f,c
  7138  005ADE  52E5               	movf	postdec1,f,c
  7139  005AE0  52E5               	movf	postdec1,f,c
  7140  005AE2  0012               	return		;funcret
  7141  005AE4                     __end_of___lbdiv:
  7142                           	opt callstack 0
  7143                           
  7144 ;; *************** function ___flmul *****************
  7145 ;; Defined at:
  7146 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  7147 ;; Parameters:    Size  Location     Type
  7148 ;;  b               4  [STACK] unsigned char 
  7149 ;;  a               4  [STACK] unsigned char 
  7150 ;; Auto vars:     Size  Location     Type
  7151 ;;  prod            4  [STACK] struct .
  7152 ;;  grs             4  [STACK] unsigned long 
  7153 ;;  temp            2  [STACK] struct .
  7154 ;;  bexp            1  [STACK] unsigned char 
  7155 ;;  aexp            1  [STACK] unsigned char 
  7156 ;;  sign            1  [STACK] unsigned char 
  7157 ;; Return value:  Size  Location     Type
  7158 ;;                  4  [STACK] unsigned char 
  7159 ;; Registers used:
  7160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7161 ;; Tracked objects:
  7162 ;;		On entry : 0/0
  7163 ;;		On exit  : 0/0
  7164 ;;		Unchanged: 0/0
  7165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7166 ;;      Params:         0       0       0       0       0       0       0
  7167 ;;      Locals:         0       0       0       0       0       0       0
  7168 ;;      Temps:          0       0       0       0       0       0       0
  7169 ;;      Totals:         0       0       0       0       0       0       0
  7170 ;;Total ram usage:        0 bytes
  7171 ;; Hardware stack levels used:    1
  7172 ;; Hardware stack levels required when called:    4
  7173 ;; This function calls:
  7174 ;;		Nothing
  7175 ;; This function is called by:
  7176 ;;		_task_lcd
  7177 ;;		_fround
  7178 ;;		_scale
  7179 ;;		_sprintf
  7180 ;; This function uses a reentrant model
  7181 ;;
  7182                           
  7183                           	psect	text24
  7184  002264                     __ptext24:
  7185                           	opt callstack 0
  7186  002264                     ___flmul:
  7187                           	opt callstack 0
  7188                           
  7189                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7190  002264  0E0D               	movlw	13
  7191  002266  26E1               	addwf	fsr1l,f,c
  7192  002268  0E00               	movlw	0
  7193  00226A  22E2               	addwfc	fsr1h,f,c
  7194  00226C                     
  7195                           ;stkvar	___flmul@b @ sp[(-13)+-4]
  7196  00226C  0EF2               	movlw	242
  7197  00226E  24E1               	addwf	fsr1l,w,c
  7198  002270  6ED9               	movwf	fsr2l,c
  7199  002272  0EFF               	movlw	255
  7200  002274  20E2               	addwfc	fsr1h,w,c
  7201  002276  6EDA               	movwf	fsr2h,c
  7202  002278  50DF               	movf	indf2,w,c
  7203  00227A  6E6D               	movwf	(btemp+11)^0,c
  7204  00227C  0E80               	movlw	128
  7205  00227E  166D               	andwf	(btemp+11)^0,f,c
  7206                           
  7207                           ;stkvar	___flmul@sign @ sp[(-13)+12]
  7208  002280  0EFF               	movlw	-1
  7209  002282  C06D  FFE3         	movff	btemp+11,plusw1
  7210  002286                     
  7211                           ;stkvar	___flmul@b @ sp[(-13)+-4]
  7212  002286  0EF2               	movlw	242
  7213  002288  24E1               	addwf	fsr1l,w,c
  7214  00228A  6ED9               	movwf	fsr2l,c
  7215  00228C  0EFF               	movlw	255
  7216  00228E  20E2               	addwfc	fsr1h,w,c
  7217  002290  6EDA               	movwf	fsr2h,c
  7218  002292  50DF               	movf	indf2,w,c
  7219  002294  6E6D               	movwf	(btemp+11)^0,c
  7220  002296  90D8               	bcf	status,0,c
  7221  002298  346D               	rlcf	(btemp+11)^0,w,c
  7222  00229A  6E6C               	movwf	(btemp+10)^0,c
  7223                           
  7224                           ;stkvar	___flmul@bexp @ sp[(-13)+10]
  7225  00229C  0EFD               	movlw	-3
  7226  00229E  C06C  FFE3         	movff	btemp+10,plusw1
  7227  0022A2                     
  7228                           ;stkvar	___flmul@b @ sp[(-13)+-4]
  7229  0022A2  0EF1               	movlw	241
  7230  0022A4  24E1               	addwf	fsr1l,w,c
  7231  0022A6  6ED9               	movwf	fsr2l,c
  7232  0022A8  0EFF               	movlw	255
  7233  0022AA  20E2               	addwfc	fsr1h,w,c
  7234  0022AC  6EDA               	movwf	fsr2h,c
  7235  0022AE  AEDF               	btfss	indf2,7,c
  7236  0022B0  EF5C  F011         	goto	u58_21
  7237  0022B4  EF5E  F011         	goto	u58_20
  7238  0022B8                     u58_21:
  7239  0022B8  EF60  F011         	goto	l1744
  7240  0022BC                     u58_20:
  7241  0022BC                     
  7242                           ;stkvar	___flmul@bexp @ sp[(-13)+10]
  7243  0022BC  0EFD               	movlw	-3
  7244  0022BE  80E3               	bsf	plusw1,0,c
  7245  0022C0                     l1744:
  7246                           
  7247                           ;stkvar	___flmul@bexp @ sp[(-13)+10]
  7248  0022C0  0EFD               	movlw	-3
  7249  0022C2  50E3               	movf	plusw1,w,c
  7250  0022C4  B4D8               	btfsc	status,2,c
  7251  0022C6  EF67  F011         	goto	u59_21
  7252  0022CA  EF69  F011         	goto	u59_20
  7253  0022CE                     u59_21:
  7254  0022CE  EF8A  F011         	goto	l1752
  7255  0022D2                     u59_20:
  7256  0022D2                     
  7257                           ;stkvar	___flmul@bexp @ sp[(-13)+10]
  7258  0022D2  0EFD               	movlw	-3
  7259  0022D4  28E3               	incf	plusw1,w,c
  7260  0022D6  A4D8               	btfss	status,2,c
  7261  0022D8  EF70  F011         	goto	u60_21
  7262  0022DC  EF72  F011         	goto	u60_20
  7263  0022E0                     u60_21:
  7264  0022E0  EF86  F011         	goto	l1750
  7265  0022E4                     u60_20:
  7266  0022E4  0E00               	movlw	0
  7267  0022E6  6E6A               	movwf	(btemp+8)^0,c
  7268  0022E8  0E00               	movlw	0
  7269  0022EA  6E6B               	movwf	(btemp+9)^0,c
  7270  0022EC  0E00               	movlw	0
  7271  0022EE  6E6C               	movwf	(btemp+10)^0,c
  7272  0022F0  0E00               	movlw	0
  7273  0022F2  6E6D               	movwf	(btemp+11)^0,c
  7274                           
  7275                           ;stkvar	___flmul@b @ sp[(-13)+-4]
  7276  0022F4  0EEF               	movlw	-17
  7277  0022F6  C06A  FFE3         	movff	btemp+8,plusw1
  7278  0022FA  0EF0               	movlw	-16
  7279  0022FC  C06B  FFE3         	movff	btemp+9,plusw1
  7280  002300  0EF1               	movlw	-15
  7281  002302  C06C  FFE3         	movff	btemp+10,plusw1
  7282  002306  0EF2               	movlw	-14
  7283  002308  C06D  FFE3         	movff	btemp+11,plusw1
  7284  00230C                     l1750:
  7285                           
  7286                           ;stkvar	___flmul@b @ sp[(-13)+-4]
  7287  00230C  0EF1               	movlw	-15
  7288  00230E  8EE3               	bsf	plusw1,7,c
  7289  002310  EF9E  F011         	goto	l1754
  7290  002314                     l1752:
  7291  002314  0E00               	movlw	0
  7292  002316  6E6A               	movwf	(btemp+8)^0,c
  7293  002318  0E00               	movlw	0
  7294  00231A  6E6B               	movwf	(btemp+9)^0,c
  7295  00231C  0E00               	movlw	0
  7296  00231E  6E6C               	movwf	(btemp+10)^0,c
  7297  002320  0E00               	movlw	0
  7298  002322  6E6D               	movwf	(btemp+11)^0,c
  7299                           
  7300                           ;stkvar	___flmul@b @ sp[(-13)+-4]
  7301  002324  0EEF               	movlw	-17
  7302  002326  C06A  FFE3         	movff	btemp+8,plusw1
  7303  00232A  0EF0               	movlw	-16
  7304  00232C  C06B  FFE3         	movff	btemp+9,plusw1
  7305  002330  0EF1               	movlw	-15
  7306  002332  C06C  FFE3         	movff	btemp+10,plusw1
  7307  002336  0EF2               	movlw	-14
  7308  002338  C06D  FFE3         	movff	btemp+11,plusw1
  7309  00233C                     l1754:
  7310                           
  7311                           ;stkvar	___flmul@a @ sp[(-13)+-8]
  7312  00233C  0EEE               	movlw	238
  7313  00233E  24E1               	addwf	fsr1l,w,c
  7314  002340  6ED9               	movwf	fsr2l,c
  7315  002342  0EFF               	movlw	255
  7316  002344  20E2               	addwfc	fsr1h,w,c
  7317  002346  6EDA               	movwf	fsr2h,c
  7318  002348  50DF               	movf	indf2,w,c
  7319  00234A  6E6D               	movwf	(btemp+11)^0,c
  7320  00234C  0E80               	movlw	128
  7321  00234E  166D               	andwf	(btemp+11)^0,f,c
  7322                           
  7323                           ;stkvar	___flmul@sign @ sp[(-13)+12]
  7324  002350  50E1               	movf	fsr1l,w,c
  7325  002352  0FFF               	addlw	-1
  7326  002354  6ED9               	movwf	fsr2l,c
  7327  002356  50E2               	movf	fsr1h,w,c
  7328  002358  6EDA               	movwf	fsr2h,c
  7329  00235A  0EFF               	movlw	255
  7330  00235C  22DA               	addwfc	fsr2h,f,c
  7331  00235E  506D               	movf	(btemp+11)^0,w,c
  7332  002360  1ADF               	xorwf	indf2,f,c
  7333  002362                     
  7334                           ;stkvar	___flmul@a @ sp[(-13)+-8]
  7335  002362  0EEE               	movlw	238
  7336  002364  24E1               	addwf	fsr1l,w,c
  7337  002366  6ED9               	movwf	fsr2l,c
  7338  002368  0EFF               	movlw	255
  7339  00236A  20E2               	addwfc	fsr1h,w,c
  7340  00236C  6EDA               	movwf	fsr2h,c
  7341  00236E  50DF               	movf	indf2,w,c
  7342  002370  6E6D               	movwf	(btemp+11)^0,c
  7343  002372  90D8               	bcf	status,0,c
  7344  002374  346D               	rlcf	(btemp+11)^0,w,c
  7345  002376  6E6C               	movwf	(btemp+10)^0,c
  7346                           
  7347                           ;stkvar	___flmul@aexp @ sp[(-13)+11]
  7348  002378  0EFE               	movlw	-2
  7349  00237A  C06C  FFE3         	movff	btemp+10,plusw1
  7350  00237E                     
  7351                           ;stkvar	___flmul@a @ sp[(-13)+-8]
  7352  00237E  0EED               	movlw	237
  7353  002380  24E1               	addwf	fsr1l,w,c
  7354  002382  6ED9               	movwf	fsr2l,c
  7355  002384  0EFF               	movlw	255
  7356  002386  20E2               	addwfc	fsr1h,w,c
  7357  002388  6EDA               	movwf	fsr2h,c
  7358  00238A  AEDF               	btfss	indf2,7,c
  7359  00238C  EFCA  F011         	goto	u61_21
  7360  002390  EFCC  F011         	goto	u61_20
  7361  002394                     u61_21:
  7362  002394  EFCE  F011         	goto	l1762
  7363  002398                     u61_20:
  7364  002398                     
  7365                           ;stkvar	___flmul@aexp @ sp[(-13)+11]
  7366  002398  0EFE               	movlw	-2
  7367  00239A  80E3               	bsf	plusw1,0,c
  7368  00239C                     l1762:
  7369                           
  7370                           ;stkvar	___flmul@aexp @ sp[(-13)+11]
  7371  00239C  0EFE               	movlw	-2
  7372  00239E  50E3               	movf	plusw1,w,c
  7373  0023A0  B4D8               	btfsc	status,2,c
  7374  0023A2  EFD5  F011         	goto	u62_21
  7375  0023A6  EFD7  F011         	goto	u62_20
  7376  0023AA                     u62_21:
  7377  0023AA  EFF8  F011         	goto	l1770
  7378  0023AE                     u62_20:
  7379  0023AE                     
  7380                           ;stkvar	___flmul@aexp @ sp[(-13)+11]
  7381  0023AE  0EFE               	movlw	-2
  7382  0023B0  28E3               	incf	plusw1,w,c
  7383  0023B2  A4D8               	btfss	status,2,c
  7384  0023B4  EFDE  F011         	goto	u63_21
  7385  0023B8  EFE0  F011         	goto	u63_20
  7386  0023BC                     u63_21:
  7387  0023BC  EFF4  F011         	goto	l1768
  7388  0023C0                     u63_20:
  7389  0023C0  0E00               	movlw	0
  7390  0023C2  6E6A               	movwf	(btemp+8)^0,c
  7391  0023C4  0E00               	movlw	0
  7392  0023C6  6E6B               	movwf	(btemp+9)^0,c
  7393  0023C8  0E00               	movlw	0
  7394  0023CA  6E6C               	movwf	(btemp+10)^0,c
  7395  0023CC  0E00               	movlw	0
  7396  0023CE  6E6D               	movwf	(btemp+11)^0,c
  7397                           
  7398                           ;stkvar	___flmul@a @ sp[(-13)+-8]
  7399  0023D0  0EEB               	movlw	-21
  7400  0023D2  C06A  FFE3         	movff	btemp+8,plusw1
  7401  0023D6  0EEC               	movlw	-20
  7402  0023D8  C06B  FFE3         	movff	btemp+9,plusw1
  7403  0023DC  0EED               	movlw	-19
  7404  0023DE  C06C  FFE3         	movff	btemp+10,plusw1
  7405  0023E2  0EEE               	movlw	-18
  7406  0023E4  C06D  FFE3         	movff	btemp+11,plusw1
  7407  0023E8                     l1768:
  7408                           
  7409                           ;stkvar	___flmul@a @ sp[(-13)+-8]
  7410  0023E8  0EED               	movlw	-19
  7411  0023EA  8EE3               	bsf	plusw1,7,c
  7412  0023EC  EF0C  F012         	goto	l1772
  7413  0023F0                     l1770:
  7414  0023F0  0E00               	movlw	0
  7415  0023F2  6E6A               	movwf	(btemp+8)^0,c
  7416  0023F4  0E00               	movlw	0
  7417  0023F6  6E6B               	movwf	(btemp+9)^0,c
  7418  0023F8  0E00               	movlw	0
  7419  0023FA  6E6C               	movwf	(btemp+10)^0,c
  7420  0023FC  0E00               	movlw	0
  7421  0023FE  6E6D               	movwf	(btemp+11)^0,c
  7422                           
  7423                           ;stkvar	___flmul@a @ sp[(-13)+-8]
  7424  002400  0EEB               	movlw	-21
  7425  002402  C06A  FFE3         	movff	btemp+8,plusw1
  7426  002406  0EEC               	movlw	-20
  7427  002408  C06B  FFE3         	movff	btemp+9,plusw1
  7428  00240C  0EED               	movlw	-19
  7429  00240E  C06C  FFE3         	movff	btemp+10,plusw1
  7430  002412  0EEE               	movlw	-18
  7431  002414  C06D  FFE3         	movff	btemp+11,plusw1
  7432  002418                     l1772:
  7433                           
  7434                           ;stkvar	___flmul@aexp @ sp[(-13)+11]
  7435  002418  0EFE               	movlw	-2
  7436  00241A  50E3               	movf	plusw1,w,c
  7437  00241C  B4D8               	btfsc	status,2,c
  7438  00241E  EF13  F012         	goto	u64_21
  7439  002422  EF15  F012         	goto	u64_20
  7440  002426                     u64_21:
  7441  002426  EF1E  F012         	goto	l1776
  7442  00242A                     u64_20:
  7443  00242A                     
  7444                           ;stkvar	___flmul@bexp @ sp[(-13)+10]
  7445  00242A  0EFD               	movlw	-3
  7446  00242C  50E3               	movf	plusw1,w,c
  7447  00242E  A4D8               	btfss	status,2,c
  7448  002430  EF1C  F012         	goto	u65_21
  7449  002434  EF1E  F012         	goto	u65_20
  7450  002438                     u65_21:
  7451  002438  EF28  F012         	goto	l1780
  7452  00243C                     u65_20:
  7453  00243C                     l1776:
  7454  00243C  0E00               	movlw	0
  7455  00243E  6E62               	movwf	btemp^0,c
  7456  002440  0E00               	movlw	0
  7457  002442  6E63               	movwf	(btemp+1)^0,c
  7458  002444  0E00               	movlw	0
  7459  002446  6E64               	movwf	(btemp+2)^0,c
  7460  002448  0E00               	movlw	0
  7461  00244A  6E65               	movwf	(btemp+3)^0,c
  7462  00244C  EF5A  F015         	goto	l1196
  7463  002450                     l1780:
  7464                           
  7465                           ;stkvar	___flmul@b @ sp[(-13)+-4]
  7466  002450  0EEF               	movlw	-17
  7467  002452  CFE3 F06D          	movff	plusw1,btemp+11
  7468                           
  7469                           ;stkvar	___flmul@a @ sp[(-13)+-8]
  7470  002456  0EED               	movlw	237
  7471  002458  24E1               	addwf	fsr1l,w,c
  7472  00245A  6ED9               	movwf	fsr2l,c
  7473  00245C  0EFF               	movlw	255
  7474  00245E  20E2               	addwfc	fsr1h,w,c
  7475  002460  6EDA               	movwf	fsr2h,c
  7476  002462  50DF               	movf	indf2,w,c
  7477  002464  026D               	mulwf	(btemp+11)^0,c
  7478                           
  7479                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7480  002466  0EFB               	movlw	-5
  7481  002468  CFF3 FFE3          	movff	prodl,plusw1
  7482  00246C  0EFC               	movlw	-4
  7483  00246E  CFF4 FFE3          	movff	prodh,plusw1
  7484  002472                     
  7485                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7486  002472  0EFB               	movlw	-5
  7487  002474  CFE3 F06D          	movff	plusw1,btemp+11
  7488  002478  C06D  F066         	movff	btemp+11,btemp+4
  7489  00247C  6A67               	clrf	(btemp+5)^0,c
  7490  00247E  6A68               	clrf	(btemp+6)^0,c
  7491  002480  6A69               	clrf	(btemp+7)^0,c
  7492                           
  7493                           ;stkvar	___flmul@grs @ sp[(-13)+4]
  7494  002482  0EF7               	movlw	-9
  7495  002484  C066  FFE3         	movff	btemp+4,plusw1
  7496  002488  0EF8               	movlw	-8
  7497  00248A  C067  FFE3         	movff	btemp+5,plusw1
  7498  00248E  0EF9               	movlw	-7
  7499  002490  C068  FFE3         	movff	btemp+6,plusw1
  7500  002494  0EFA               	movlw	-6
  7501  002496  C069  FFE3         	movff	btemp+7,plusw1
  7502  00249A                     
  7503                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7504  00249A  0EFC               	movlw	252
  7505  00249C  24E1               	addwf	fsr1l,w,c
  7506  00249E  6ED9               	movwf	fsr2l,c
  7507  0024A0  0EFF               	movlw	255
  7508  0024A2  20E2               	addwfc	fsr1h,w,c
  7509  0024A4  6EDA               	movwf	fsr2h,c
  7510  0024A6  50DF               	movf	indf2,w,c
  7511  0024A8  6E6D               	movwf	(btemp+11)^0,c
  7512  0024AA  C06D  F066         	movff	btemp+11,btemp+4
  7513  0024AE  6A67               	clrf	(btemp+5)^0,c
  7514  0024B0  6A68               	clrf	(btemp+6)^0,c
  7515  0024B2  6A69               	clrf	(btemp+7)^0,c
  7516                           
  7517                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  7518  0024B4  0EF3               	movlw	-13
  7519  0024B6  C066  FFE3         	movff	btemp+4,plusw1
  7520  0024BA  0EF4               	movlw	-12
  7521  0024BC  C067  FFE3         	movff	btemp+5,plusw1
  7522  0024C0  0EF5               	movlw	-11
  7523  0024C2  C068  FFE3         	movff	btemp+6,plusw1
  7524  0024C6  0EF6               	movlw	-10
  7525  0024C8  C069  FFE3         	movff	btemp+7,plusw1
  7526  0024CC                     
  7527                           ;stkvar	___flmul@b @ sp[(-13)+-4]
  7528  0024CC  0EF0               	movlw	240
  7529  0024CE  24E1               	addwf	fsr1l,w,c
  7530  0024D0  6ED9               	movwf	fsr2l,c
  7531  0024D2  0EFF               	movlw	255
  7532  0024D4  20E2               	addwfc	fsr1h,w,c
  7533  0024D6  6EDA               	movwf	fsr2h,c
  7534  0024D8  50DF               	movf	indf2,w,c
  7535  0024DA  6E6D               	movwf	(btemp+11)^0,c
  7536                           
  7537                           ;stkvar	___flmul@a @ sp[(-13)+-8]
  7538  0024DC  0EEC               	movlw	236
  7539  0024DE  24E1               	addwf	fsr1l,w,c
  7540  0024E0  6ED9               	movwf	fsr2l,c
  7541  0024E2  0EFF               	movlw	255
  7542  0024E4  20E2               	addwfc	fsr1h,w,c
  7543  0024E6  6EDA               	movwf	fsr2h,c
  7544  0024E8  50DF               	movf	indf2,w,c
  7545  0024EA  026D               	mulwf	(btemp+11)^0,c
  7546                           
  7547                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7548  0024EC  0EFB               	movlw	-5
  7549  0024EE  CFF3 FFE3          	movff	prodl,plusw1
  7550  0024F2  0EFC               	movlw	-4
  7551  0024F4  CFF4 FFE3          	movff	prodh,plusw1
  7552  0024F8                     
  7553                           ;stkvar	___flmul@grs @ sp[(-13)+4]
  7554  0024F8  50E1               	movf	fsr1l,w,c
  7555  0024FA  0FF7               	addlw	-9
  7556  0024FC  6ED9               	movwf	fsr2l,c
  7557  0024FE  50E2               	movf	fsr1h,w,c
  7558  002500  6EDA               	movwf	fsr2h,c
  7559  002502  0EFF               	movlw	255
  7560  002504  22DA               	addwfc	fsr2h,f,c
  7561                           
  7562                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7563  002506  0EFB               	movlw	-5
  7564  002508  50E3               	movf	plusw1,w,c
  7565  00250A  26DE               	addwf	postinc2,f,c
  7566  00250C  0E00               	movlw	0
  7567  00250E  22DE               	addwfc	postinc2,f,c
  7568  002510  22DE               	addwfc	postinc2,f,c
  7569  002512  22DE               	addwfc	postinc2,f,c
  7570  002514                     
  7571                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  7572  002514  50E1               	movf	fsr1l,w,c
  7573  002516  0FF3               	addlw	-13
  7574  002518  6ED9               	movwf	fsr2l,c
  7575  00251A  50E2               	movf	fsr1h,w,c
  7576  00251C  6EDA               	movwf	fsr2h,c
  7577  00251E  0EFF               	movlw	255
  7578  002520  22DA               	addwfc	fsr2h,f,c
  7579                           
  7580                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7581  002522  0EFC               	movlw	252
  7582  002524  24E1               	addwf	fsr1l,w,c
  7583  002526  6EE9               	movwf	fsr0l,c
  7584  002528  0EFF               	movlw	255
  7585  00252A  20E2               	addwfc	fsr1h,w,c
  7586  00252C  6EEA               	movwf	fsr0h,c
  7587  00252E  50EF               	movf	indf0,w,c
  7588  002530  26DE               	addwf	postinc2,f,c
  7589  002532  0E00               	movlw	0
  7590  002534  22DE               	addwfc	postinc2,f,c
  7591  002536  22DE               	addwfc	postinc2,f,c
  7592  002538  22DE               	addwfc	postinc2,f,c
  7593  00253A                     
  7594                           ;stkvar	___flmul@b @ sp[(-13)+-4]
  7595  00253A  0EF1               	movlw	241
  7596  00253C  24E1               	addwf	fsr1l,w,c
  7597  00253E  6ED9               	movwf	fsr2l,c
  7598  002540  0EFF               	movlw	255
  7599  002542  20E2               	addwfc	fsr1h,w,c
  7600  002544  6EDA               	movwf	fsr2h,c
  7601  002546  50DF               	movf	indf2,w,c
  7602  002548  6E6D               	movwf	(btemp+11)^0,c
  7603                           
  7604                           ;stkvar	___flmul@a @ sp[(-13)+-8]
  7605  00254A  0EEB               	movlw	-21
  7606  00254C  50E3               	movf	plusw1,w,c
  7607  00254E  026D               	mulwf	(btemp+11)^0,c
  7608                           
  7609                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7610  002550  0EFB               	movlw	-5
  7611  002552  CFF3 FFE3          	movff	prodl,plusw1
  7612  002556  0EFC               	movlw	-4
  7613  002558  CFF4 FFE3          	movff	prodh,plusw1
  7614  00255C                     
  7615                           ;stkvar	___flmul@grs @ sp[(-13)+4]
  7616  00255C  50E1               	movf	fsr1l,w,c
  7617  00255E  0FF7               	addlw	-9
  7618  002560  6ED9               	movwf	fsr2l,c
  7619  002562  50E2               	movf	fsr1h,w,c
  7620  002564  6EDA               	movwf	fsr2h,c
  7621  002566  0EFF               	movlw	255
  7622  002568  22DA               	addwfc	fsr2h,f,c
  7623                           
  7624                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7625  00256A  0EFB               	movlw	-5
  7626  00256C  50E3               	movf	plusw1,w,c
  7627  00256E  26DE               	addwf	postinc2,f,c
  7628  002570  0E00               	movlw	0
  7629  002572  22DE               	addwfc	postinc2,f,c
  7630  002574  22DE               	addwfc	postinc2,f,c
  7631  002576  22DE               	addwfc	postinc2,f,c
  7632  002578                     
  7633                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  7634  002578  50E1               	movf	fsr1l,w,c
  7635  00257A  0FF3               	addlw	-13
  7636  00257C  6ED9               	movwf	fsr2l,c
  7637  00257E  50E2               	movf	fsr1h,w,c
  7638  002580  6EDA               	movwf	fsr2h,c
  7639  002582  0EFF               	movlw	255
  7640  002584  22DA               	addwfc	fsr2h,f,c
  7641                           
  7642                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7643  002586  0EFC               	movlw	252
  7644  002588  24E1               	addwf	fsr1l,w,c
  7645  00258A  6EE9               	movwf	fsr0l,c
  7646  00258C  0EFF               	movlw	255
  7647  00258E  20E2               	addwfc	fsr1h,w,c
  7648  002590  6EEA               	movwf	fsr0h,c
  7649  002592  50EF               	movf	indf0,w,c
  7650  002594  26DE               	addwf	postinc2,f,c
  7651  002596  0E00               	movlw	0
  7652  002598  22DE               	addwfc	postinc2,f,c
  7653  00259A  22DE               	addwfc	postinc2,f,c
  7654  00259C  22DE               	addwfc	postinc2,f,c
  7655  00259E                     
  7656                           ;stkvar	___flmul@grs @ sp[(-13)+4]
  7657  00259E  50E1               	movf	fsr1l,w,c
  7658  0025A0  0FF7               	addlw	-9
  7659  0025A2  6ED9               	movwf	fsr2l,c
  7660  0025A4  50E2               	movf	fsr1h,w,c
  7661  0025A6  6EDA               	movwf	fsr2h,c
  7662  0025A8  0EFF               	movlw	255
  7663  0025AA  22DA               	addwfc	fsr2h,f,c
  7664  0025AC  0E08               	movlw	8
  7665  0025AE                     u66_25:
  7666  0025AE  90D8               	bcf	status,0,c
  7667  0025B0  36DE               	rlcf	postinc2,f,c
  7668  0025B2  36DE               	rlcf	postinc2,f,c
  7669  0025B4  36DE               	rlcf	postinc2,f,c
  7670  0025B6  36DD               	rlcf	postdec2,f,c
  7671  0025B8  52DD               	movf	postdec2,f,c
  7672  0025BA  52DD               	movf	postdec2,f,c
  7673  0025BC  2EE8               	decfsz	wreg,f,c
  7674  0025BE  EFD7  F012         	goto	u66_25
  7675  0025C2                     
  7676                           ;stkvar	___flmul@b @ sp[(-13)+-4]
  7677  0025C2  0EF0               	movlw	240
  7678  0025C4  24E1               	addwf	fsr1l,w,c
  7679  0025C6  6ED9               	movwf	fsr2l,c
  7680  0025C8  0EFF               	movlw	255
  7681  0025CA  20E2               	addwfc	fsr1h,w,c
  7682  0025CC  6EDA               	movwf	fsr2h,c
  7683  0025CE  50DF               	movf	indf2,w,c
  7684  0025D0  6E6D               	movwf	(btemp+11)^0,c
  7685                           
  7686                           ;stkvar	___flmul@a @ sp[(-13)+-8]
  7687  0025D2  0EEB               	movlw	-21
  7688  0025D4  50E3               	movf	plusw1,w,c
  7689  0025D6  026D               	mulwf	(btemp+11)^0,c
  7690                           
  7691                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7692  0025D8  0EFB               	movlw	-5
  7693  0025DA  CFF3 FFE3          	movff	prodl,plusw1
  7694  0025DE  0EFC               	movlw	-4
  7695  0025E0  CFF4 FFE3          	movff	prodh,plusw1
  7696  0025E4                     
  7697                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7698  0025E4  0EFB               	movlw	-5
  7699  0025E6  CFE3 F06C          	movff	plusw1,btemp+10
  7700  0025EA  0EFC               	movlw	-4
  7701  0025EC  CFE3 F06D          	movff	plusw1,btemp+11
  7702                           
  7703                           ;stkvar	___flmul@grs @ sp[(-13)+4]
  7704  0025F0  50E1               	movf	fsr1l,w,c
  7705  0025F2  0FF7               	addlw	-9
  7706  0025F4  6ED9               	movwf	fsr2l,c
  7707  0025F6  50E2               	movf	fsr1h,w,c
  7708  0025F8  6EDA               	movwf	fsr2h,c
  7709  0025FA  0EFF               	movlw	255
  7710  0025FC  22DA               	addwfc	fsr2h,f,c
  7711  0025FE  506C               	movf	(btemp+10)^0,w,c
  7712  002600  26DE               	addwf	postinc2,f,c
  7713  002602  506D               	movf	(btemp+11)^0,w,c
  7714  002604  22DE               	addwfc	postinc2,f,c
  7715  002606  0E00               	movlw	0
  7716  002608  22DE               	addwfc	postinc2,f,c
  7717  00260A  22DE               	addwfc	postinc2,f,c
  7718  00260C                     
  7719                           ;stkvar	___flmul@b @ sp[(-13)+-4]
  7720  00260C  0EEF               	movlw	-17
  7721  00260E  CFE3 F06D          	movff	plusw1,btemp+11
  7722                           
  7723                           ;stkvar	___flmul@a @ sp[(-13)+-8]
  7724  002612  0EEC               	movlw	236
  7725  002614  24E1               	addwf	fsr1l,w,c
  7726  002616  6ED9               	movwf	fsr2l,c
  7727  002618  0EFF               	movlw	255
  7728  00261A  20E2               	addwfc	fsr1h,w,c
  7729  00261C  6EDA               	movwf	fsr2h,c
  7730  00261E  50DF               	movf	indf2,w,c
  7731  002620  026D               	mulwf	(btemp+11)^0,c
  7732                           
  7733                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7734  002622  0EFB               	movlw	-5
  7735  002624  CFF3 FFE3          	movff	prodl,plusw1
  7736  002628  0EFC               	movlw	-4
  7737  00262A  CFF4 FFE3          	movff	prodh,plusw1
  7738  00262E                     
  7739                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7740  00262E  0EFB               	movlw	-5
  7741  002630  CFE3 F06C          	movff	plusw1,btemp+10
  7742  002634  0EFC               	movlw	-4
  7743  002636  CFE3 F06D          	movff	plusw1,btemp+11
  7744                           
  7745                           ;stkvar	___flmul@grs @ sp[(-13)+4]
  7746  00263A  50E1               	movf	fsr1l,w,c
  7747  00263C  0FF7               	addlw	-9
  7748  00263E  6ED9               	movwf	fsr2l,c
  7749  002640  50E2               	movf	fsr1h,w,c
  7750  002642  6EDA               	movwf	fsr2h,c
  7751  002644  0EFF               	movlw	255
  7752  002646  22DA               	addwfc	fsr2h,f,c
  7753  002648  506C               	movf	(btemp+10)^0,w,c
  7754  00264A  26DE               	addwf	postinc2,f,c
  7755  00264C  506D               	movf	(btemp+11)^0,w,c
  7756  00264E  22DE               	addwfc	postinc2,f,c
  7757  002650  0E00               	movlw	0
  7758  002652  22DE               	addwfc	postinc2,f,c
  7759  002654  22DE               	addwfc	postinc2,f,c
  7760  002656                     
  7761                           ;stkvar	___flmul@grs @ sp[(-13)+4]
  7762  002656  50E1               	movf	fsr1l,w,c
  7763  002658  0FF7               	addlw	-9
  7764  00265A  6ED9               	movwf	fsr2l,c
  7765  00265C  50E2               	movf	fsr1h,w,c
  7766  00265E  6EDA               	movwf	fsr2h,c
  7767  002660  0EFF               	movlw	255
  7768  002662  22DA               	addwfc	fsr2h,f,c
  7769  002664  0E08               	movlw	8
  7770  002666                     u67_25:
  7771  002666  90D8               	bcf	status,0,c
  7772  002668  36DE               	rlcf	postinc2,f,c
  7773  00266A  36DE               	rlcf	postinc2,f,c
  7774  00266C  36DE               	rlcf	postinc2,f,c
  7775  00266E  36DD               	rlcf	postdec2,f,c
  7776  002670  52DD               	movf	postdec2,f,c
  7777  002672  52DD               	movf	postdec2,f,c
  7778  002674  2EE8               	decfsz	wreg,f,c
  7779  002676  EF33  F013         	goto	u67_25
  7780  00267A                     
  7781                           ;stkvar	___flmul@b @ sp[(-13)+-4]
  7782  00267A  0EEF               	movlw	-17
  7783  00267C  CFE3 F06D          	movff	plusw1,btemp+11
  7784                           
  7785                           ;stkvar	___flmul@a @ sp[(-13)+-8]
  7786  002680  0EEB               	movlw	-21
  7787  002682  50E3               	movf	plusw1,w,c
  7788  002684  026D               	mulwf	(btemp+11)^0,c
  7789                           
  7790                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7791  002686  0EFB               	movlw	-5
  7792  002688  CFF3 FFE3          	movff	prodl,plusw1
  7793  00268C  0EFC               	movlw	-4
  7794  00268E  CFF4 FFE3          	movff	prodh,plusw1
  7795  002692                     
  7796                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7797  002692  0EFB               	movlw	-5
  7798  002694  CFE3 F06C          	movff	plusw1,btemp+10
  7799  002698  0EFC               	movlw	-4
  7800  00269A  CFE3 F06D          	movff	plusw1,btemp+11
  7801                           
  7802                           ;stkvar	___flmul@grs @ sp[(-13)+4]
  7803  00269E  50E1               	movf	fsr1l,w,c
  7804  0026A0  0FF7               	addlw	-9
  7805  0026A2  6ED9               	movwf	fsr2l,c
  7806  0026A4  50E2               	movf	fsr1h,w,c
  7807  0026A6  6EDA               	movwf	fsr2h,c
  7808  0026A8  0EFF               	movlw	255
  7809  0026AA  22DA               	addwfc	fsr2h,f,c
  7810  0026AC  506C               	movf	(btemp+10)^0,w,c
  7811  0026AE  26DE               	addwf	postinc2,f,c
  7812  0026B0  506D               	movf	(btemp+11)^0,w,c
  7813  0026B2  22DE               	addwfc	postinc2,f,c
  7814  0026B4  0E00               	movlw	0
  7815  0026B6  22DE               	addwfc	postinc2,f,c
  7816  0026B8  22DE               	addwfc	postinc2,f,c
  7817  0026BA                     
  7818                           ;stkvar	___flmul@b @ sp[(-13)+-4]
  7819  0026BA  0EF0               	movlw	240
  7820  0026BC  24E1               	addwf	fsr1l,w,c
  7821  0026BE  6ED9               	movwf	fsr2l,c
  7822  0026C0  0EFF               	movlw	255
  7823  0026C2  20E2               	addwfc	fsr1h,w,c
  7824  0026C4  6EDA               	movwf	fsr2h,c
  7825  0026C6  50DF               	movf	indf2,w,c
  7826  0026C8  6E6D               	movwf	(btemp+11)^0,c
  7827                           
  7828                           ;stkvar	___flmul@a @ sp[(-13)+-8]
  7829  0026CA  0EED               	movlw	237
  7830  0026CC  24E1               	addwf	fsr1l,w,c
  7831  0026CE  6ED9               	movwf	fsr2l,c
  7832  0026D0  0EFF               	movlw	255
  7833  0026D2  20E2               	addwfc	fsr1h,w,c
  7834  0026D4  6EDA               	movwf	fsr2h,c
  7835  0026D6  50DF               	movf	indf2,w,c
  7836  0026D8  026D               	mulwf	(btemp+11)^0,c
  7837                           
  7838                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7839  0026DA  0EFB               	movlw	-5
  7840  0026DC  CFF3 FFE3          	movff	prodl,plusw1
  7841  0026E0  0EFC               	movlw	-4
  7842  0026E2  CFF4 FFE3          	movff	prodh,plusw1
  7843  0026E6                     
  7844                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7845  0026E6  0EFB               	movlw	-5
  7846  0026E8  CFE3 F06C          	movff	plusw1,btemp+10
  7847  0026EC  0EFC               	movlw	-4
  7848  0026EE  CFE3 F06D          	movff	plusw1,btemp+11
  7849                           
  7850                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  7851  0026F2  50E1               	movf	fsr1l,w,c
  7852  0026F4  0FF3               	addlw	-13
  7853  0026F6  6ED9               	movwf	fsr2l,c
  7854  0026F8  50E2               	movf	fsr1h,w,c
  7855  0026FA  6EDA               	movwf	fsr2h,c
  7856  0026FC  0EFF               	movlw	255
  7857  0026FE  22DA               	addwfc	fsr2h,f,c
  7858  002700  506C               	movf	(btemp+10)^0,w,c
  7859  002702  26DE               	addwf	postinc2,f,c
  7860  002704  506D               	movf	(btemp+11)^0,w,c
  7861  002706  22DE               	addwfc	postinc2,f,c
  7862  002708  0E00               	movlw	0
  7863  00270A  22DE               	addwfc	postinc2,f,c
  7864  00270C  22DE               	addwfc	postinc2,f,c
  7865  00270E                     
  7866                           ;stkvar	___flmul@b @ sp[(-13)+-4]
  7867  00270E  0EF1               	movlw	241
  7868  002710  24E1               	addwf	fsr1l,w,c
  7869  002712  6ED9               	movwf	fsr2l,c
  7870  002714  0EFF               	movlw	255
  7871  002716  20E2               	addwfc	fsr1h,w,c
  7872  002718  6EDA               	movwf	fsr2h,c
  7873  00271A  50DF               	movf	indf2,w,c
  7874  00271C  6E6D               	movwf	(btemp+11)^0,c
  7875                           
  7876                           ;stkvar	___flmul@a @ sp[(-13)+-8]
  7877  00271E  0EEC               	movlw	236
  7878  002720  24E1               	addwf	fsr1l,w,c
  7879  002722  6ED9               	movwf	fsr2l,c
  7880  002724  0EFF               	movlw	255
  7881  002726  20E2               	addwfc	fsr1h,w,c
  7882  002728  6EDA               	movwf	fsr2h,c
  7883  00272A  50DF               	movf	indf2,w,c
  7884  00272C  026D               	mulwf	(btemp+11)^0,c
  7885                           
  7886                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7887  00272E  0EFB               	movlw	-5
  7888  002730  CFF3 FFE3          	movff	prodl,plusw1
  7889  002734  0EFC               	movlw	-4
  7890  002736  CFF4 FFE3          	movff	prodh,plusw1
  7891  00273A                     
  7892                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7893  00273A  0EFB               	movlw	-5
  7894  00273C  CFE3 F06C          	movff	plusw1,btemp+10
  7895  002740  0EFC               	movlw	-4
  7896  002742  CFE3 F06D          	movff	plusw1,btemp+11
  7897                           
  7898                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  7899  002746  50E1               	movf	fsr1l,w,c
  7900  002748  0FF3               	addlw	-13
  7901  00274A  6ED9               	movwf	fsr2l,c
  7902  00274C  50E2               	movf	fsr1h,w,c
  7903  00274E  6EDA               	movwf	fsr2h,c
  7904  002750  0EFF               	movlw	255
  7905  002752  22DA               	addwfc	fsr2h,f,c
  7906  002754  506C               	movf	(btemp+10)^0,w,c
  7907  002756  26DE               	addwf	postinc2,f,c
  7908  002758  506D               	movf	(btemp+11)^0,w,c
  7909  00275A  22DE               	addwfc	postinc2,f,c
  7910  00275C  0E00               	movlw	0
  7911  00275E  22DE               	addwfc	postinc2,f,c
  7912  002760  22DE               	addwfc	postinc2,f,c
  7913  002762                     
  7914                           ;stkvar	___flmul@b @ sp[(-13)+-4]
  7915  002762  0EF1               	movlw	241
  7916  002764  24E1               	addwf	fsr1l,w,c
  7917  002766  6ED9               	movwf	fsr2l,c
  7918  002768  0EFF               	movlw	255
  7919  00276A  20E2               	addwfc	fsr1h,w,c
  7920  00276C  6EDA               	movwf	fsr2h,c
  7921  00276E  50DF               	movf	indf2,w,c
  7922  002770  6E6D               	movwf	(btemp+11)^0,c
  7923                           
  7924                           ;stkvar	___flmul@a @ sp[(-13)+-8]
  7925  002772  0EED               	movlw	237
  7926  002774  24E1               	addwf	fsr1l,w,c
  7927  002776  6ED9               	movwf	fsr2l,c
  7928  002778  0EFF               	movlw	255
  7929  00277A  20E2               	addwfc	fsr1h,w,c
  7930  00277C  6EDA               	movwf	fsr2h,c
  7931  00277E  50DF               	movf	indf2,w,c
  7932  002780  026D               	mulwf	(btemp+11)^0,c
  7933                           
  7934                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7935  002782  0EFB               	movlw	-5
  7936  002784  CFF3 FFE3          	movff	prodl,plusw1
  7937  002788  0EFC               	movlw	-4
  7938  00278A  CFF4 FFE3          	movff	prodh,plusw1
  7939  00278E                     
  7940                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  7941  00278E  0EFB               	movlw	-5
  7942  002790  CFE3 F06C          	movff	plusw1,btemp+10
  7943  002794  0EFC               	movlw	-4
  7944  002796  CFE3 F06D          	movff	plusw1,btemp+11
  7945  00279A  506C               	movf	(btemp+10)^0,w,c
  7946  00279C  6E66               	movwf	(btemp+4)^0,c
  7947  00279E  506D               	movf	(btemp+11)^0,w,c
  7948  0027A0  6E67               	movwf	(btemp+5)^0,c
  7949  0027A2  6A68               	clrf	(btemp+6)^0,c
  7950  0027A4  6A69               	clrf	(btemp+7)^0,c
  7951  0027A6  C068  F069         	movff	btemp+6,btemp+7
  7952  0027AA  C067  F068         	movff	btemp+5,btemp+6
  7953  0027AE  C066  F067         	movff	btemp+4,btemp+5
  7954  0027B2  6A66               	clrf	(btemp+4)^0,c
  7955                           
  7956                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  7957  0027B4  50E1               	movf	fsr1l,w,c
  7958  0027B6  0FF3               	addlw	-13
  7959  0027B8  6ED9               	movwf	fsr2l,c
  7960  0027BA  50E2               	movf	fsr1h,w,c
  7961  0027BC  6EDA               	movwf	fsr2h,c
  7962  0027BE  0EFF               	movlw	255
  7963  0027C0  22DA               	addwfc	fsr2h,f,c
  7964  0027C2  5066               	movf	(btemp+4)^0,w,c
  7965  0027C4  26DE               	addwf	postinc2,f,c
  7966  0027C6  5067               	movf	(btemp+5)^0,w,c
  7967  0027C8  22DE               	addwfc	postinc2,f,c
  7968  0027CA  5068               	movf	(btemp+6)^0,w,c
  7969  0027CC  22DE               	addwfc	postinc2,f,c
  7970  0027CE  5069               	movf	(btemp+7)^0,w,c
  7971  0027D0  22DE               	addwfc	postinc2,f,c
  7972  0027D2                     
  7973                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  7974  0027D2  50E1               	movf	fsr1l,w,c
  7975  0027D4  0FF3               	addlw	-13
  7976  0027D6  6ED9               	movwf	fsr2l,c
  7977  0027D8  50E2               	movf	fsr1h,w,c
  7978  0027DA  6EDA               	movwf	fsr2h,c
  7979  0027DC  0EFF               	movlw	255
  7980  0027DE  22DA               	addwfc	fsr2h,f,c
  7981                           
  7982                           ;stkvar	___flmul@grs @ sp[(-13)+4]
  7983  0027E0  0EFA               	movlw	250
  7984  0027E2  24E1               	addwf	fsr1l,w,c
  7985  0027E4  6EE9               	movwf	fsr0l,c
  7986  0027E6  0EFF               	movlw	255
  7987  0027E8  20E2               	addwfc	fsr1h,w,c
  7988  0027EA  6EEA               	movwf	fsr0h,c
  7989  0027EC  50EF               	movf	indf0,w,c
  7990  0027EE  26DE               	addwf	postinc2,f,c
  7991  0027F0  0E00               	movlw	0
  7992  0027F2  22DE               	addwfc	postinc2,f,c
  7993  0027F4  22DE               	addwfc	postinc2,f,c
  7994  0027F6  22DE               	addwfc	postinc2,f,c
  7995  0027F8                     
  7996                           ;stkvar	___flmul@grs @ sp[(-13)+4]
  7997  0027F8  50E1               	movf	fsr1l,w,c
  7998  0027FA  0FF7               	addlw	-9
  7999  0027FC  6ED9               	movwf	fsr2l,c
  8000  0027FE  50E2               	movf	fsr1h,w,c
  8001  002800  6EDA               	movwf	fsr2h,c
  8002  002802  0EFF               	movlw	255
  8003  002804  22DA               	addwfc	fsr2h,f,c
  8004  002806  0E08               	movlw	8
  8005  002808                     u68_25:
  8006  002808  90D8               	bcf	status,0,c
  8007  00280A  36DE               	rlcf	postinc2,f,c
  8008  00280C  36DE               	rlcf	postinc2,f,c
  8009  00280E  36DE               	rlcf	postinc2,f,c
  8010  002810  36DD               	rlcf	postdec2,f,c
  8011  002812  52DD               	movf	postdec2,f,c
  8012  002814  52DD               	movf	postdec2,f,c
  8013  002816  2EE8               	decfsz	wreg,f,c
  8014  002818  EF04  F014         	goto	u68_25
  8015  00281C  0E82               	movlw	130
  8016  00281E  6E6C               	movwf	(btemp+10)^0,c
  8017  002820  0EFF               	movlw	255
  8018  002822  6E6D               	movwf	(btemp+11)^0,c
  8019                           
  8020                           ;stkvar	___flmul@bexp @ sp[(-13)+10]
  8021  002824  0EFD               	movlw	-3
  8022  002826  50E3               	movf	plusw1,w,c
  8023  002828  6E6A               	movwf	(btemp+8)^0,c
  8024  00282A  6A6B               	clrf	(btemp+9)^0,c
  8025                           
  8026                           ;stkvar	___flmul@aexp @ sp[(-13)+11]
  8027  00282C  0EFE               	movlw	-2
  8028  00282E  50E3               	movf	plusw1,w,c
  8029  002830  266A               	addwf	(btemp+8)^0,f,c
  8030  002832  0E00               	movlw	0
  8031  002834  226B               	addwfc	(btemp+9)^0,f,c
  8032  002836  506C               	movf	(btemp+10)^0,w,c
  8033  002838  266A               	addwf	(btemp+8)^0,f,c
  8034  00283A  506D               	movf	(btemp+11)^0,w,c
  8035  00283C  226B               	addwfc	(btemp+9)^0,f,c
  8036                           
  8037                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  8038  00283E  0EFB               	movlw	-5
  8039  002840  C06A  FFE3         	movff	btemp+8,plusw1
  8040  002844  0EFC               	movlw	-4
  8041  002846  C06B  FFE3         	movff	btemp+9,plusw1
  8042  00284A  EF4D  F014         	goto	l1842
  8043  00284E                     l1832:
  8044                           
  8045                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  8046  00284E  90D8               	bcf	status,0,c
  8047  002850  0EF3               	movlw	-13
  8048  002852  36E3               	rlcf	plusw1,f,c
  8049  002854  0EF4               	movlw	-12
  8050  002856  36E3               	rlcf	plusw1,f,c
  8051  002858  0EF5               	movlw	-11
  8052  00285A  36E3               	rlcf	plusw1,f,c
  8053  00285C  0EF6               	movlw	-10
  8054  00285E  36E3               	rlcf	plusw1,f,c
  8055  002860                     
  8056                           ;stkvar	___flmul@grs @ sp[(-13)+4]
  8057  002860  0EFA               	movlw	-6
  8058  002862  AEE3               	btfss	plusw1,7,c
  8059  002864  EF36  F014         	goto	u69_21
  8060  002868  EF38  F014         	goto	u69_20
  8061  00286C                     u69_21:
  8062  00286C  EF3A  F014         	goto	l1838
  8063  002870                     u69_20:
  8064  002870                     
  8065                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  8066  002870  0EF3               	movlw	-13
  8067  002872  80E3               	bsf	plusw1,0,c
  8068  002874                     l1838:
  8069                           
  8070                           ;stkvar	___flmul@grs @ sp[(-13)+4]
  8071  002874  90D8               	bcf	status,0,c
  8072  002876  0EF7               	movlw	-9
  8073  002878  36E3               	rlcf	plusw1,f,c
  8074  00287A  0EF8               	movlw	-8
  8075  00287C  36E3               	rlcf	plusw1,f,c
  8076  00287E  0EF9               	movlw	-7
  8077  002880  36E3               	rlcf	plusw1,f,c
  8078  002882  0EFA               	movlw	-6
  8079  002884  36E3               	rlcf	plusw1,f,c
  8080  002886                     
  8081                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  8082  002886  50E1               	movf	fsr1l,w,c
  8083  002888  0FFB               	addlw	-5
  8084  00288A  6ED9               	movwf	fsr2l,c
  8085  00288C  50E2               	movf	fsr1h,w,c
  8086  00288E  6EDA               	movwf	fsr2h,c
  8087  002890  0EFF               	movlw	255
  8088  002892  22DA               	addwfc	fsr2h,f,c
  8089  002894  06DE               	decf	postinc2,f,c
  8090  002896  0E00               	movlw	0
  8091  002898  5ADD               	subwfb	postdec2,f,c
  8092  00289A                     l1842:
  8093                           
  8094                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  8095  00289A  0EF5               	movlw	-11
  8096  00289C  AEE3               	btfss	plusw1,7,c
  8097  00289E  EF53  F014         	goto	u70_21
  8098  0028A2  EF55  F014         	goto	u70_20
  8099  0028A6                     u70_21:
  8100  0028A6  EF27  F014         	goto	l1832
  8101  0028AA                     u70_20:
  8102  0028AA                     
  8103                           ;stkvar	___flmul@aexp @ sp[(-13)+11]
  8104  0028AA  0EFE               	movlw	-2
  8105  0028AC  6AE3               	clrf	plusw1,c
  8106  0028AE                     
  8107                           ;stkvar	___flmul@grs @ sp[(-13)+4]
  8108  0028AE  0EFA               	movlw	-6
  8109  0028B0  AEE3               	btfss	plusw1,7,c
  8110  0028B2  EF5D  F014         	goto	u71_21
  8111  0028B6  EF5F  F014         	goto	u71_20
  8112  0028BA                     u71_21:
  8113  0028BA  EF8C  F014         	goto	l1856
  8114  0028BE                     u71_20:
  8115  0028BE                     
  8116                           ;stkvar	___flmul@grs @ sp[(-13)+4]
  8117  0028BE  50E1               	movf	fsr1l,w,c
  8118  0028C0  0FF7               	addlw	-9
  8119  0028C2  6ED9               	movwf	fsr2l,c
  8120  0028C4  50E2               	movf	fsr1h,w,c
  8121  0028C6  6EDA               	movwf	fsr2h,c
  8122  0028C8  0EFF               	movlw	255
  8123  0028CA  22DA               	addwfc	fsr2h,f,c
  8124  0028CC  0EFF               	movlw	255
  8125  0028CE  14DE               	andwf	postinc2,w,c
  8126  0028D0  6E6A               	movwf	(btemp+8)^0,c
  8127  0028D2  0EFF               	movlw	255
  8128  0028D4  14DE               	andwf	postinc2,w,c
  8129  0028D6  6E6B               	movwf	(btemp+9)^0,c
  8130  0028D8  0EFF               	movlw	255
  8131  0028DA  14DE               	andwf	postinc2,w,c
  8132  0028DC  6E6C               	movwf	(btemp+10)^0,c
  8133  0028DE  0E7F               	movlw	127
  8134  0028E0  14DE               	andwf	postinc2,w,c
  8135  0028E2  6E6D               	movwf	(btemp+11)^0,c
  8136  0028E4  506A               	movf	(btemp+8)^0,w,c
  8137  0028E6  106B               	iorwf	(btemp+9)^0,w,c
  8138  0028E8  106C               	iorwf	(btemp+10)^0,w,c
  8139  0028EA  106D               	iorwf	(btemp+11)^0,w,c
  8140  0028EC  B4D8               	btfsc	status,2,c
  8141  0028EE  EF7B  F014         	goto	u72_21
  8142  0028F2  EF7D  F014         	goto	u72_20
  8143  0028F6                     u72_21:
  8144  0028F6  EF82  F014         	goto	l1852
  8145  0028FA                     u72_20:
  8146  0028FA                     l1850:
  8147                           
  8148                           ;stkvar	___flmul@aexp @ sp[(-13)+11]
  8149  0028FA  0EFE               	movlw	-2
  8150  0028FC  6AE3               	clrf	plusw1,c
  8151  0028FE  2AE3               	incf	plusw1,f,c
  8152  002900  EF8C  F014         	goto	l1856
  8153  002904                     l1852:
  8154                           
  8155                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  8156  002904  0EF3               	movlw	-13
  8157  002906  A0E3               	btfss	plusw1,0,c
  8158  002908  EF88  F014         	goto	u73_21
  8159  00290C  EF8A  F014         	goto	u73_20
  8160  002910                     u73_21:
  8161  002910  EF8C  F014         	goto	l1856
  8162  002914                     u73_20:
  8163  002914  EF7D  F014         	goto	l1850
  8164  002918                     l1856:
  8165                           
  8166                           ;stkvar	___flmul@aexp @ sp[(-13)+11]
  8167  002918  0EFE               	movlw	-2
  8168  00291A  50E3               	movf	plusw1,w,c
  8169  00291C  B4D8               	btfsc	status,2,c
  8170  00291E  EF93  F014         	goto	u74_21
  8171  002922  EF95  F014         	goto	u74_20
  8172  002926                     u74_21:
  8173  002926  EFD0  F014         	goto	l1866
  8174  00292A                     u74_20:
  8175  00292A                     
  8176                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  8177  00292A  50E1               	movf	fsr1l,w,c
  8178  00292C  0FF3               	addlw	-13
  8179  00292E  6ED9               	movwf	fsr2l,c
  8180  002930  50E2               	movf	fsr1h,w,c
  8181  002932  6EDA               	movwf	fsr2h,c
  8182  002934  0EFF               	movlw	255
  8183  002936  22DA               	addwfc	fsr2h,f,c
  8184  002938  2ADE               	incf	postinc2,f,c
  8185  00293A  0E00               	movlw	0
  8186  00293C  22DE               	addwfc	postinc2,f,c
  8187  00293E  22DE               	addwfc	postinc2,f,c
  8188  002940  22DE               	addwfc	postinc2,f,c
  8189  002942                     
  8190                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  8191  002942  0EF6               	movlw	-10
  8192  002944  A0E3               	btfss	plusw1,0,c
  8193  002946  EFA7  F014         	goto	u75_21
  8194  00294A  EFA9  F014         	goto	u75_20
  8195  00294E                     u75_21:
  8196  00294E  EFD0  F014         	goto	l1866
  8197  002952                     u75_20:
  8198  002952  0E01               	movlw	1
  8199  002954  6E6D               	movwf	(btemp+11)^0,c
  8200                           
  8201                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  8202  002956  50E1               	movf	fsr1l,w,c
  8203  002958  0FF3               	addlw	-13
  8204  00295A  6ED9               	movwf	fsr2l,c
  8205  00295C  50E2               	movf	fsr1h,w,c
  8206  00295E  6EDA               	movwf	fsr2h,c
  8207  002960  0EFF               	movlw	255
  8208  002962  22DA               	addwfc	fsr2h,f,c
  8209  002964  286D               	incf	(btemp+11)^0,w,c
  8210  002966  52DE               	movf	postinc2,f,c
  8211  002968  EFBE  F014         	goto	u76_20
  8212  00296C                     u76_25:
  8213  00296C  52DE               	movf	postinc2,f,c
  8214  00296E  90D8               	bcf	status,0,c
  8215  002970  BEDC               	btfsc	preinc2,7,c
  8216  002972  80D8               	bsf	status,0,c
  8217  002974  32DD               	rrcf	postdec2,f,c
  8218  002976  32DD               	rrcf	postdec2,f,c
  8219  002978  32DD               	rrcf	postdec2,f,c
  8220  00297A  32DE               	rrcf	postinc2,f,c
  8221  00297C                     u76_20:
  8222  00297C  2EE8               	decfsz	wreg,f,c
  8223  00297E  EFB6  F014         	goto	u76_25
  8224  002982                     
  8225                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  8226  002982  0EFB               	movlw	-5
  8227  002984  50E3               	movf	plusw1,w,c
  8228  002986  0F01               	addlw	1
  8229  002988  6E62               	movwf	btemp^0,c
  8230  00298A  0EFB               	movlw	-5
  8231  00298C  C062  FFE3         	movff	btemp,plusw1
  8232  002990  6A62               	clrf	btemp^0,c
  8233  002992  0EFC               	movlw	-4
  8234  002994  50E3               	movf	plusw1,w,c
  8235  002996  2062               	addwfc	btemp^0,w,c
  8236  002998  6E62               	movwf	btemp^0,c
  8237  00299A  0EFC               	movlw	-4
  8238  00299C  C062  FFE3         	movff	btemp,plusw1
  8239  0029A0                     l1866:
  8240                           
  8241                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  8242  0029A0  0EFC               	movlw	-4
  8243  0029A2  BEE3               	btfsc	plusw1,7,c
  8244  0029A4  EFDE  F014         	goto	u77_21
  8245  0029A8  0EFC               	movlw	-4
  8246  0029AA  50E3               	movf	plusw1,w,c
  8247  0029AC  E109               	bnz	u77_20
  8248  0029AE  0EFB               	movlw	-5
  8249  0029B0  28E3               	incf	plusw1,w,c
  8250  0029B2  A0D8               	btfss	status,0,c
  8251  0029B4  EFDE  F014         	goto	u77_21
  8252  0029B8  EFE0  F014         	goto	u77_20
  8253  0029BC                     u77_21:
  8254  0029BC  EFF6  F014         	goto	l1870
  8255  0029C0                     u77_20:
  8256  0029C0  0E00               	movlw	0
  8257  0029C2  6E6A               	movwf	(btemp+8)^0,c
  8258  0029C4  0E00               	movlw	0
  8259  0029C6  6E6B               	movwf	(btemp+9)^0,c
  8260  0029C8  0E80               	movlw	128
  8261  0029CA  6E6C               	movwf	(btemp+10)^0,c
  8262  0029CC  0E7F               	movlw	127
  8263  0029CE  6E6D               	movwf	(btemp+11)^0,c
  8264                           
  8265                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  8266  0029D0  0EF3               	movlw	-13
  8267  0029D2  C06A  FFE3         	movff	btemp+8,plusw1
  8268  0029D6  0EF4               	movlw	-12
  8269  0029D8  C06B  FFE3         	movff	btemp+9,plusw1
  8270  0029DC  0EF5               	movlw	-11
  8271  0029DE  C06C  FFE3         	movff	btemp+10,plusw1
  8272  0029E2  0EF6               	movlw	-10
  8273  0029E4  C06D  FFE3         	movff	btemp+11,plusw1
  8274  0029E8  EF43  F015         	goto	l1886
  8275  0029EC                     l1870:
  8276                           
  8277                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  8278  0029EC  0EFC               	movlw	-4
  8279  0029EE  BEE3               	btfsc	plusw1,7,c
  8280  0029F0  EF06  F015         	goto	u78_20
  8281  0029F4  0EFC               	movlw	-4
  8282  0029F6  50E3               	movf	plusw1,w,c
  8283  0029F8  E107               	bnz	u78_21
  8284  0029FA  0EFB               	movlw	-5
  8285  0029FC  04E3               	decf	plusw1,w,c
  8286  0029FE  B0D8               	btfsc	status,0,c
  8287  002A00  EF04  F015         	goto	u78_21
  8288  002A04  EF06  F015         	goto	u78_20
  8289  002A08                     u78_21:
  8290  002A08  EF12  F015         	goto	l1876
  8291  002A0C                     u78_20:
  8292  002A0C                     
  8293                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  8294  002A0C  0EF3               	movlw	-13
  8295  002A0E  6AE3               	clrf	plusw1,c
  8296  002A10  0EF4               	movlw	-12
  8297  002A12  6AE3               	clrf	plusw1,c
  8298  002A14  0EF5               	movlw	-11
  8299  002A16  6AE3               	clrf	plusw1,c
  8300  002A18  0EF6               	movlw	-10
  8301  002A1A  6AE3               	clrf	plusw1,c
  8302  002A1C                     
  8303                           ;stkvar	___flmul@sign @ sp[(-13)+12]
  8304  002A1C  0EFF               	movlw	-1
  8305  002A1E  6AE3               	clrf	plusw1,c
  8306  002A20  EF43  F015         	goto	l1886
  8307  002A24                     l1876:
  8308                           
  8309                           ;stkvar	___flmul@temp @ sp[(-13)+8]
  8310                           ;stkvar	___flmul@bexp @ sp[(-13)+10]
  8311  002A24  0EFB               	movlw	-5
  8312  002A26  CFE3 F062          	movff	plusw1,btemp
  8313  002A2A  0EFD               	movlw	-3
  8314  002A2C  C062  FFE3         	movff	btemp,plusw1
  8315  002A30                     
  8316                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  8317  002A30  50E1               	movf	fsr1l,w,c
  8318  002A32  0FF3               	addlw	-13
  8319  002A34  6ED9               	movwf	fsr2l,c
  8320  002A36  50E2               	movf	fsr1h,w,c
  8321  002A38  6EDA               	movwf	fsr2h,c
  8322  002A3A  0EFF               	movlw	255
  8323  002A3C  22DA               	addwfc	fsr2h,f,c
  8324  002A3E  0EFF               	movlw	255
  8325  002A40  16DE               	andwf	postinc2,f,c
  8326  002A42  0EFF               	movlw	255
  8327  002A44  16DE               	andwf	postinc2,f,c
  8328  002A46  0E7F               	movlw	127
  8329  002A48  16DE               	andwf	postinc2,f,c
  8330  002A4A  0E00               	movlw	0
  8331  002A4C  16DE               	andwf	postinc2,f,c
  8332  002A4E                     
  8333                           ;stkvar	___flmul@bexp @ sp[(-13)+10]
  8334  002A4E  0EFD               	movlw	-3
  8335  002A50  A0E3               	btfss	plusw1,0,c
  8336  002A52  EF2D  F015         	goto	u79_21
  8337  002A56  EF2F  F015         	goto	u79_20
  8338  002A5A                     u79_21:
  8339  002A5A  EF37  F015         	goto	l1884
  8340  002A5E                     u79_20:
  8341  002A5E                     
  8342                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  8343  002A5E  0EF5               	movlw	245
  8344  002A60  24E1               	addwf	fsr1l,w,c
  8345  002A62  6ED9               	movwf	fsr2l,c
  8346  002A64  0EFF               	movlw	255
  8347  002A66  20E2               	addwfc	fsr1h,w,c
  8348  002A68  6EDA               	movwf	fsr2h,c
  8349  002A6A  0E00               	movlw	0
  8350  002A6C  8EDB               	bsf	plusw2,7,c
  8351  002A6E                     l1884:
  8352                           
  8353                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  8354  002A6E  0EF6               	movlw	246
  8355  002A70  24E1               	addwf	fsr1l,w,c
  8356  002A72  6ED9               	movwf	fsr2l,c
  8357  002A74  0EFF               	movlw	255
  8358  002A76  20E2               	addwfc	fsr1h,w,c
  8359  002A78  6EDA               	movwf	fsr2h,c
  8360                           
  8361                           ;stkvar	___flmul@bexp @ sp[(-13)+10]
  8362  002A7A  0EFD               	movlw	-3
  8363  002A7C  CFE3 F06D          	movff	plusw1,btemp+11
  8364  002A80  90D8               	bcf	status,0,c
  8365  002A82  306D               	rrcf	(btemp+11)^0,w,c
  8366  002A84  6EDF               	movwf	indf2,c
  8367  002A86                     l1886:
  8368                           
  8369                           ;stkvar	___flmul@sign @ sp[(-13)+12]
  8370  002A86  0EFF               	movlw	-1
  8371  002A88  CFE3 F06D          	movff	plusw1,btemp+11
  8372                           
  8373                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  8374  002A8C  0EF6               	movlw	246
  8375  002A8E  24E1               	addwf	fsr1l,w,c
  8376  002A90  6ED9               	movwf	fsr2l,c
  8377  002A92  0EFF               	movlw	255
  8378  002A94  20E2               	addwfc	fsr1h,w,c
  8379  002A96  6EDA               	movwf	fsr2h,c
  8380  002A98  506D               	movf	(btemp+11)^0,w,c
  8381  002A9A  12DF               	iorwf	indf2,f,c
  8382  002A9C                     
  8383                           ;stkvar	___flmul@prod @ sp[(-13)+0]
  8384  002A9C  0EF3               	movlw	-13
  8385  002A9E  CFE3 F062          	movff	plusw1,btemp
  8386  002AA2  0EF4               	movlw	-12
  8387  002AA4  CFE3 F063          	movff	plusw1,btemp+1
  8388  002AA8  0EF5               	movlw	-11
  8389  002AAA  CFE3 F064          	movff	plusw1,btemp+2
  8390  002AAE  0EF6               	movlw	-10
  8391  002AB0  CFE3 F065          	movff	plusw1,btemp+3
  8392  002AB4                     l1196:
  8393                           
  8394                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
  8395  002AB4  0EEB               	movlw	235
  8396  002AB6  26E1               	addwf	fsr1l,f,c
  8397  002AB8  0EFF               	movlw	255
  8398  002ABA  22E2               	addwfc	fsr1h,f,c
  8399  002ABC  0012               	return		;funcret
  8400  002ABE                     __end_of___flmul:
  8401                           	opt callstack 0
  8402                           
  8403 ;; *************** function __tdiv_to_l_ *****************
  8404 ;; Defined at:
  8405 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  8406 ;; Parameters:    Size  Location     Type
  8407 ;;  f1              4  [STACK] float 
  8408 ;;  f2              4  [STACK] float 
  8409 ;; Auto vars:     Size  Location     Type
  8410 ;;  quot            4  [STACK] unsigned long 
  8411 ;;  exp1            1  [STACK] unsigned char 
  8412 ;;  cntr            1  [STACK] unsigned char 
  8413 ;; Return value:  Size  Location     Type
  8414 ;;                  4  [STACK] unsigned long 
  8415 ;; Registers used:
  8416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+6, btemp+7, btemp+8, b
      +temp+9, btemp+10, btemp+11
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8422 ;;      Params:         0       0       0       0       0       0       0
  8423 ;;      Locals:         0       0       0       0       0       0       0
  8424 ;;      Temps:          0       0       0       0       0       0       0
  8425 ;;      Totals:         0       0       0       0       0       0       0
  8426 ;;Total ram usage:        0 bytes
  8427 ;; Hardware stack levels used:    1
  8428 ;; Hardware stack levels required when called:    4
  8429 ;; This function calls:
  8430 ;;		Nothing
  8431 ;; This function is called by:
  8432 ;;		_sprintf
  8433 ;; This function uses a reentrant model
  8434 ;;
  8435                           
  8436                           	psect	text25
  8437  004454                     __ptext25:
  8438                           	opt callstack 0
  8439  004454                     __tdiv_to_l_:
  8440                           	opt callstack 0
  8441                           
  8442                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8443  004454  0E06               	movlw	6
  8444  004456  26E1               	addwf	fsr1l,f,c
  8445  004458  0E00               	movlw	0
  8446  00445A  22E2               	addwfc	fsr1h,f,c
  8447  00445C  0E0F               	movlw	15
  8448  00445E  6E6D               	movwf	(btemp+11)^0,c
  8449                           
  8450                           ;stkvar	__tdiv_to_l_@f1 @ sp[(-6)+-4]
  8451  004460  0EF6               	movlw	-10
  8452  004462  CFE3 F068          	movff	plusw1,btemp+6
  8453  004466  0EF7               	movlw	-9
  8454  004468  CFE3 F069          	movff	plusw1,btemp+7
  8455  00446C  0EF8               	movlw	-8
  8456  00446E  CFE3 F06A          	movff	plusw1,btemp+8
  8457  004472  286D               	incf	(btemp+11)^0,w,c
  8458  004474  6E62               	movwf	btemp^0,c
  8459  004476  EF41  F022         	goto	u111_20
  8460  00447A                     u111_25:
  8461  00447A  90D8               	bcf	status,0,c
  8462  00447C  326A               	rrcf	(btemp+8)^0,f,c
  8463  00447E  3269               	rrcf	(btemp+7)^0,f,c
  8464  004480  3268               	rrcf	(btemp+6)^0,f,c
  8465  004482                     u111_20:
  8466  004482  2E62               	decfsz	btemp^0,f,c
  8467  004484  EF3D  F022         	goto	u111_25
  8468  004488  5068               	movf	(btemp+6)^0,w,c
  8469  00448A  6E6D               	movwf	(btemp+11)^0,c
  8470                           
  8471                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
  8472  00448C  0EFE               	movlw	-2
  8473  00448E  C06D  FFE3         	movff	btemp+11,plusw1
  8474  004492  0EFE               	movlw	-2
  8475  004494  50E3               	movf	plusw1,w,c
  8476  004496  A4D8               	btfss	status,2,c
  8477  004498  EF50  F022         	goto	u112_21
  8478  00449C  EF52  F022         	goto	u112_20
  8479  0044A0                     u112_21:
  8480  0044A0  EF59  F022         	goto	l2172
  8481  0044A4                     u112_20:
  8482  0044A4                     l2168:
  8483  0044A4  0E00               	movlw	0
  8484  0044A6  6E62               	movwf	btemp^0,c
  8485  0044A8  6A63               	clrf	(btemp+1)^0,c
  8486  0044AA  6A64               	clrf	(btemp+2)^0,c
  8487  0044AC  6A65               	clrf	(btemp+3)^0,c
  8488  0044AE  EF4E  F023         	goto	l919
  8489  0044B2                     l2172:
  8490  0044B2  0E0F               	movlw	15
  8491  0044B4  6E6D               	movwf	(btemp+11)^0,c
  8492                           
  8493                           ;stkvar	__tdiv_to_l_@f2 @ sp[(-6)+-8]
  8494  0044B6  0EF2               	movlw	-14
  8495  0044B8  CFE3 F068          	movff	plusw1,btemp+6
  8496  0044BC  0EF3               	movlw	-13
  8497  0044BE  CFE3 F069          	movff	plusw1,btemp+7
  8498  0044C2  0EF4               	movlw	-12
  8499  0044C4  CFE3 F06A          	movff	plusw1,btemp+8
  8500  0044C8  286D               	incf	(btemp+11)^0,w,c
  8501  0044CA  6E62               	movwf	btemp^0,c
  8502  0044CC  EF6C  F022         	goto	u113_20
  8503  0044D0                     u113_25:
  8504  0044D0  90D8               	bcf	status,0,c
  8505  0044D2  326A               	rrcf	(btemp+8)^0,f,c
  8506  0044D4  3269               	rrcf	(btemp+7)^0,f,c
  8507  0044D6  3268               	rrcf	(btemp+6)^0,f,c
  8508  0044D8                     u113_20:
  8509  0044D8  2E62               	decfsz	btemp^0,f,c
  8510  0044DA  EF68  F022         	goto	u113_25
  8511  0044DE  5068               	movf	(btemp+6)^0,w,c
  8512  0044E0  6E6D               	movwf	(btemp+11)^0,c
  8513                           
  8514                           ;stkvar	__tdiv_to_l_@cntr @ sp[(-6)+5]
  8515  0044E2  0EFF               	movlw	-1
  8516  0044E4  C06D  FFE3         	movff	btemp+11,plusw1
  8517  0044E8  0EFF               	movlw	-1
  8518  0044EA  50E3               	movf	plusw1,w,c
  8519  0044EC  A4D8               	btfss	status,2,c
  8520  0044EE  EF7B  F022         	goto	u114_21
  8521  0044F2  EF7D  F022         	goto	u114_20
  8522  0044F6                     u114_21:
  8523  0044F6  EF7F  F022         	goto	l2178
  8524  0044FA                     u114_20:
  8525  0044FA  EF52  F022         	goto	l2168
  8526  0044FE                     l2178:
  8527                           
  8528                           ;stkvar	__tdiv_to_l_@f1 @ sp[(-6)+-4]
  8529  0044FE  0EF7               	movlw	-9
  8530  004500  8EE3               	bsf	plusw1,7,c
  8531  004502                     
  8532                           ;stkvar	__tdiv_to_l_@f1 @ sp[(-6)+-4]
  8533  004502  0EF8               	movlw	-8
  8534  004504  6AE3               	clrf	plusw1,c
  8535  004506                     
  8536                           ;stkvar	__tdiv_to_l_@f2 @ sp[(-6)+-8]
  8537  004506  0EF3               	movlw	-13
  8538  004508  8EE3               	bsf	plusw1,7,c
  8539                           
  8540                           ;stkvar	__tdiv_to_l_@f2 @ sp[(-6)+-8]
  8541  00450A  0EF4               	movlw	-12
  8542  00450C  6AE3               	clrf	plusw1,c
  8543  00450E                     
  8544                           ;stkvar	__tdiv_to_l_@quot @ sp[(-6)+0]
  8545  00450E  0EFA               	movlw	-6
  8546  004510  6AE3               	clrf	plusw1,c
  8547  004512  0EFB               	movlw	-5
  8548  004514  6AE3               	clrf	plusw1,c
  8549  004516  0EFC               	movlw	-4
  8550  004518  6AE3               	clrf	plusw1,c
  8551  00451A  0EFD               	movlw	-3
  8552  00451C  6AE3               	clrf	plusw1,c
  8553  00451E                     
  8554                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
  8555  00451E  0EFE               	movlw	-2
  8556  004520  CFE3 F062          	movff	plusw1,btemp
  8557  004524  0E7F               	movlw	127
  8558  004526  5E62               	subwf	btemp^0,f,c
  8559  004528  0EFE               	movlw	-2
  8560  00452A  C062  FFE3         	movff	btemp,plusw1
  8561  00452E  0E98               	movlw	152
  8562  004530  6E6D               	movwf	(btemp+11)^0,c
  8563                           
  8564                           ;stkvar	__tdiv_to_l_@cntr @ sp[(-6)+5]
  8565  004532  0EFF               	movlw	-1
  8566  004534  50E3               	movf	plusw1,w,c
  8567  004536  246D               	addwf	(btemp+11)^0,w,c
  8568  004538  6E6C               	movwf	(btemp+10)^0,c
  8569                           
  8570                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
  8571  00453A  50E1               	movf	fsr1l,w,c
  8572  00453C  0FFE               	addlw	-2
  8573  00453E  6ED9               	movwf	fsr2l,c
  8574  004540  50E2               	movf	fsr1h,w,c
  8575  004542  6EDA               	movwf	fsr2h,c
  8576  004544  0EFF               	movlw	255
  8577  004546  22DA               	addwfc	fsr2h,f,c
  8578  004548  506C               	movf	(btemp+10)^0,w,c
  8579  00454A  5EDF               	subwf	indf2,f,c
  8580  00454C                     
  8581                           ;stkvar	__tdiv_to_l_@cntr @ sp[(-6)+5]
  8582  00454C  0EFF               	movlw	-1
  8583  00454E  6AE3               	clrf	plusw1,c
  8584  004550  86E3               	bsf	plusw1,3,c
  8585  004552  88E3               	bsf	plusw1,4,c	;indir
  8586  004554                     l2192:
  8587                           
  8588                           ;stkvar	__tdiv_to_l_@quot @ sp[(-6)+0]
  8589  004554  90D8               	bcf	status,0,c
  8590  004556  0EFA               	movlw	-6
  8591  004558  36E3               	rlcf	plusw1,f,c
  8592  00455A  0EFB               	movlw	-5
  8593  00455C  36E3               	rlcf	plusw1,f,c
  8594  00455E  0EFC               	movlw	-4
  8595  004560  36E3               	rlcf	plusw1,f,c
  8596  004562  0EFD               	movlw	-3
  8597  004564  36E3               	rlcf	plusw1,f,c
  8598  004566                     
  8599                           ;stkvar	__tdiv_to_l_@f2 @ sp[(-6)+-8]
  8600                           ;stkvar	__tdiv_to_l_@f1 @ sp[(-6)+-4]
  8601  004566  50E1               	movf	fsr1l,w,c
  8602  004568  0FF6               	addlw	-10
  8603  00456A  6ED9               	movwf	fsr2l,c
  8604  00456C  50E2               	movf	fsr1h,w,c
  8605  00456E  6EDA               	movwf	fsr2h,c
  8606  004570  0EFF               	movlw	255
  8607  004572  22DA               	addwfc	fsr2h,f,c
  8608  004574  0EF2               	movlw	-14
  8609  004576  50E3               	movf	plusw1,w,c
  8610  004578  5CDE               	subwf	postinc2,w,c
  8611  00457A  0EF3               	movlw	-13
  8612  00457C  50E3               	movf	plusw1,w,c
  8613  00457E  58DE               	subwfb	postinc2,w,c
  8614  004580  0EF4               	movlw	-12
  8615  004582  50E3               	movf	plusw1,w,c
  8616  004584  58DE               	subwfb	postinc2,w,c
  8617  004586  A0D8               	btfss	status,0,c
  8618  004588  EFC8  F022         	goto	u115_21
  8619  00458C  EFCA  F022         	goto	u115_20
  8620  004590                     u115_21:
  8621  004590  EFE2  F022         	goto	l2200
  8622  004594                     u115_20:
  8623  004594                     
  8624                           ;stkvar	__tdiv_to_l_@f2 @ sp[(-6)+-8]
  8625  004594  0EF2               	movlw	-14
  8626  004596  CFE3 F06B          	movff	plusw1,btemp+9
  8627  00459A  0EF3               	movlw	-13
  8628  00459C  CFE3 F06C          	movff	plusw1,btemp+10
  8629  0045A0  0EF4               	movlw	-12
  8630  0045A2  CFE3 F06D          	movff	plusw1,btemp+11
  8631                           
  8632                           ;stkvar	__tdiv_to_l_@f1 @ sp[(-6)+-4]
  8633  0045A6  50E1               	movf	fsr1l,w,c
  8634  0045A8  0FF6               	addlw	-10
  8635  0045AA  6ED9               	movwf	fsr2l,c
  8636  0045AC  50E2               	movf	fsr1h,w,c
  8637  0045AE  6EDA               	movwf	fsr2h,c
  8638  0045B0  0EFF               	movlw	255
  8639  0045B2  22DA               	addwfc	fsr2h,f,c
  8640  0045B4  506B               	movf	(btemp+9)^0,w,c
  8641  0045B6  5EDE               	subwf	postinc2,f,c
  8642  0045B8  506C               	movf	(btemp+10)^0,w,c
  8643  0045BA  5ADE               	subwfb	postinc2,f,c
  8644  0045BC  506D               	movf	(btemp+11)^0,w,c
  8645  0045BE  5ADE               	subwfb	postinc2,f,c
  8646  0045C0                     
  8647                           ;stkvar	__tdiv_to_l_@quot @ sp[(-6)+0]
  8648  0045C0  0EFA               	movlw	-6
  8649  0045C2  80E3               	bsf	plusw1,0,c
  8650  0045C4                     l2200:
  8651                           
  8652                           ;stkvar	__tdiv_to_l_@f1 @ sp[(-6)+-4]
  8653  0045C4  90D8               	bcf	status,0,c
  8654  0045C6  0EF6               	movlw	-10
  8655  0045C8  36E3               	rlcf	plusw1,f,c
  8656  0045CA  0EF7               	movlw	-9
  8657  0045CC  36E3               	rlcf	plusw1,f,c
  8658  0045CE  0EF8               	movlw	-8
  8659  0045D0  36E3               	rlcf	plusw1,f,c
  8660  0045D2                     
  8661                           ;stkvar	__tdiv_to_l_@cntr @ sp[(-6)+5]
  8662  0045D2  0EFF               	movlw	-1
  8663  0045D4  50E3               	movf	plusw1,w,c
  8664  0045D6  6E62               	movwf	btemp^0,c
  8665  0045D8  0E01               	movlw	1
  8666  0045DA  5E62               	subwf	btemp^0,f,c
  8667  0045DC  0EFF               	movlw	-1
  8668  0045DE  C062  FFE3         	movff	btemp,plusw1
  8669  0045E2  A4D8               	btfss	status,2,c
  8670  0045E4  EFF6  F022         	goto	u116_21
  8671  0045E8  EFF8  F022         	goto	u116_20
  8672  0045EC                     u116_21:
  8673  0045EC  EFAA  F022         	goto	l2192
  8674  0045F0                     u116_20:
  8675  0045F0                     
  8676                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
  8677  0045F0  0EFE               	movlw	-2
  8678  0045F2  BEE3               	btfsc	plusw1,7,c
  8679  0045F4  EF00  F023         	goto	u117_20
  8680  0045F8  EFFE  F022         	goto	u117_21
  8681  0045FC                     u117_21:
  8682  0045FC  EF21  F023         	goto	l2214
  8683  004600                     u117_20:
  8684  004600                     
  8685                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
  8686  004600  0EFE               	movlw	-2
  8687  004602  50E3               	movf	plusw1,w,c
  8688  004604  0A80               	xorlw	128
  8689  004606  0F97               	addlw	151
  8690  004608  B0D8               	btfsc	status,0,c
  8691  00460A  EF09  F023         	goto	u118_21
  8692  00460E  EF0B  F023         	goto	u118_20
  8693  004612                     u118_21:
  8694  004612  EF0D  F023         	goto	l2212
  8695  004616                     u118_20:
  8696  004616  EF52  F022         	goto	l2168
  8697  00461A                     l2212:
  8698                           
  8699                           ;stkvar	__tdiv_to_l_@quot @ sp[(-6)+0]
  8700  00461A  90D8               	bcf	status,0,c
  8701  00461C  0EFD               	movlw	-3
  8702  00461E  32E3               	rrcf	plusw1,f,c
  8703  004620  0EFC               	movlw	-4
  8704  004622  32E3               	rrcf	plusw1,f,c
  8705  004624  0EFB               	movlw	-5
  8706  004626  32E3               	rrcf	plusw1,f,c
  8707  004628  0EFA               	movlw	-6
  8708  00462A  32E3               	rrcf	plusw1,f,c
  8709                           
  8710                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
  8711  00462C  0EFE               	movlw	-2
  8712  00462E  2AE3               	incf	plusw1,f,c
  8713  004630  A4D8               	btfss	status,2,c
  8714  004632  EF1D  F023         	goto	u119_21
  8715  004636  EF1F  F023         	goto	u119_20
  8716  00463A                     u119_21:
  8717  00463A  EF0D  F023         	goto	l2212
  8718  00463E                     u119_20:
  8719  00463E  EF42  F023         	goto	l2224
  8720  004642                     l2214:
  8721                           
  8722                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
  8723  004642  0EFE               	movlw	-2
  8724  004644  CFE3 F062          	movff	plusw1,btemp
  8725  004648  0E17               	movlw	23
  8726  00464A  6462               	cpfsgt	btemp^0,c
  8727  00464C  EF2A  F023         	goto	u120_21
  8728  004650  EF2C  F023         	goto	u120_20
  8729  004654                     u120_21:
  8730  004654  EF39  F023         	goto	l2222
  8731  004658                     u120_20:
  8732  004658  EF52  F022         	goto	l2168
  8733  00465C                     l2220:
  8734                           
  8735                           ;stkvar	__tdiv_to_l_@quot @ sp[(-6)+0]
  8736  00465C  90D8               	bcf	status,0,c
  8737  00465E  0EFA               	movlw	-6
  8738  004660  36E3               	rlcf	plusw1,f,c
  8739  004662  0EFB               	movlw	-5
  8740  004664  36E3               	rlcf	plusw1,f,c
  8741  004666  0EFC               	movlw	-4
  8742  004668  36E3               	rlcf	plusw1,f,c
  8743  00466A  0EFD               	movlw	-3
  8744  00466C  36E3               	rlcf	plusw1,f,c
  8745                           
  8746                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
  8747  00466E  0EFE               	movlw	-2
  8748  004670  06E3               	decf	plusw1,f,c
  8749  004672                     l2222:
  8750                           
  8751                           ;stkvar	__tdiv_to_l_@exp1 @ sp[(-6)+4]
  8752  004672  0EFE               	movlw	-2
  8753  004674  50E3               	movf	plusw1,w,c
  8754  004676  A4D8               	btfss	status,2,c
  8755  004678  EF40  F023         	goto	u121_21
  8756  00467C  EF42  F023         	goto	u121_20
  8757  004680                     u121_21:
  8758  004680  EF2E  F023         	goto	l2220
  8759  004684                     u121_20:
  8760  004684                     l2224:
  8761                           
  8762                           ;stkvar	__tdiv_to_l_@quot @ sp[(-6)+0]
  8763  004684  0EFA               	movlw	-6
  8764  004686  CFE3 F062          	movff	plusw1,btemp
  8765  00468A  0EFB               	movlw	-5
  8766  00468C  CFE3 F063          	movff	plusw1,btemp+1
  8767  004690  0EFC               	movlw	-4
  8768  004692  CFE3 F064          	movff	plusw1,btemp+2
  8769  004696  0EFD               	movlw	-3
  8770  004698  CFE3 F065          	movff	plusw1,btemp+3
  8771  00469C                     l919:
  8772                           
  8773                           ; __tdiv_to_l_: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, a
      +                          rgsize = 8, vargsize = 0
  8774  00469C  0EF2               	movlw	242
  8775  00469E  26E1               	addwf	fsr1l,f,c
  8776  0046A0  0EFF               	movlw	255
  8777  0046A2  22E2               	addwfc	fsr1h,f,c
  8778  0046A4  0012               	return		;funcret
  8779  0046A6                     __end_of__tdiv_to_l_:
  8780                           	opt callstack 0
  8781                           
  8782 ;; *************** function __div_to_l_ *****************
  8783 ;; Defined at:
  8784 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;  f1              4  [STACK] unsigned long 
  8787 ;;  f2              4  [STACK] unsigned long 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;  quot            4  [STACK] unsigned long 
  8790 ;;  exp1            1  [STACK] unsigned char 
  8791 ;;  cntr            1  [STACK] unsigned char 
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  4  [STACK] unsigned long 
  8794 ;; Registers used:
  8795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8801 ;;      Params:         0       0       0       0       0       0       0
  8802 ;;      Locals:         0       0       0       0       0       0       0
  8803 ;;      Temps:          0       0       0       0       0       0       0
  8804 ;;      Totals:         0       0       0       0       0       0       0
  8805 ;;Total ram usage:        0 bytes
  8806 ;; Hardware stack levels used:    1
  8807 ;; Hardware stack levels required when called:    4
  8808 ;; This function calls:
  8809 ;;		Nothing
  8810 ;; This function is called by:
  8811 ;;		_sprintf
  8812 ;; This function uses a reentrant model
  8813 ;;
  8814                           
  8815                           	psect	text26
  8816  003D1E                     __ptext26:
  8817                           	opt callstack 0
  8818  003D1E                     __div_to_l_:
  8819                           	opt callstack 0
  8820                           
  8821                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8822  003D1E  0E06               	movlw	6
  8823  003D20  26E1               	addwf	fsr1l,f,c
  8824  003D22  0E00               	movlw	0
  8825  003D24  22E2               	addwfc	fsr1h,f,c
  8826  003D26                     
  8827                           ;stkvar	__div_to_l_@f1 @ sp[(-6)+-4]
  8828  003D26  0EF6               	movlw	-10
  8829  003D28  CFE3 F06A          	movff	plusw1,btemp+8
  8830  003D2C  0EF7               	movlw	-9
  8831  003D2E  CFE3 F06B          	movff	plusw1,btemp+9
  8832  003D32  0EF8               	movlw	-8
  8833  003D34  CFE3 F06C          	movff	plusw1,btemp+10
  8834  003D38  0EF9               	movlw	-7
  8835  003D3A  CFE3 F06D          	movff	plusw1,btemp+11
  8836  003D3E  0E18               	movlw	24
  8837  003D40  EFA7  F01E         	goto	u122_20
  8838  003D44                     u122_25:
  8839  003D44  90D8               	bcf	status,0,c
  8840  003D46  326D               	rrcf	(btemp+11)^0,f,c
  8841  003D48  326C               	rrcf	(btemp+10)^0,f,c
  8842  003D4A  326B               	rrcf	(btemp+9)^0,f,c
  8843  003D4C  326A               	rrcf	(btemp+8)^0,f,c
  8844  003D4E                     u122_20:
  8845  003D4E  2EE8               	decfsz	wreg,f,c
  8846  003D50  EFA2  F01E         	goto	u122_25
  8847                           
  8848                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
  8849  003D54  0EFE               	movlw	-2
  8850  003D56  C06A  FFE3         	movff	btemp+8,plusw1
  8851  003D5A  0EFE               	movlw	-2
  8852  003D5C  50E3               	movf	plusw1,w,c
  8853  003D5E  A4D8               	btfss	status,2,c
  8854  003D60  EFB4  F01E         	goto	u123_21
  8855  003D64  EFB6  F01E         	goto	u123_20
  8856  003D68                     u123_21:
  8857  003D68  EFBD  F01E         	goto	l2234
  8858  003D6C                     u123_20:
  8859  003D6C                     l2230:
  8860  003D6C  0E00               	movlw	0
  8861  003D6E  6E62               	movwf	btemp^0,c
  8862  003D70  6A63               	clrf	(btemp+1)^0,c
  8863  003D72  6A64               	clrf	(btemp+2)^0,c
  8864  003D74  6A65               	clrf	(btemp+3)^0,c
  8865  003D76  EFCC  F01F         	goto	l810
  8866  003D7A                     l2234:
  8867                           
  8868                           ;stkvar	__div_to_l_@f2 @ sp[(-6)+-8]
  8869  003D7A  0EF2               	movlw	-14
  8870  003D7C  CFE3 F06A          	movff	plusw1,btemp+8
  8871  003D80  0EF3               	movlw	-13
  8872  003D82  CFE3 F06B          	movff	plusw1,btemp+9
  8873  003D86  0EF4               	movlw	-12
  8874  003D88  CFE3 F06C          	movff	plusw1,btemp+10
  8875  003D8C  0EF5               	movlw	-11
  8876  003D8E  CFE3 F06D          	movff	plusw1,btemp+11
  8877  003D92  0E18               	movlw	24
  8878  003D94  EFD1  F01E         	goto	u124_20
  8879  003D98                     u124_25:
  8880  003D98  90D8               	bcf	status,0,c
  8881  003D9A  326D               	rrcf	(btemp+11)^0,f,c
  8882  003D9C  326C               	rrcf	(btemp+10)^0,f,c
  8883  003D9E  326B               	rrcf	(btemp+9)^0,f,c
  8884  003DA0  326A               	rrcf	(btemp+8)^0,f,c
  8885  003DA2                     u124_20:
  8886  003DA2  2EE8               	decfsz	wreg,f,c
  8887  003DA4  EFCC  F01E         	goto	u124_25
  8888                           
  8889                           ;stkvar	__div_to_l_@cntr @ sp[(-6)+5]
  8890  003DA8  0EFF               	movlw	-1
  8891  003DAA  C06A  FFE3         	movff	btemp+8,plusw1
  8892  003DAE  0EFF               	movlw	-1
  8893  003DB0  50E3               	movf	plusw1,w,c
  8894  003DB2  A4D8               	btfss	status,2,c
  8895  003DB4  EFDE  F01E         	goto	u125_21
  8896  003DB8  EFE0  F01E         	goto	u125_20
  8897  003DBC                     u125_21:
  8898  003DBC  EFE2  F01E         	goto	l2240
  8899  003DC0                     u125_20:
  8900  003DC0  EFB6  F01E         	goto	l2230
  8901  003DC4                     l2240:
  8902                           
  8903                           ;stkvar	__div_to_l_@f1 @ sp[(-6)+-4]
  8904  003DC4  0EF8               	movlw	-8
  8905  003DC6  8EE3               	bsf	plusw1,7,c
  8906  003DC8                     
  8907                           ;stkvar	__div_to_l_@f1 @ sp[(-6)+-4]
  8908  003DC8  50E1               	movf	fsr1l,w,c
  8909  003DCA  0FF6               	addlw	-10
  8910  003DCC  6ED9               	movwf	fsr2l,c
  8911  003DCE  50E2               	movf	fsr1h,w,c
  8912  003DD0  6EDA               	movwf	fsr2h,c
  8913  003DD2  0EFF               	movlw	255
  8914  003DD4  22DA               	addwfc	fsr2h,f,c
  8915  003DD6  0EFF               	movlw	255
  8916  003DD8  16DE               	andwf	postinc2,f,c
  8917  003DDA  0EFF               	movlw	255
  8918  003DDC  16DE               	andwf	postinc2,f,c
  8919  003DDE  0EFF               	movlw	255
  8920  003DE0  16DE               	andwf	postinc2,f,c
  8921  003DE2  0E00               	movlw	0
  8922  003DE4  16DE               	andwf	postinc2,f,c
  8923  003DE6                     
  8924                           ;stkvar	__div_to_l_@f2 @ sp[(-6)+-8]
  8925  003DE6  0EF4               	movlw	-12
  8926  003DE8  8EE3               	bsf	plusw1,7,c
  8927                           
  8928                           ;stkvar	__div_to_l_@f2 @ sp[(-6)+-8]
  8929  003DEA  50E1               	movf	fsr1l,w,c
  8930  003DEC  0FF2               	addlw	-14
  8931  003DEE  6ED9               	movwf	fsr2l,c
  8932  003DF0  50E2               	movf	fsr1h,w,c
  8933  003DF2  6EDA               	movwf	fsr2h,c
  8934  003DF4  0EFF               	movlw	255
  8935  003DF6  22DA               	addwfc	fsr2h,f,c
  8936  003DF8  0EFF               	movlw	255
  8937  003DFA  16DE               	andwf	postinc2,f,c
  8938  003DFC  0EFF               	movlw	255
  8939  003DFE  16DE               	andwf	postinc2,f,c
  8940  003E00  0EFF               	movlw	255
  8941  003E02  16DE               	andwf	postinc2,f,c
  8942  003E04  0E00               	movlw	0
  8943  003E06  16DE               	andwf	postinc2,f,c
  8944  003E08                     
  8945                           ;stkvar	__div_to_l_@quot @ sp[(-6)+0]
  8946  003E08  0EFA               	movlw	-6
  8947  003E0A  6AE3               	clrf	plusw1,c
  8948  003E0C  0EFB               	movlw	-5
  8949  003E0E  6AE3               	clrf	plusw1,c
  8950  003E10  0EFC               	movlw	-4
  8951  003E12  6AE3               	clrf	plusw1,c
  8952  003E14  0EFD               	movlw	-3
  8953  003E16  6AE3               	clrf	plusw1,c
  8954  003E18                     
  8955                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
  8956  003E18  0EFE               	movlw	-2
  8957  003E1A  CFE3 F062          	movff	plusw1,btemp
  8958  003E1E  0E7F               	movlw	127
  8959  003E20  5E62               	subwf	btemp^0,f,c
  8960  003E22  0EFE               	movlw	-2
  8961  003E24  C062  FFE3         	movff	btemp,plusw1
  8962  003E28  0EA0               	movlw	160
  8963  003E2A  6E6D               	movwf	(btemp+11)^0,c
  8964                           
  8965                           ;stkvar	__div_to_l_@cntr @ sp[(-6)+5]
  8966  003E2C  0EFF               	movlw	-1
  8967  003E2E  50E3               	movf	plusw1,w,c
  8968  003E30  246D               	addwf	(btemp+11)^0,w,c
  8969  003E32  6E6C               	movwf	(btemp+10)^0,c
  8970                           
  8971                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
  8972  003E34  50E1               	movf	fsr1l,w,c
  8973  003E36  0FFE               	addlw	-2
  8974  003E38  6ED9               	movwf	fsr2l,c
  8975  003E3A  50E2               	movf	fsr1h,w,c
  8976  003E3C  6EDA               	movwf	fsr2h,c
  8977  003E3E  0EFF               	movlw	255
  8978  003E40  22DA               	addwfc	fsr2h,f,c
  8979  003E42  506C               	movf	(btemp+10)^0,w,c
  8980  003E44  5EDF               	subwf	indf2,f,c
  8981  003E46                     
  8982                           ;stkvar	__div_to_l_@cntr @ sp[(-6)+5]
  8983  003E46  0EFF               	movlw	-1
  8984  003E48  6AE3               	clrf	plusw1,c
  8985  003E4A  8AE3               	bsf	plusw1,5,c
  8986  003E4C                     l2254:
  8987                           
  8988                           ;stkvar	__div_to_l_@quot @ sp[(-6)+0]
  8989  003E4C  90D8               	bcf	status,0,c
  8990  003E4E  0EFA               	movlw	-6
  8991  003E50  36E3               	rlcf	plusw1,f,c
  8992  003E52  0EFB               	movlw	-5
  8993  003E54  36E3               	rlcf	plusw1,f,c
  8994  003E56  0EFC               	movlw	-4
  8995  003E58  36E3               	rlcf	plusw1,f,c
  8996  003E5A  0EFD               	movlw	-3
  8997  003E5C  36E3               	rlcf	plusw1,f,c
  8998  003E5E                     
  8999                           ;stkvar	__div_to_l_@f2 @ sp[(-6)+-8]
  9000                           ;stkvar	__div_to_l_@f1 @ sp[(-6)+-4]
  9001  003E5E  50E1               	movf	fsr1l,w,c
  9002  003E60  0FF6               	addlw	-10
  9003  003E62  6ED9               	movwf	fsr2l,c
  9004  003E64  50E2               	movf	fsr1h,w,c
  9005  003E66  6EDA               	movwf	fsr2h,c
  9006  003E68  0EFF               	movlw	255
  9007  003E6A  22DA               	addwfc	fsr2h,f,c
  9008  003E6C  0EF2               	movlw	-14
  9009  003E6E  50E3               	movf	plusw1,w,c
  9010  003E70  5CDE               	subwf	postinc2,w,c
  9011  003E72  0EF3               	movlw	-13
  9012  003E74  50E3               	movf	plusw1,w,c
  9013  003E76  58DE               	subwfb	postinc2,w,c
  9014  003E78  0EF4               	movlw	-12
  9015  003E7A  50E3               	movf	plusw1,w,c
  9016  003E7C  58DE               	subwfb	postinc2,w,c
  9017  003E7E  0EF5               	movlw	-11
  9018  003E80  50E3               	movf	plusw1,w,c
  9019  003E82  58DE               	subwfb	postinc2,w,c
  9020  003E84  A0D8               	btfss	status,0,c
  9021  003E86  EF47  F01F         	goto	u126_21
  9022  003E8A  EF49  F01F         	goto	u126_20
  9023  003E8E                     u126_21:
  9024  003E8E  EF5E  F01F         	goto	l2262
  9025  003E92                     u126_20:
  9026  003E92                     
  9027                           ;stkvar	__div_to_l_@f2 @ sp[(-6)+-8]
  9028                           ;stkvar	__div_to_l_@f1 @ sp[(-6)+-4]
  9029  003E92  50E1               	movf	fsr1l,w,c
  9030  003E94  0FF6               	addlw	-10
  9031  003E96  6ED9               	movwf	fsr2l,c
  9032  003E98  50E2               	movf	fsr1h,w,c
  9033  003E9A  6EDA               	movwf	fsr2h,c
  9034  003E9C  0EFF               	movlw	255
  9035  003E9E  22DA               	addwfc	fsr2h,f,c
  9036  003EA0  0EF2               	movlw	-14
  9037  003EA2  50E3               	movf	plusw1,w,c
  9038  003EA4  5EDE               	subwf	postinc2,f,c
  9039  003EA6  0EF3               	movlw	-13
  9040  003EA8  50E3               	movf	plusw1,w,c
  9041  003EAA  5ADE               	subwfb	postinc2,f,c
  9042  003EAC  0EF4               	movlw	-12
  9043  003EAE  50E3               	movf	plusw1,w,c
  9044  003EB0  5ADE               	subwfb	postinc2,f,c
  9045  003EB2  0EF5               	movlw	-11
  9046  003EB4  50E3               	movf	plusw1,w,c
  9047  003EB6  5ADE               	subwfb	postinc2,f,c
  9048  003EB8                     
  9049                           ;stkvar	__div_to_l_@quot @ sp[(-6)+0]
  9050  003EB8  0EFA               	movlw	-6
  9051  003EBA  80E3               	bsf	plusw1,0,c
  9052  003EBC                     l2262:
  9053                           
  9054                           ;stkvar	__div_to_l_@f1 @ sp[(-6)+-4]
  9055  003EBC  90D8               	bcf	status,0,c
  9056  003EBE  0EF6               	movlw	-10
  9057  003EC0  36E3               	rlcf	plusw1,f,c
  9058  003EC2  0EF7               	movlw	-9
  9059  003EC4  36E3               	rlcf	plusw1,f,c
  9060  003EC6  0EF8               	movlw	-8
  9061  003EC8  36E3               	rlcf	plusw1,f,c
  9062  003ECA  0EF9               	movlw	-7
  9063  003ECC  36E3               	rlcf	plusw1,f,c
  9064  003ECE                     
  9065                           ;stkvar	__div_to_l_@cntr @ sp[(-6)+5]
  9066  003ECE  0EFF               	movlw	-1
  9067  003ED0  50E3               	movf	plusw1,w,c
  9068  003ED2  6E62               	movwf	btemp^0,c
  9069  003ED4  0E01               	movlw	1
  9070  003ED6  5E62               	subwf	btemp^0,f,c
  9071  003ED8  0EFF               	movlw	-1
  9072  003EDA  C062  FFE3         	movff	btemp,plusw1
  9073  003EDE  A4D8               	btfss	status,2,c
  9074  003EE0  EF74  F01F         	goto	u127_21
  9075  003EE4  EF76  F01F         	goto	u127_20
  9076  003EE8                     u127_21:
  9077  003EE8  EF26  F01F         	goto	l2254
  9078  003EEC                     u127_20:
  9079  003EEC                     
  9080                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
  9081  003EEC  0EFE               	movlw	-2
  9082  003EEE  BEE3               	btfsc	plusw1,7,c
  9083  003EF0  EF7E  F01F         	goto	u128_20
  9084  003EF4  EF7C  F01F         	goto	u128_21
  9085  003EF8                     u128_21:
  9086  003EF8  EF9F  F01F         	goto	l2276
  9087  003EFC                     u128_20:
  9088  003EFC                     
  9089                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
  9090  003EFC  0EFE               	movlw	-2
  9091  003EFE  50E3               	movf	plusw1,w,c
  9092  003F00  0A80               	xorlw	128
  9093  003F02  0F9F               	addlw	159
  9094  003F04  B0D8               	btfsc	status,0,c
  9095  003F06  EF87  F01F         	goto	u129_21
  9096  003F0A  EF89  F01F         	goto	u129_20
  9097  003F0E                     u129_21:
  9098  003F0E  EF8B  F01F         	goto	l2274
  9099  003F12                     u129_20:
  9100  003F12  EFB6  F01E         	goto	l2230
  9101  003F16                     l2274:
  9102                           
  9103                           ;stkvar	__div_to_l_@quot @ sp[(-6)+0]
  9104  003F16  90D8               	bcf	status,0,c
  9105  003F18  0EFD               	movlw	-3
  9106  003F1A  32E3               	rrcf	plusw1,f,c
  9107  003F1C  0EFC               	movlw	-4
  9108  003F1E  32E3               	rrcf	plusw1,f,c
  9109  003F20  0EFB               	movlw	-5
  9110  003F22  32E3               	rrcf	plusw1,f,c
  9111  003F24  0EFA               	movlw	-6
  9112  003F26  32E3               	rrcf	plusw1,f,c
  9113                           
  9114                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
  9115  003F28  0EFE               	movlw	-2
  9116  003F2A  2AE3               	incf	plusw1,f,c
  9117  003F2C  A4D8               	btfss	status,2,c
  9118  003F2E  EF9B  F01F         	goto	u130_21
  9119  003F32  EF9D  F01F         	goto	u130_20
  9120  003F36                     u130_21:
  9121  003F36  EF8B  F01F         	goto	l2274
  9122  003F3A                     u130_20:
  9123  003F3A  EFC0  F01F         	goto	l2286
  9124  003F3E                     l2276:
  9125                           
  9126                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
  9127  003F3E  0EFE               	movlw	-2
  9128  003F40  CFE3 F062          	movff	plusw1,btemp
  9129  003F44  0E1F               	movlw	31
  9130  003F46  6462               	cpfsgt	btemp^0,c
  9131  003F48  EFA8  F01F         	goto	u131_21
  9132  003F4C  EFAA  F01F         	goto	u131_20
  9133  003F50                     u131_21:
  9134  003F50  EFB7  F01F         	goto	l2284
  9135  003F54                     u131_20:
  9136  003F54  EFB6  F01E         	goto	l2230
  9137  003F58                     l2282:
  9138                           
  9139                           ;stkvar	__div_to_l_@quot @ sp[(-6)+0]
  9140  003F58  90D8               	bcf	status,0,c
  9141  003F5A  0EFA               	movlw	-6
  9142  003F5C  36E3               	rlcf	plusw1,f,c
  9143  003F5E  0EFB               	movlw	-5
  9144  003F60  36E3               	rlcf	plusw1,f,c
  9145  003F62  0EFC               	movlw	-4
  9146  003F64  36E3               	rlcf	plusw1,f,c
  9147  003F66  0EFD               	movlw	-3
  9148  003F68  36E3               	rlcf	plusw1,f,c
  9149                           
  9150                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
  9151  003F6A  0EFE               	movlw	-2
  9152  003F6C  06E3               	decf	plusw1,f,c
  9153  003F6E                     l2284:
  9154                           
  9155                           ;stkvar	__div_to_l_@exp1 @ sp[(-6)+4]
  9156  003F6E  0EFE               	movlw	-2
  9157  003F70  50E3               	movf	plusw1,w,c
  9158  003F72  A4D8               	btfss	status,2,c
  9159  003F74  EFBE  F01F         	goto	u132_21
  9160  003F78  EFC0  F01F         	goto	u132_20
  9161  003F7C                     u132_21:
  9162  003F7C  EFAC  F01F         	goto	l2282
  9163  003F80                     u132_20:
  9164  003F80                     l2286:
  9165                           
  9166                           ;stkvar	__div_to_l_@quot @ sp[(-6)+0]
  9167  003F80  0EFA               	movlw	-6
  9168  003F82  CFE3 F062          	movff	plusw1,btemp
  9169  003F86  0EFB               	movlw	-5
  9170  003F88  CFE3 F063          	movff	plusw1,btemp+1
  9171  003F8C  0EFC               	movlw	-4
  9172  003F8E  CFE3 F064          	movff	plusw1,btemp+2
  9173  003F92  0EFD               	movlw	-3
  9174  003F94  CFE3 F065          	movff	plusw1,btemp+3
  9175  003F98                     l810:
  9176                           
  9177                           ; __div_to_l_: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, ar
      +                          gsize = 8, vargsize = 0
  9178  003F98  0EF2               	movlw	242
  9179  003F9A  26E1               	addwf	fsr1l,f,c
  9180  003F9C  0EFF               	movlw	255
  9181  003F9E  22E2               	addwfc	fsr1h,f,c
  9182  003FA0  0012               	return		;funcret
  9183  003FA2                     __end_of__div_to_l_:
  9184                           	opt callstack 0
  9185                           
  9186 ;; *************** function ___xxtofl *****************
  9187 ;; Defined at:
  9188 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;  sign            1  [STACK] unsigned char 
  9191 ;;  val             4  [STACK] long 
  9192 ;; Auto vars:     Size  Location     Type
  9193 ;;  arg             4  [STACK] unsigned long 
  9194 ;;  exp             1  [STACK] unsigned char 
  9195 ;; Return value:  Size  Location     Type
  9196 ;;                  4  [STACK] unsigned char 
  9197 ;; Registers used:
  9198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  9199 ;; Tracked objects:
  9200 ;;		On entry : 0/0
  9201 ;;		On exit  : 0/0
  9202 ;;		Unchanged: 0/0
  9203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9204 ;;      Params:         0       0       0       0       0       0       0
  9205 ;;      Locals:         0       0       0       0       0       0       0
  9206 ;;      Temps:          0       0       0       0       0       0       0
  9207 ;;      Totals:         0       0       0       0       0       0       0
  9208 ;;Total ram usage:        0 bytes
  9209 ;; Hardware stack levels used:    1
  9210 ;; Hardware stack levels required when called:    4
  9211 ;; This function calls:
  9212 ;;		Nothing
  9213 ;; This function is called by:
  9214 ;;		_task_lcd
  9215 ;;		_sprintf
  9216 ;; This function uses a reentrant model
  9217 ;;
  9218                           
  9219                           	psect	text27
  9220  003FA2                     __ptext27:
  9221                           	opt callstack 0
  9222  003FA2                     ___xxtofl:
  9223                           	opt callstack 0
  9224                           
  9225                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9226  003FA2  0E05               	movlw	5
  9227  003FA4  26E1               	addwf	fsr1l,f,c
  9228  003FA6  0E00               	movlw	0
  9229  003FA8  22E2               	addwfc	fsr1h,f,c
  9230  003FAA                     
  9231                           ;stkvar	___xxtofl@sign @ sp[(-5)+-1]
  9232  003FAA  0EFA               	movlw	-6
  9233  003FAC  50E3               	movf	plusw1,w,c
  9234  003FAE  B4D8               	btfsc	status,2,c
  9235  003FB0  EFDC  F01F         	goto	u160_21
  9236  003FB4  EFDE  F01F         	goto	u160_20
  9237  003FB8                     u160_21:
  9238  003FB8  EF09  F020         	goto	l2450
  9239  003FBC                     u160_20:
  9240  003FBC                     
  9241                           ;stkvar	___xxtofl@val @ sp[(-5)+-5]
  9242  003FBC  0EF9               	movlw	-7
  9243  003FBE  BEE3               	btfsc	plusw1,7,c
  9244  003FC0  EFE6  F01F         	goto	u161_20
  9245  003FC4  EFE4  F01F         	goto	u161_21
  9246  003FC8                     u161_21:
  9247  003FC8  EF09  F020         	goto	l2450
  9248  003FCC                     u161_20:
  9249  003FCC                     
  9250                           ;stkvar	___xxtofl@val @ sp[(-5)+-5]
  9251  003FCC  0EF6               	movlw	-10
  9252  003FCE  CFE3 F06A          	movff	plusw1,btemp+8
  9253  003FD2  0EF7               	movlw	-9
  9254  003FD4  CFE3 F06B          	movff	plusw1,btemp+9
  9255  003FD8  0EF8               	movlw	-8
  9256  003FDA  CFE3 F06C          	movff	plusw1,btemp+10
  9257  003FDE  0EF9               	movlw	-7
  9258  003FE0  CFE3 F06D          	movff	plusw1,btemp+11
  9259  003FE4  1E6A               	comf	(btemp+8)^0,f,c
  9260  003FE6  1E6B               	comf	(btemp+9)^0,f,c
  9261  003FE8  1E6C               	comf	(btemp+10)^0,f,c
  9262  003FEA  1E6D               	comf	(btemp+11)^0,f,c
  9263  003FEC  2A6A               	incf	(btemp+8)^0,f,c
  9264  003FEE  0E00               	movlw	0
  9265  003FF0  226B               	addwfc	(btemp+9)^0,f,c
  9266  003FF2  226C               	addwfc	(btemp+10)^0,f,c
  9267  003FF4  226D               	addwfc	(btemp+11)^0,f,c
  9268                           
  9269                           ;stkvar	___xxtofl@arg @ sp[(-5)+0]
  9270  003FF6  0EFB               	movlw	-5
  9271  003FF8  C06A  FFE3         	movff	btemp+8,plusw1
  9272  003FFC  0EFC               	movlw	-4
  9273  003FFE  C06B  FFE3         	movff	btemp+9,plusw1
  9274  004002  0EFD               	movlw	-3
  9275  004004  C06C  FFE3         	movff	btemp+10,plusw1
  9276  004008  0EFE               	movlw	-2
  9277  00400A  C06D  FFE3         	movff	btemp+11,plusw1
  9278  00400E  EF21  F020         	goto	l2452
  9279  004012                     l2450:
  9280                           
  9281                           ;stkvar	___xxtofl@val @ sp[(-5)+-5]
  9282  004012  0EF6               	movlw	-10
  9283  004014  CFE3 F06A          	movff	plusw1,btemp+8
  9284  004018  0EF7               	movlw	-9
  9285  00401A  CFE3 F06B          	movff	plusw1,btemp+9
  9286  00401E  0EF8               	movlw	-8
  9287  004020  CFE3 F06C          	movff	plusw1,btemp+10
  9288  004024  0EF9               	movlw	-7
  9289  004026  CFE3 F06D          	movff	plusw1,btemp+11
  9290                           
  9291                           ;stkvar	___xxtofl@arg @ sp[(-5)+0]
  9292  00402A  0EFB               	movlw	-5
  9293  00402C  C06A  FFE3         	movff	btemp+8,plusw1
  9294  004030  0EFC               	movlw	-4
  9295  004032  C06B  FFE3         	movff	btemp+9,plusw1
  9296  004036  0EFD               	movlw	-3
  9297  004038  C06C  FFE3         	movff	btemp+10,plusw1
  9298  00403C  0EFE               	movlw	-2
  9299  00403E  C06D  FFE3         	movff	btemp+11,plusw1
  9300  004042                     l2452:
  9301                           
  9302                           ;stkvar	___xxtofl@val @ sp[(-5)+-5]
  9303  004042  0EF6               	movlw	-10
  9304  004044  50E3               	movf	plusw1,w,c
  9305  004046  E10D               	bnz	u162_21
  9306  004048  0EF7               	movlw	-9
  9307  00404A  50E3               	movf	plusw1,w,c
  9308  00404C  E10A               	bnz	u162_21
  9309  00404E  0EF8               	movlw	-8
  9310  004050  50E3               	movf	plusw1,w,c
  9311  004052  E107               	bnz	u162_21
  9312  004054  0EF9               	movlw	-7
  9313  004056  50E3               	movf	plusw1,w,c
  9314  004058  A4D8               	btfss	status,2,c
  9315  00405A  EF31  F020         	goto	u162_21
  9316  00405E  EF33  F020         	goto	u162_20
  9317  004062                     u162_21:
  9318  004062  EF3D  F020         	goto	l2458
  9319  004066                     u162_20:
  9320  004066  0E00               	movlw	0
  9321  004068  6E62               	movwf	btemp^0,c
  9322  00406A  0E00               	movlw	0
  9323  00406C  6E63               	movwf	(btemp+1)^0,c
  9324  00406E  0E00               	movlw	0
  9325  004070  6E64               	movwf	(btemp+2)^0,c
  9326  004072  0E00               	movlw	0
  9327  004074  6E65               	movwf	(btemp+3)^0,c
  9328  004076  EFFC  F020         	goto	l1236
  9329  00407A                     l2458:
  9330  00407A  0E96               	movlw	150
  9331  00407C  6E6D               	movwf	(btemp+11)^0,c
  9332                           
  9333                           ;stkvar	___xxtofl@exp @ sp[(-5)+4]
  9334  00407E  0EFF               	movlw	-1
  9335  004080  C06D  FFE3         	movff	btemp+11,plusw1
  9336  004084  EF4F  F020         	goto	l2462
  9337  004088                     l2460:
  9338                           
  9339                           ;stkvar	___xxtofl@exp @ sp[(-5)+4]
  9340  004088  0EFF               	movlw	-1
  9341  00408A  2AE3               	incf	plusw1,f,c
  9342                           
  9343                           ;stkvar	___xxtofl@arg @ sp[(-5)+0]
  9344  00408C  90D8               	bcf	status,0,c
  9345  00408E  0EFE               	movlw	-2
  9346  004090  32E3               	rrcf	plusw1,f,c
  9347  004092  0EFD               	movlw	-3
  9348  004094  32E3               	rrcf	plusw1,f,c
  9349  004096  0EFC               	movlw	-4
  9350  004098  32E3               	rrcf	plusw1,f,c
  9351  00409A  0EFB               	movlw	-5
  9352  00409C  32E3               	rrcf	plusw1,f,c
  9353  00409E                     l2462:
  9354                           
  9355                           ;stkvar	___xxtofl@arg @ sp[(-5)+0]
  9356  00409E  50E1               	movf	fsr1l,w,c
  9357  0040A0  0FFB               	addlw	-5
  9358  0040A2  6ED9               	movwf	fsr2l,c
  9359  0040A4  50E2               	movf	fsr1h,w,c
  9360  0040A6  6EDA               	movwf	fsr2h,c
  9361  0040A8  0EFF               	movlw	255
  9362  0040AA  22DA               	addwfc	fsr2h,f,c
  9363  0040AC  52DE               	movf	postinc2,f,c
  9364  0040AE  52DE               	movf	postinc2,f,c
  9365  0040B0  52DE               	movf	postinc2,f,c
  9366  0040B2  0EFE               	movlw	254
  9367  0040B4  14DD               	andwf	postdec2,w,c
  9368  0040B6  A4D8               	btfss	status,2,c
  9369  0040B8  EF60  F020         	goto	u163_21
  9370  0040BC  EF62  F020         	goto	u163_20
  9371  0040C0                     u163_21:
  9372  0040C0  EF44  F020         	goto	l2460
  9373  0040C4                     u163_20:
  9374  0040C4  EF7B  F020         	goto	l2470
  9375  0040C8                     l2464:
  9376                           
  9377                           ;stkvar	___xxtofl@exp @ sp[(-5)+4]
  9378  0040C8  0EFF               	movlw	-1
  9379  0040CA  2AE3               	incf	plusw1,f,c
  9380  0040CC                     
  9381                           ;stkvar	___xxtofl@arg @ sp[(-5)+0]
  9382  0040CC  50E1               	movf	fsr1l,w,c
  9383  0040CE  0FFB               	addlw	-5
  9384  0040D0  6ED9               	movwf	fsr2l,c
  9385  0040D2  50E2               	movf	fsr1h,w,c
  9386  0040D4  6EDA               	movwf	fsr2h,c
  9387  0040D6  0EFF               	movlw	255
  9388  0040D8  22DA               	addwfc	fsr2h,f,c
  9389  0040DA  2ADE               	incf	postinc2,f,c
  9390  0040DC  0E00               	movlw	0
  9391  0040DE  22DE               	addwfc	postinc2,f,c
  9392  0040E0  22DE               	addwfc	postinc2,f,c
  9393  0040E2  22DE               	addwfc	postinc2,f,c
  9394  0040E4                     
  9395                           ;stkvar	___xxtofl@arg @ sp[(-5)+0]
  9396  0040E4  90D8               	bcf	status,0,c
  9397  0040E6  0EFE               	movlw	-2
  9398  0040E8  32E3               	rrcf	plusw1,f,c
  9399  0040EA  0EFD               	movlw	-3
  9400  0040EC  32E3               	rrcf	plusw1,f,c
  9401  0040EE  0EFC               	movlw	-4
  9402  0040F0  32E3               	rrcf	plusw1,f,c
  9403  0040F2  0EFB               	movlw	-5
  9404  0040F4  32E3               	rrcf	plusw1,f,c
  9405  0040F6                     l2470:
  9406                           
  9407                           ;stkvar	___xxtofl@arg @ sp[(-5)+0]
  9408  0040F6  50E1               	movf	fsr1l,w,c
  9409  0040F8  0FFB               	addlw	-5
  9410  0040FA  6ED9               	movwf	fsr2l,c
  9411  0040FC  50E2               	movf	fsr1h,w,c
  9412  0040FE  6EDA               	movwf	fsr2h,c
  9413  004100  0EFF               	movlw	255
  9414  004102  22DA               	addwfc	fsr2h,f,c
  9415  004104  52DE               	movf	postinc2,f,c
  9416  004106  52DE               	movf	postinc2,f,c
  9417  004108  52DE               	movf	postinc2,f,c
  9418  00410A  0EFF               	movlw	255
  9419  00410C  14DD               	andwf	postdec2,w,c
  9420  00410E  A4D8               	btfss	status,2,c
  9421  004110  EF8C  F020         	goto	u164_21
  9422  004114  EF8E  F020         	goto	u164_20
  9423  004118                     u164_21:
  9424  004118  EF64  F020         	goto	l2464
  9425  00411C                     u164_20:
  9426  00411C  EF9B  F020         	goto	l2474
  9427  004120                     l2472:
  9428                           
  9429                           ;stkvar	___xxtofl@exp @ sp[(-5)+4]
  9430  004120  0EFF               	movlw	-1
  9431  004122  06E3               	decf	plusw1,f,c
  9432                           
  9433                           ;stkvar	___xxtofl@arg @ sp[(-5)+0]
  9434  004124  90D8               	bcf	status,0,c
  9435  004126  0EFB               	movlw	-5
  9436  004128  36E3               	rlcf	plusw1,f,c
  9437  00412A  0EFC               	movlw	-4
  9438  00412C  36E3               	rlcf	plusw1,f,c
  9439  00412E  0EFD               	movlw	-3
  9440  004130  36E3               	rlcf	plusw1,f,c
  9441  004132  0EFE               	movlw	-2
  9442  004134  36E3               	rlcf	plusw1,f,c
  9443  004136                     l2474:
  9444                           
  9445                           ;stkvar	___xxtofl@arg @ sp[(-5)+0]
  9446  004136  0EFD               	movlw	-3
  9447  004138  BEE3               	btfsc	plusw1,7,c
  9448  00413A  EFA1  F020         	goto	u165_21
  9449  00413E  EFA3  F020         	goto	u165_20
  9450  004142                     u165_21:
  9451  004142  EFAE  F020         	goto	l2478
  9452  004146                     u165_20:
  9453  004146                     
  9454                           ;stkvar	___xxtofl@exp @ sp[(-5)+4]
  9455  004146  0EFF               	movlw	-1
  9456  004148  CFE3 F062          	movff	plusw1,btemp
  9457  00414C  0E02               	movlw	2
  9458  00414E  6062               	cpfslt	btemp^0,c
  9459  004150  EFAC  F020         	goto	u166_21
  9460  004154  EFAE  F020         	goto	u166_20
  9461  004158                     u166_21:
  9462  004158  EF90  F020         	goto	l2472
  9463  00415C                     u166_20:
  9464  00415C                     l2478:
  9465                           
  9466                           ;stkvar	___xxtofl@exp @ sp[(-5)+4]
  9467  00415C  0EFF               	movlw	-1
  9468  00415E  B0E3               	btfsc	plusw1,0,c
  9469  004160  EFB4  F020         	goto	u167_21
  9470  004164  EFB6  F020         	goto	u167_20
  9471  004168                     u167_21:
  9472  004168  EFB8  F020         	goto	l2482
  9473  00416C                     u167_20:
  9474  00416C                     
  9475                           ;stkvar	___xxtofl@arg @ sp[(-5)+0]
  9476  00416C  0EFD               	movlw	-3
  9477  00416E  9EE3               	bcf	plusw1,7,c
  9478  004170                     l2482:
  9479                           
  9480                           ;stkvar	___xxtofl@exp @ sp[(-5)+4]
  9481  004170  50E1               	movf	fsr1l,w,c
  9482  004172  0FFF               	addlw	-1
  9483  004174  6ED9               	movwf	fsr2l,c
  9484  004176  50E2               	movf	fsr1h,w,c
  9485  004178  6EDA               	movwf	fsr2h,c
  9486  00417A  0EFF               	movlw	255
  9487  00417C  22DA               	addwfc	fsr2h,f,c
  9488  00417E  90D8               	bcf	status,0,c
  9489  004180  32DF               	rrcf	indf2,f,c
  9490  004182                     
  9491                           ;stkvar	___xxtofl@exp @ sp[(-5)+4]
  9492  004182  0EFF               	movlw	-1
  9493  004184  CFE3 F06D          	movff	plusw1,btemp+11
  9494  004188  C06D  F066         	movff	btemp+11,btemp+4
  9495  00418C  6A67               	clrf	(btemp+5)^0,c
  9496  00418E  6A68               	clrf	(btemp+6)^0,c
  9497  004190  6A69               	clrf	(btemp+7)^0,c
  9498  004192  C066  F069         	movff	btemp+4,btemp+7
  9499  004196  6A68               	clrf	(btemp+6)^0,c
  9500  004198  6A67               	clrf	(btemp+5)^0,c
  9501  00419A  6A66               	clrf	(btemp+4)^0,c
  9502                           
  9503                           ;stkvar	___xxtofl@arg @ sp[(-5)+0]
  9504  00419C  50E1               	movf	fsr1l,w,c
  9505  00419E  0FFB               	addlw	-5
  9506  0041A0  6ED9               	movwf	fsr2l,c
  9507  0041A2  50E2               	movf	fsr1h,w,c
  9508  0041A4  6EDA               	movwf	fsr2h,c
  9509  0041A6  0EFF               	movlw	255
  9510  0041A8  22DA               	addwfc	fsr2h,f,c
  9511  0041AA  5066               	movf	(btemp+4)^0,w,c
  9512  0041AC  12DE               	iorwf	postinc2,f,c
  9513  0041AE  5067               	movf	(btemp+5)^0,w,c
  9514  0041B0  12DE               	iorwf	postinc2,f,c
  9515  0041B2  5068               	movf	(btemp+6)^0,w,c
  9516  0041B4  12DE               	iorwf	postinc2,f,c
  9517  0041B6  5069               	movf	(btemp+7)^0,w,c
  9518  0041B8  12DE               	iorwf	postinc2,f,c
  9519  0041BA                     
  9520                           ;stkvar	___xxtofl@sign @ sp[(-5)+-1]
  9521  0041BA  0EFA               	movlw	-6
  9522  0041BC  50E3               	movf	plusw1,w,c
  9523  0041BE  B4D8               	btfsc	status,2,c
  9524  0041C0  EFE4  F020         	goto	u168_21
  9525  0041C4  EFE6  F020         	goto	u168_20
  9526  0041C8                     u168_21:
  9527  0041C8  EFF0  F020         	goto	l2492
  9528  0041CC                     u168_20:
  9529  0041CC                     
  9530                           ;stkvar	___xxtofl@val @ sp[(-5)+-5]
  9531  0041CC  0EF9               	movlw	-7
  9532  0041CE  BEE3               	btfsc	plusw1,7,c
  9533  0041D0  EFEE  F020         	goto	u169_20
  9534  0041D4  EFEC  F020         	goto	u169_21
  9535  0041D8                     u169_21:
  9536  0041D8  EFF0  F020         	goto	l2492
  9537  0041DC                     u169_20:
  9538  0041DC                     
  9539                           ;stkvar	___xxtofl@arg @ sp[(-5)+0]
  9540  0041DC  0EFE               	movlw	-2
  9541  0041DE  8EE3               	bsf	plusw1,7,c
  9542  0041E0                     l2492:
  9543                           
  9544                           ;stkvar	___xxtofl@arg @ sp[(-5)+0]
  9545  0041E0  0EFB               	movlw	-5
  9546  0041E2  CFE3 F062          	movff	plusw1,btemp
  9547  0041E6  0EFC               	movlw	-4
  9548  0041E8  CFE3 F063          	movff	plusw1,btemp+1
  9549  0041EC  0EFD               	movlw	-3
  9550  0041EE  CFE3 F064          	movff	plusw1,btemp+2
  9551  0041F2  0EFE               	movlw	-2
  9552  0041F4  CFE3 F065          	movff	plusw1,btemp+3
  9553  0041F8                     l1236:
  9554                           
  9555                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  9556  0041F8  0EF6               	movlw	246
  9557  0041FA  26E1               	addwf	fsr1l,f,c
  9558  0041FC  0EFF               	movlw	255
  9559  0041FE  22E2               	addwfc	fsr1h,f,c
  9560  004200  0012               	return		;funcret
  9561  004202                     __end_of___xxtofl:
  9562                           	opt callstack 0
  9563                           
  9564 ;; *************** function ___llmod *****************
  9565 ;; Defined at:
  9566 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  9567 ;; Parameters:    Size  Location     Type
  9568 ;;  dividend        4  [STACK] unsigned long 
  9569 ;;  divisor         4  [STACK] unsigned long 
  9570 ;; Auto vars:     Size  Location     Type
  9571 ;;  counter         1  [STACK] unsigned char 
  9572 ;; Return value:  Size  Location     Type
  9573 ;;                  4  [STACK] unsigned long 
  9574 ;; Registers used:
  9575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
  9576 ;; Tracked objects:
  9577 ;;		On entry : 0/0
  9578 ;;		On exit  : 0/0
  9579 ;;		Unchanged: 0/0
  9580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9581 ;;      Params:         0       0       0       0       0       0       0
  9582 ;;      Locals:         0       0       0       0       0       0       0
  9583 ;;      Temps:          0       0       0       0       0       0       0
  9584 ;;      Totals:         0       0       0       0       0       0       0
  9585 ;;Total ram usage:        0 bytes
  9586 ;; Hardware stack levels used:    1
  9587 ;; Hardware stack levels required when called:    4
  9588 ;; This function calls:
  9589 ;;		Nothing
  9590 ;; This function is called by:
  9591 ;;		_sprintf
  9592 ;; This function uses a reentrant model
  9593 ;;
  9594                           
  9595                           	psect	text28
  9596  005562                     __ptext28:
  9597                           	opt callstack 0
  9598  005562                     ___llmod:
  9599                           	opt callstack 0
  9600                           
  9601                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9602  005562  52E6               	movf	postinc1,f,c
  9603  005564                     
  9604                           ;stkvar	___llmod@divisor @ sp[(-1)+-8]
  9605  005564  0EF7               	movlw	-9
  9606  005566  50E3               	movf	plusw1,w,c
  9607  005568  E10F               	bnz	u156_20
  9608  00556A  0EF8               	movlw	-8
  9609  00556C  50E3               	movf	plusw1,w,c
  9610  00556E  E10C               	bnz	u156_20
  9611  005570  0EF9               	movlw	-7
  9612  005572  50E3               	movf	plusw1,w,c
  9613  005574  E109               	bnz	u156_20
  9614  005576  0EFA               	movlw	-6
  9615  005578  50E3               	movf	plusw1,w,c
  9616  00557A  B4D8               	btfsc	status,2,c
  9617  00557C  EFC2  F02A         	goto	u156_21
  9618  005580  EFC4  F02A         	goto	u156_20
  9619  005584                     u156_21:
  9620  005584  EF21  F02B         	goto	l2440
  9621  005588                     u156_20:
  9622  005588                     
  9623                           ;stkvar	___llmod@counter @ sp[(-1)+0]
  9624  005588  0EFF               	movlw	-1
  9625  00558A  6AE3               	clrf	plusw1,c
  9626  00558C  2AE3               	incf	plusw1,f,c
  9627  00558E  EFD4  F02A         	goto	l2430
  9628  005592                     l2428:
  9629                           
  9630                           ;stkvar	___llmod@divisor @ sp[(-1)+-8]
  9631  005592  90D8               	bcf	status,0,c
  9632  005594  0EF7               	movlw	-9
  9633  005596  36E3               	rlcf	plusw1,f,c
  9634  005598  0EF8               	movlw	-8
  9635  00559A  36E3               	rlcf	plusw1,f,c
  9636  00559C  0EF9               	movlw	-7
  9637  00559E  36E3               	rlcf	plusw1,f,c
  9638  0055A0  0EFA               	movlw	-6
  9639  0055A2  36E3               	rlcf	plusw1,f,c
  9640                           
  9641                           ;stkvar	___llmod@counter @ sp[(-1)+0]
  9642  0055A4  0EFF               	movlw	-1
  9643  0055A6  2AE3               	incf	plusw1,f,c
  9644  0055A8                     l2430:
  9645                           
  9646                           ;stkvar	___llmod@divisor @ sp[(-1)+-8]
  9647  0055A8  0EFA               	movlw	-6
  9648  0055AA  AEE3               	btfss	plusw1,7,c
  9649  0055AC  EFDA  F02A         	goto	u157_21
  9650  0055B0  EFDC  F02A         	goto	u157_20
  9651  0055B4                     u157_21:
  9652  0055B4  EFC9  F02A         	goto	l2428
  9653  0055B8                     u157_20:
  9654  0055B8                     l2432:
  9655                           
  9656                           ;stkvar	___llmod@divisor @ sp[(-1)+-8]
  9657                           ;stkvar	___llmod@dividend @ sp[(-1)+-4]
  9658  0055B8  50E1               	movf	fsr1l,w,c
  9659  0055BA  0FFB               	addlw	-5
  9660  0055BC  6ED9               	movwf	fsr2l,c
  9661  0055BE  50E2               	movf	fsr1h,w,c
  9662  0055C0  6EDA               	movwf	fsr2h,c
  9663  0055C2  0EFF               	movlw	255
  9664  0055C4  22DA               	addwfc	fsr2h,f,c
  9665  0055C6  0EF7               	movlw	-9
  9666  0055C8  50E3               	movf	plusw1,w,c
  9667  0055CA  5CDE               	subwf	postinc2,w,c
  9668  0055CC  0EF8               	movlw	-8
  9669  0055CE  50E3               	movf	plusw1,w,c
  9670  0055D0  58DE               	subwfb	postinc2,w,c
  9671  0055D2  0EF9               	movlw	-7
  9672  0055D4  50E3               	movf	plusw1,w,c
  9673  0055D6  58DE               	subwfb	postinc2,w,c
  9674  0055D8  0EFA               	movlw	-6
  9675  0055DA  50E3               	movf	plusw1,w,c
  9676  0055DC  58DE               	subwfb	postinc2,w,c
  9677  0055DE  A0D8               	btfss	status,0,c
  9678  0055E0  EFF4  F02A         	goto	u158_21
  9679  0055E4  EFF6  F02A         	goto	u158_20
  9680  0055E8                     u158_21:
  9681  0055E8  EF09  F02B         	goto	l2436
  9682  0055EC                     u158_20:
  9683  0055EC                     
  9684                           ;stkvar	___llmod@divisor @ sp[(-1)+-8]
  9685                           ;stkvar	___llmod@dividend @ sp[(-1)+-4]
  9686  0055EC  50E1               	movf	fsr1l,w,c
  9687  0055EE  0FFB               	addlw	-5
  9688  0055F0  6ED9               	movwf	fsr2l,c
  9689  0055F2  50E2               	movf	fsr1h,w,c
  9690  0055F4  6EDA               	movwf	fsr2h,c
  9691  0055F6  0EFF               	movlw	255
  9692  0055F8  22DA               	addwfc	fsr2h,f,c
  9693  0055FA  0EF7               	movlw	-9
  9694  0055FC  50E3               	movf	plusw1,w,c
  9695  0055FE  5EDE               	subwf	postinc2,f,c
  9696  005600  0EF8               	movlw	-8
  9697  005602  50E3               	movf	plusw1,w,c
  9698  005604  5ADE               	subwfb	postinc2,f,c
  9699  005606  0EF9               	movlw	-7
  9700  005608  50E3               	movf	plusw1,w,c
  9701  00560A  5ADE               	subwfb	postinc2,f,c
  9702  00560C  0EFA               	movlw	-6
  9703  00560E  50E3               	movf	plusw1,w,c
  9704  005610  5ADE               	subwfb	postinc2,f,c
  9705  005612                     l2436:
  9706                           
  9707                           ;stkvar	___llmod@divisor @ sp[(-1)+-8]
  9708  005612  90D8               	bcf	status,0,c
  9709  005614  0EFA               	movlw	-6
  9710  005616  32E3               	rrcf	plusw1,f,c
  9711  005618  0EF9               	movlw	-7
  9712  00561A  32E3               	rrcf	plusw1,f,c
  9713  00561C  0EF8               	movlw	-8
  9714  00561E  32E3               	rrcf	plusw1,f,c
  9715  005620  0EF7               	movlw	-9
  9716  005622  32E3               	rrcf	plusw1,f,c
  9717  005624                     
  9718                           ;stkvar	___llmod@counter @ sp[(-1)+0]
  9719  005624  0EFF               	movlw	-1
  9720  005626  50E3               	movf	plusw1,w,c
  9721  005628  6E62               	movwf	btemp^0,c
  9722  00562A  0E01               	movlw	1
  9723  00562C  5E62               	subwf	btemp^0,f,c
  9724  00562E  0EFF               	movlw	-1
  9725  005630  C062  FFE3         	movff	btemp,plusw1
  9726  005634  A4D8               	btfss	status,2,c
  9727  005636  EF1F  F02B         	goto	u159_21
  9728  00563A  EF21  F02B         	goto	u159_20
  9729  00563E                     u159_21:
  9730  00563E  EFDC  F02A         	goto	l2432
  9731  005642                     u159_20:
  9732  005642                     l2440:
  9733                           
  9734                           ;stkvar	___llmod@dividend @ sp[(-1)+-4]
  9735  005642  0EFB               	movlw	-5
  9736  005644  CFE3 F062          	movff	plusw1,btemp
  9737  005648  0EFC               	movlw	-4
  9738  00564A  CFE3 F063          	movff	plusw1,btemp+1
  9739  00564E  0EFD               	movlw	-3
  9740  005650  CFE3 F064          	movff	plusw1,btemp+2
  9741  005654  0EFE               	movlw	-2
  9742  005656  CFE3 F065          	movff	plusw1,btemp+3
  9743  00565A                     
  9744                           ; ___llmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
  9745  00565A  0EF7               	movlw	247
  9746  00565C  26E1               	addwf	fsr1l,f,c
  9747  00565E  0EFF               	movlw	255
  9748  005660  22E2               	addwfc	fsr1h,f,c
  9749  005662  0012               	return		;funcret
  9750  005664                     __end_of___llmod:
  9751                           	opt callstack 0
  9752                           
  9753 ;; *************** function ___lldiv *****************
  9754 ;; Defined at:
  9755 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  9756 ;; Parameters:    Size  Location     Type
  9757 ;;  dividend        4  [STACK] unsigned long 
  9758 ;;  divisor         4  [STACK] unsigned long 
  9759 ;; Auto vars:     Size  Location     Type
  9760 ;;  quotient        4  [STACK] unsigned long 
  9761 ;;  counter         1  [STACK] unsigned char 
  9762 ;; Return value:  Size  Location     Type
  9763 ;;                  4  [STACK] unsigned long 
  9764 ;; Registers used:
  9765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
  9766 ;; Tracked objects:
  9767 ;;		On entry : 0/0
  9768 ;;		On exit  : 0/0
  9769 ;;		Unchanged: 0/0
  9770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9771 ;;      Params:         0       0       0       0       0       0       0
  9772 ;;      Locals:         0       0       0       0       0       0       0
  9773 ;;      Temps:          0       0       0       0       0       0       0
  9774 ;;      Totals:         0       0       0       0       0       0       0
  9775 ;;Total ram usage:        0 bytes
  9776 ;; Hardware stack levels used:    1
  9777 ;; Hardware stack levels required when called:    4
  9778 ;; This function calls:
  9779 ;;		Nothing
  9780 ;; This function is called by:
  9781 ;;		_sprintf
  9782 ;; This function uses a reentrant model
  9783 ;;
  9784                           
  9785                           	psect	text29
  9786  00530E                     __ptext29:
  9787                           	opt callstack 0
  9788  00530E                     ___lldiv:
  9789                           	opt callstack 0
  9790                           
  9791                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9792  00530E  0E05               	movlw	5
  9793  005310  26E1               	addwf	fsr1l,f,c
  9794  005312  0E00               	movlw	0
  9795  005314  22E2               	addwfc	fsr1h,f,c
  9796  005316                     
  9797                           ;stkvar	___lldiv@quotient @ sp[(-5)+0]
  9798  005316  0EFB               	movlw	-5
  9799  005318  6AE3               	clrf	plusw1,c
  9800  00531A  0EFC               	movlw	-4
  9801  00531C  6AE3               	clrf	plusw1,c
  9802  00531E  0EFD               	movlw	-3
  9803  005320  6AE3               	clrf	plusw1,c
  9804  005322  0EFE               	movlw	-2
  9805  005324  6AE3               	clrf	plusw1,c
  9806  005326                     
  9807                           ;stkvar	___lldiv@divisor @ sp[(-5)+-8]
  9808  005326  0EF3               	movlw	-13
  9809  005328  50E3               	movf	plusw1,w,c
  9810  00532A  E10F               	bnz	u133_20
  9811  00532C  0EF4               	movlw	-12
  9812  00532E  50E3               	movf	plusw1,w,c
  9813  005330  E10C               	bnz	u133_20
  9814  005332  0EF5               	movlw	-11
  9815  005334  50E3               	movf	plusw1,w,c
  9816  005336  E109               	bnz	u133_20
  9817  005338  0EF6               	movlw	-10
  9818  00533A  50E3               	movf	plusw1,w,c
  9819  00533C  B4D8               	btfsc	status,2,c
  9820  00533E  EFA3  F029         	goto	u133_21
  9821  005342  EFA5  F029         	goto	u133_20
  9822  005346                     u133_21:
  9823  005346  EF0D  F02A         	goto	l2322
  9824  00534A                     u133_20:
  9825  00534A                     
  9826                           ;stkvar	___lldiv@counter @ sp[(-5)+4]
  9827  00534A  0EFF               	movlw	-1
  9828  00534C  6AE3               	clrf	plusw1,c
  9829  00534E  2AE3               	incf	plusw1,f,c
  9830  005350  EFB5  F029         	goto	l2308
  9831  005354                     l2306:
  9832                           
  9833                           ;stkvar	___lldiv@divisor @ sp[(-5)+-8]
  9834  005354  90D8               	bcf	status,0,c
  9835  005356  0EF3               	movlw	-13
  9836  005358  36E3               	rlcf	plusw1,f,c
  9837  00535A  0EF4               	movlw	-12
  9838  00535C  36E3               	rlcf	plusw1,f,c
  9839  00535E  0EF5               	movlw	-11
  9840  005360  36E3               	rlcf	plusw1,f,c
  9841  005362  0EF6               	movlw	-10
  9842  005364  36E3               	rlcf	plusw1,f,c
  9843                           
  9844                           ;stkvar	___lldiv@counter @ sp[(-5)+4]
  9845  005366  0EFF               	movlw	-1
  9846  005368  2AE3               	incf	plusw1,f,c
  9847  00536A                     l2308:
  9848                           
  9849                           ;stkvar	___lldiv@divisor @ sp[(-5)+-8]
  9850  00536A  0EF6               	movlw	-10
  9851  00536C  AEE3               	btfss	plusw1,7,c
  9852  00536E  EFBB  F029         	goto	u134_21
  9853  005372  EFBD  F029         	goto	u134_20
  9854  005376                     u134_21:
  9855  005376  EFAA  F029         	goto	l2306
  9856  00537A                     u134_20:
  9857  00537A                     l2310:
  9858                           
  9859                           ;stkvar	___lldiv@quotient @ sp[(-5)+0]
  9860  00537A  90D8               	bcf	status,0,c
  9861  00537C  0EFB               	movlw	-5
  9862  00537E  36E3               	rlcf	plusw1,f,c
  9863  005380  0EFC               	movlw	-4
  9864  005382  36E3               	rlcf	plusw1,f,c
  9865  005384  0EFD               	movlw	-3
  9866  005386  36E3               	rlcf	plusw1,f,c
  9867  005388  0EFE               	movlw	-2
  9868  00538A  36E3               	rlcf	plusw1,f,c
  9869  00538C                     
  9870                           ;stkvar	___lldiv@divisor @ sp[(-5)+-8]
  9871                           ;stkvar	___lldiv@dividend @ sp[(-5)+-4]
  9872  00538C  50E1               	movf	fsr1l,w,c
  9873  00538E  0FF7               	addlw	-9
  9874  005390  6ED9               	movwf	fsr2l,c
  9875  005392  50E2               	movf	fsr1h,w,c
  9876  005394  6EDA               	movwf	fsr2h,c
  9877  005396  0EFF               	movlw	255
  9878  005398  22DA               	addwfc	fsr2h,f,c
  9879  00539A  0EF3               	movlw	-13
  9880  00539C  50E3               	movf	plusw1,w,c
  9881  00539E  5CDE               	subwf	postinc2,w,c
  9882  0053A0  0EF4               	movlw	-12
  9883  0053A2  50E3               	movf	plusw1,w,c
  9884  0053A4  58DE               	subwfb	postinc2,w,c
  9885  0053A6  0EF5               	movlw	-11
  9886  0053A8  50E3               	movf	plusw1,w,c
  9887  0053AA  58DE               	subwfb	postinc2,w,c
  9888  0053AC  0EF6               	movlw	-10
  9889  0053AE  50E3               	movf	plusw1,w,c
  9890  0053B0  58DE               	subwfb	postinc2,w,c
  9891  0053B2  A0D8               	btfss	status,0,c
  9892  0053B4  EFDE  F029         	goto	u135_21
  9893  0053B8  EFE0  F029         	goto	u135_20
  9894  0053BC                     u135_21:
  9895  0053BC  EFF5  F029         	goto	l2318
  9896  0053C0                     u135_20:
  9897  0053C0                     
  9898                           ;stkvar	___lldiv@divisor @ sp[(-5)+-8]
  9899                           ;stkvar	___lldiv@dividend @ sp[(-5)+-4]
  9900  0053C0  50E1               	movf	fsr1l,w,c
  9901  0053C2  0FF7               	addlw	-9
  9902  0053C4  6ED9               	movwf	fsr2l,c
  9903  0053C6  50E2               	movf	fsr1h,w,c
  9904  0053C8  6EDA               	movwf	fsr2h,c
  9905  0053CA  0EFF               	movlw	255
  9906  0053CC  22DA               	addwfc	fsr2h,f,c
  9907  0053CE  0EF3               	movlw	-13
  9908  0053D0  50E3               	movf	plusw1,w,c
  9909  0053D2  5EDE               	subwf	postinc2,f,c
  9910  0053D4  0EF4               	movlw	-12
  9911  0053D6  50E3               	movf	plusw1,w,c
  9912  0053D8  5ADE               	subwfb	postinc2,f,c
  9913  0053DA  0EF5               	movlw	-11
  9914  0053DC  50E3               	movf	plusw1,w,c
  9915  0053DE  5ADE               	subwfb	postinc2,f,c
  9916  0053E0  0EF6               	movlw	-10
  9917  0053E2  50E3               	movf	plusw1,w,c
  9918  0053E4  5ADE               	subwfb	postinc2,f,c
  9919  0053E6                     
  9920                           ;stkvar	___lldiv@quotient @ sp[(-5)+0]
  9921  0053E6  0EFB               	movlw	-5
  9922  0053E8  80E3               	bsf	plusw1,0,c
  9923  0053EA                     l2318:
  9924                           
  9925                           ;stkvar	___lldiv@divisor @ sp[(-5)+-8]
  9926  0053EA  90D8               	bcf	status,0,c
  9927  0053EC  0EF6               	movlw	-10
  9928  0053EE  32E3               	rrcf	plusw1,f,c
  9929  0053F0  0EF5               	movlw	-11
  9930  0053F2  32E3               	rrcf	plusw1,f,c
  9931  0053F4  0EF4               	movlw	-12
  9932  0053F6  32E3               	rrcf	plusw1,f,c
  9933  0053F8  0EF3               	movlw	-13
  9934  0053FA  32E3               	rrcf	plusw1,f,c
  9935  0053FC                     
  9936                           ;stkvar	___lldiv@counter @ sp[(-5)+4]
  9937  0053FC  0EFF               	movlw	-1
  9938  0053FE  50E3               	movf	plusw1,w,c
  9939  005400  6E62               	movwf	btemp^0,c
  9940  005402  0E01               	movlw	1
  9941  005404  5E62               	subwf	btemp^0,f,c
  9942  005406  0EFF               	movlw	-1
  9943  005408  C062  FFE3         	movff	btemp,plusw1
  9944  00540C  A4D8               	btfss	status,2,c
  9945  00540E  EF0B  F02A         	goto	u136_21
  9946  005412  EF0D  F02A         	goto	u136_20
  9947  005416                     u136_21:
  9948  005416  EFBD  F029         	goto	l2310
  9949  00541A                     u136_20:
  9950  00541A                     l2322:
  9951                           
  9952                           ;stkvar	___lldiv@quotient @ sp[(-5)+0]
  9953  00541A  0EFB               	movlw	-5
  9954  00541C  CFE3 F062          	movff	plusw1,btemp
  9955  005420  0EFC               	movlw	-4
  9956  005422  CFE3 F063          	movff	plusw1,btemp+1
  9957  005426  0EFD               	movlw	-3
  9958  005428  CFE3 F064          	movff	plusw1,btemp+2
  9959  00542C  0EFE               	movlw	-2
  9960  00542E  CFE3 F065          	movff	plusw1,btemp+3
  9961  005432                     
  9962                           ; ___lldiv: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
  9963  005432  0EF3               	movlw	243
  9964  005434  26E1               	addwf	fsr1l,f,c
  9965  005436  0EFF               	movlw	255
  9966  005438  22E2               	addwfc	fsr1h,f,c
  9967  00543A  0012               	return		;funcret
  9968  00543C                     __end_of___lldiv:
  9969                           	opt callstack 0
  9970                           
  9971 ;; *************** function ___fltol *****************
  9972 ;; Defined at:
  9973 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;  f1              4  [STACK] unsigned long 
  9976 ;; Auto vars:     Size  Location     Type
  9977 ;;  exp1            1  [STACK] unsigned char 
  9978 ;;  sign1           1  [STACK] unsigned char 
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  4  [STACK] long 
  9981 ;; Registers used:
  9982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9988 ;;      Params:         0       0       0       0       0       0       0
  9989 ;;      Locals:         0       0       0       0       0       0       0
  9990 ;;      Temps:          0       0       0       0       0       0       0
  9991 ;;      Totals:         0       0       0       0       0       0       0
  9992 ;;Total ram usage:        0 bytes
  9993 ;; Hardware stack levels used:    1
  9994 ;; Hardware stack levels required when called:    4
  9995 ;; This function calls:
  9996 ;;		Nothing
  9997 ;; This function is called by:
  9998 ;;		_sprintf
  9999 ;; This function uses a reentrant model
 10000 ;;
 10001                           
 10002                           	psect	text30
 10003  004A50                     __ptext30:
 10004                           	opt callstack 0
 10005  004A50                     ___fltol:
 10006                           	opt callstack 0
 10007                           
 10008                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10009  004A50  52E6               	movf	postinc1,f,c
 10010  004A52  52E6               	movf	postinc1,f,c
 10011  004A54                     
 10012                           ;stkvar	___fltol@f1 @ sp[(-2)+-4]
 10013  004A54  0EFA               	movlw	-6
 10014  004A56  CFE3 F06A          	movff	plusw1,btemp+8
 10015  004A5A  0EFB               	movlw	-5
 10016  004A5C  CFE3 F06B          	movff	plusw1,btemp+9
 10017  004A60  0EFC               	movlw	-4
 10018  004A62  CFE3 F06C          	movff	plusw1,btemp+10
 10019  004A66  0EFD               	movlw	-3
 10020  004A68  CFE3 F06D          	movff	plusw1,btemp+11
 10021  004A6C  0E18               	movlw	24
 10022  004A6E  EF3E  F025         	goto	u146_20
 10023  004A72                     u146_25:
 10024  004A72  90D8               	bcf	status,0,c
 10025  004A74  326D               	rrcf	(btemp+11)^0,f,c
 10026  004A76  326C               	rrcf	(btemp+10)^0,f,c
 10027  004A78  326B               	rrcf	(btemp+9)^0,f,c
 10028  004A7A  326A               	rrcf	(btemp+8)^0,f,c
 10029  004A7C                     u146_20:
 10030  004A7C  2EE8               	decfsz	wreg,f,c
 10031  004A7E  EF39  F025         	goto	u146_25
 10032                           
 10033                           ;stkvar	___fltol@exp1 @ sp[(-2)+0]
 10034  004A82  0EFE               	movlw	-2
 10035  004A84  C06A  FFE3         	movff	btemp+8,plusw1
 10036  004A88  0EFE               	movlw	-2
 10037  004A8A  50E3               	movf	plusw1,w,c
 10038  004A8C  A4D8               	btfss	status,2,c
 10039  004A8E  EF4B  F025         	goto	u147_21
 10040  004A92  EF4D  F025         	goto	u147_20
 10041  004A96                     u147_21:
 10042  004A96  EF54  F025         	goto	l2388
 10043  004A9A                     u147_20:
 10044  004A9A                     l2384:
 10045  004A9A  0E00               	movlw	0
 10046  004A9C  6E62               	movwf	btemp^0,c
 10047  004A9E  6A63               	clrf	(btemp+1)^0,c
 10048  004AA0  6A64               	clrf	(btemp+2)^0,c
 10049  004AA2  6A65               	clrf	(btemp+3)^0,c
 10050  004AA4  EFF7  F025         	goto	l862
 10051  004AA8                     l2388:
 10052                           
 10053                           ;stkvar	___fltol@f1 @ sp[(-2)+-4]
 10054  004AA8  0EFA               	movlw	-6
 10055  004AAA  CFE3 F06A          	movff	plusw1,btemp+8
 10056  004AAE  0EFB               	movlw	-5
 10057  004AB0  CFE3 F06B          	movff	plusw1,btemp+9
 10058  004AB4  0EFC               	movlw	-4
 10059  004AB6  CFE3 F06C          	movff	plusw1,btemp+10
 10060  004ABA  0EFD               	movlw	-3
 10061  004ABC  CFE3 F06D          	movff	plusw1,btemp+11
 10062  004AC0  0E20               	movlw	32
 10063  004AC2  EF68  F025         	goto	u148_20
 10064  004AC6                     u148_25:
 10065  004AC6  90D8               	bcf	status,0,c
 10066  004AC8  326D               	rrcf	(btemp+11)^0,f,c
 10067  004ACA  326C               	rrcf	(btemp+10)^0,f,c
 10068  004ACC  326B               	rrcf	(btemp+9)^0,f,c
 10069  004ACE  326A               	rrcf	(btemp+8)^0,f,c
 10070  004AD0                     u148_20:
 10071  004AD0  2EE8               	decfsz	wreg,f,c
 10072  004AD2  EF63  F025         	goto	u148_25
 10073                           
 10074                           ;stkvar	___fltol@sign1 @ sp[(-2)+1]
 10075  004AD6  0EFF               	movlw	-1
 10076  004AD8  C06A  FFE3         	movff	btemp+8,plusw1
 10077  004ADC                     
 10078                           ;stkvar	___fltol@f1 @ sp[(-2)+-4]
 10079  004ADC  0EFC               	movlw	-4
 10080  004ADE  8EE3               	bsf	plusw1,7,c
 10081  004AE0                     
 10082                           ;stkvar	___fltol@f1 @ sp[(-2)+-4]
 10083  004AE0  50E1               	movf	fsr1l,w,c
 10084  004AE2  0FFA               	addlw	-6
 10085  004AE4  6ED9               	movwf	fsr2l,c
 10086  004AE6  50E2               	movf	fsr1h,w,c
 10087  004AE8  6EDA               	movwf	fsr2h,c
 10088  004AEA  0EFF               	movlw	255
 10089  004AEC  22DA               	addwfc	fsr2h,f,c
 10090  004AEE  0EFF               	movlw	255
 10091  004AF0  16DE               	andwf	postinc2,f,c
 10092  004AF2  0EFF               	movlw	255
 10093  004AF4  16DE               	andwf	postinc2,f,c
 10094  004AF6  0EFF               	movlw	255
 10095  004AF8  16DE               	andwf	postinc2,f,c
 10096  004AFA  0E00               	movlw	0
 10097  004AFC  16DE               	andwf	postinc2,f,c
 10098  004AFE                     
 10099                           ;stkvar	___fltol@exp1 @ sp[(-2)+0]
 10100  004AFE  0EFE               	movlw	-2
 10101  004B00  CFE3 F062          	movff	plusw1,btemp
 10102  004B04  0E96               	movlw	150
 10103  004B06  5E62               	subwf	btemp^0,f,c
 10104  004B08  0EFE               	movlw	-2
 10105  004B0A  C062  FFE3         	movff	btemp,plusw1
 10106  004B0E                     
 10107                           ;stkvar	___fltol@exp1 @ sp[(-2)+0]
 10108  004B0E  0EFE               	movlw	-2
 10109  004B10  BEE3               	btfsc	plusw1,7,c
 10110  004B12  EF8F  F025         	goto	u149_20
 10111  004B16  EF8D  F025         	goto	u149_21
 10112  004B1A                     u149_21:
 10113  004B1A  EFB0  F025         	goto	l2406
 10114  004B1E                     u149_20:
 10115  004B1E                     
 10116                           ;stkvar	___fltol@exp1 @ sp[(-2)+0]
 10117  004B1E  0EFE               	movlw	-2
 10118  004B20  50E3               	movf	plusw1,w,c
 10119  004B22  0A80               	xorlw	128
 10120  004B24  0F97               	addlw	151
 10121  004B26  B0D8               	btfsc	status,0,c
 10122  004B28  EF98  F025         	goto	u150_21
 10123  004B2C  EF9A  F025         	goto	u150_20
 10124  004B30                     u150_21:
 10125  004B30  EF9C  F025         	goto	l2404
 10126  004B34                     u150_20:
 10127  004B34  EF4D  F025         	goto	l2384
 10128  004B38                     l2404:
 10129                           
 10130                           ;stkvar	___fltol@f1 @ sp[(-2)+-4]
 10131  004B38  90D8               	bcf	status,0,c
 10132  004B3A  0EFD               	movlw	-3
 10133  004B3C  32E3               	rrcf	plusw1,f,c
 10134  004B3E  0EFC               	movlw	-4
 10135  004B40  32E3               	rrcf	plusw1,f,c
 10136  004B42  0EFB               	movlw	-5
 10137  004B44  32E3               	rrcf	plusw1,f,c
 10138  004B46  0EFA               	movlw	-6
 10139  004B48  32E3               	rrcf	plusw1,f,c
 10140                           
 10141                           ;stkvar	___fltol@exp1 @ sp[(-2)+0]
 10142  004B4A  0EFE               	movlw	-2
 10143  004B4C  2AE3               	incf	plusw1,f,c
 10144  004B4E  A4D8               	btfss	status,2,c
 10145  004B50  EFAC  F025         	goto	u151_21
 10146  004B54  EFAE  F025         	goto	u151_20
 10147  004B58                     u151_21:
 10148  004B58  EF9C  F025         	goto	l2404
 10149  004B5C                     u151_20:
 10150  004B5C  EFD1  F025         	goto	l2416
 10151  004B60                     l2406:
 10152                           
 10153                           ;stkvar	___fltol@exp1 @ sp[(-2)+0]
 10154  004B60  0EFE               	movlw	-2
 10155  004B62  CFE3 F062          	movff	plusw1,btemp
 10156  004B66  0E1F               	movlw	31
 10157  004B68  6462               	cpfsgt	btemp^0,c
 10158  004B6A  EFB9  F025         	goto	u152_21
 10159  004B6E  EFBB  F025         	goto	u152_20
 10160  004B72                     u152_21:
 10161  004B72  EFC8  F025         	goto	l2414
 10162  004B76                     u152_20:
 10163  004B76  EF4D  F025         	goto	l2384
 10164  004B7A                     l2412:
 10165                           
 10166                           ;stkvar	___fltol@f1 @ sp[(-2)+-4]
 10167  004B7A  90D8               	bcf	status,0,c
 10168  004B7C  0EFA               	movlw	-6
 10169  004B7E  36E3               	rlcf	plusw1,f,c
 10170  004B80  0EFB               	movlw	-5
 10171  004B82  36E3               	rlcf	plusw1,f,c
 10172  004B84  0EFC               	movlw	-4
 10173  004B86  36E3               	rlcf	plusw1,f,c
 10174  004B88  0EFD               	movlw	-3
 10175  004B8A  36E3               	rlcf	plusw1,f,c
 10176                           
 10177                           ;stkvar	___fltol@exp1 @ sp[(-2)+0]
 10178  004B8C  0EFE               	movlw	-2
 10179  004B8E  06E3               	decf	plusw1,f,c
 10180  004B90                     l2414:
 10181                           
 10182                           ;stkvar	___fltol@exp1 @ sp[(-2)+0]
 10183  004B90  0EFE               	movlw	-2
 10184  004B92  50E3               	movf	plusw1,w,c
 10185  004B94  A4D8               	btfss	status,2,c
 10186  004B96  EFCF  F025         	goto	u153_21
 10187  004B9A  EFD1  F025         	goto	u153_20
 10188  004B9E                     u153_21:
 10189  004B9E  EFBD  F025         	goto	l2412
 10190  004BA2                     u153_20:
 10191  004BA2                     l2416:
 10192                           
 10193                           ;stkvar	___fltol@sign1 @ sp[(-2)+1]
 10194  004BA2  0EFF               	movlw	-1
 10195  004BA4  50E3               	movf	plusw1,w,c
 10196  004BA6  B4D8               	btfsc	status,2,c
 10197  004BA8  EFD8  F025         	goto	u154_21
 10198  004BAC  EFDA  F025         	goto	u154_20
 10199  004BB0                     u154_21:
 10200  004BB0  EFEB  F025         	goto	l2420
 10201  004BB4                     u154_20:
 10202  004BB4                     
 10203                           ;stkvar	___fltol@f1 @ sp[(-2)+-4]
 10204                           ;stkvar	___fltol@f1 @ sp[(-2)+-4]
 10205  004BB4  0EFA               	movlw	-6
 10206  004BB6  6CE3               	negf	plusw1,c
 10207  004BB8  0EFB               	movlw	-5
 10208  004BBA  1EE3               	comf	plusw1,f,c
 10209  004BBC  0EFC               	movlw	-4
 10210  004BBE  1EE3               	comf	plusw1,f,c
 10211  004BC0  0EFD               	movlw	-3
 10212  004BC2  1EE3               	comf	plusw1,f,c
 10213  004BC4  E308               	bnc	u155_20
 10214  004BC6  0EFB               	movlw	-5
 10215  004BC8  2AE3               	incf	plusw1,f,c
 10216  004BCA  E305               	bnc	u155_20
 10217  004BCC  0EFC               	movlw	-4
 10218  004BCE  2AE3               	incf	plusw1,f,c
 10219  004BD0  E302               	bnc	u155_20
 10220  004BD2  0EFD               	movlw	-3
 10221  004BD4  2AE3               	incf	plusw1,f,c
 10222  004BD6                     u155_20:
 10223  004BD6                     l2420:
 10224                           
 10225                           ;stkvar	___fltol@f1 @ sp[(-2)+-4]
 10226  004BD6  0EFA               	movlw	-6
 10227  004BD8  CFE3 F062          	movff	plusw1,btemp
 10228  004BDC  0EFB               	movlw	-5
 10229  004BDE  CFE3 F063          	movff	plusw1,btemp+1
 10230  004BE2  0EFC               	movlw	-4
 10231  004BE4  CFE3 F064          	movff	plusw1,btemp+2
 10232  004BE8  0EFD               	movlw	-3
 10233  004BEA  CFE3 F065          	movff	plusw1,btemp+3
 10234  004BEE                     l862:
 10235                           
 10236                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 10237  004BEE  0EFA               	movlw	250
 10238  004BF0  26E1               	addwf	fsr1l,f,c
 10239  004BF2  0EFF               	movlw	255
 10240  004BF4  22E2               	addwfc	fsr1h,f,c
 10241  004BF6  0012               	return		;funcret
 10242  004BF8                     __end_of___fltol:
 10243                           	opt callstack 0
 10244                           
 10245 ;; *************** function ___flsub *****************
 10246 ;; Defined at:
 10247 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
 10248 ;; Parameters:    Size  Location     Type
 10249 ;;  b               4  [STACK] long 
 10250 ;;  a               4  [STACK] long 
 10251 ;; Auto vars:     Size  Location     Type
 10252 ;;		None
 10253 ;; Return value:  Size  Location     Type
 10254 ;;                  4  [STACK] long 
 10255 ;; Registers used:
 10256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 10257 ;; Tracked objects:
 10258 ;;		On entry : 0/0
 10259 ;;		On exit  : 0/0
 10260 ;;		Unchanged: 0/0
 10261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10262 ;;      Params:         0       0       0       0       0       0       0
 10263 ;;      Locals:         0       0       0       0       0       0       0
 10264 ;;      Temps:          0       0       0       0       0       0       0
 10265 ;;      Totals:         0       0       0       0       0       0       0
 10266 ;;Total ram usage:        0 bytes
 10267 ;; Hardware stack levels used:    1
 10268 ;; Hardware stack levels required when called:    5
 10269 ;; This function calls:
 10270 ;;		___fladd
 10271 ;; This function is called by:
 10272 ;;		_sprintf
 10273 ;; This function uses a reentrant model
 10274 ;;
 10275                           
 10276                           	psect	text31
 10277  006566                     __ptext31:
 10278                           	opt callstack 0
 10279  006566                     ___flsub:
 10280                           	opt callstack 18
 10281  006566                     
 10282                           ;stkvar	___flsub@a @ sp[(0)+-8]
 10283  006566  0EFB               	movlw	-5
 10284  006568  7EE3               	btg	plusw1,7,c
 10285  00656A                     
 10286                           ;stkvar	___flsub@a @ sp[(0)+-8]
 10287  00656A  0EF8               	movlw	-8
 10288  00656C  CFE3 FFE6          	movff	plusw1,postinc1
 10289  006570  CFE3 FFE6          	movff	plusw1,postinc1
 10290  006574  CFE3 FFE6          	movff	plusw1,postinc1
 10291  006578  CFE3 FFE6          	movff	plusw1,postinc1
 10292                           
 10293                           ;stkvar	___flsub@b @ sp[(-4)+-4]
 10294  00657C  0EF8               	movlw	-8
 10295  00657E  CFE3 FFE6          	movff	plusw1,postinc1
 10296  006582  CFE3 FFE6          	movff	plusw1,postinc1
 10297  006586  CFE3 FFE6          	movff	plusw1,postinc1
 10298  00658A  CFE3 FFE6          	movff	plusw1,postinc1
 10299  00658E  ECBE  F00C         	call	___fladd	;wreg free
 10300  006592                     
 10301                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 10302  006592  0EF8               	movlw	248
 10303  006594  26E1               	addwf	fsr1l,f,c
 10304  006596  0EFF               	movlw	255
 10305  006598  22E2               	addwfc	fsr1h,f,c
 10306  00659A  0012               	return		;funcret
 10307  00659C                     __end_of___flsub:
 10308                           	opt callstack 0
 10309                           
 10310 ;; *************** function ___fladd *****************
 10311 ;; Defined at:
 10312 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
 10313 ;; Parameters:    Size  Location     Type
 10314 ;;  b               4  [STACK] long 
 10315 ;;  a               4  [STACK] long 
 10316 ;; Auto vars:     Size  Location     Type
 10317 ;;  grs             1  [STACK] unsigned char 
 10318 ;;  bexp            1  [STACK] unsigned char 
 10319 ;;  aexp            1  [STACK] unsigned char 
 10320 ;;  signs           1  [STACK] unsigned char 
 10321 ;; Return value:  Size  Location     Type
 10322 ;;                  4  [STACK] unsigned char 
 10323 ;; Registers used:
 10324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 10325 ;; Tracked objects:
 10326 ;;		On entry : 0/0
 10327 ;;		On exit  : 0/0
 10328 ;;		Unchanged: 0/0
 10329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10330 ;;      Params:         0       0       0       0       0       0       0
 10331 ;;      Locals:         0       0       0       0       0       0       0
 10332 ;;      Temps:          0       0       0       0       0       0       0
 10333 ;;      Totals:         0       0       0       0       0       0       0
 10334 ;;Total ram usage:        0 bytes
 10335 ;; Hardware stack levels used:    1
 10336 ;; Hardware stack levels required when called:    4
 10337 ;; This function calls:
 10338 ;;		Nothing
 10339 ;; This function is called by:
 10340 ;;		_sprintf
 10341 ;;		___flsub
 10342 ;; This function uses a reentrant model
 10343 ;;
 10344                           
 10345                           	psect	text32
 10346  00197C                     __ptext32:
 10347                           	opt callstack 0
 10348  00197C                     ___fladd:
 10349                           	opt callstack 0
 10350                           
 10351                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10352  00197C  52E6               	movf	postinc1,f,c
 10353  00197E  52E6               	movf	postinc1,f,c
 10354  001980  52E6               	movf	postinc1,f,c
 10355  001982  52E6               	movf	postinc1,f,c
 10356  001984                     
 10357                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10358  001984  0EFB               	movlw	251
 10359  001986  24E1               	addwf	fsr1l,w,c
 10360  001988  6ED9               	movwf	fsr2l,c
 10361  00198A  0EFF               	movlw	255
 10362  00198C  20E2               	addwfc	fsr1h,w,c
 10363  00198E  6EDA               	movwf	fsr2h,c
 10364  001990  50DF               	movf	indf2,w,c
 10365  001992  6E6D               	movwf	(btemp+11)^0,c
 10366  001994  0E80               	movlw	128
 10367  001996  166D               	andwf	(btemp+11)^0,f,c
 10368                           
 10369                           ;stkvar	___fladd@signs @ sp[(-4)+3]
 10370  001998  0EFF               	movlw	-1
 10371  00199A  C06D  FFE3         	movff	btemp+11,plusw1
 10372  00199E                     
 10373                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10374  00199E  0EFB               	movlw	251
 10375  0019A0  24E1               	addwf	fsr1l,w,c
 10376  0019A2  6ED9               	movwf	fsr2l,c
 10377  0019A4  0EFF               	movlw	255
 10378  0019A6  20E2               	addwfc	fsr1h,w,c
 10379  0019A8  6EDA               	movwf	fsr2h,c
 10380  0019AA  50DF               	movf	indf2,w,c
 10381  0019AC  6E6D               	movwf	(btemp+11)^0,c
 10382  0019AE  90D8               	bcf	status,0,c
 10383  0019B0  346D               	rlcf	(btemp+11)^0,w,c
 10384  0019B2  6E6C               	movwf	(btemp+10)^0,c
 10385                           
 10386                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 10387  0019B4  0EFD               	movlw	-3
 10388  0019B6  C06C  FFE3         	movff	btemp+10,plusw1
 10389  0019BA                     
 10390                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10391  0019BA  0EFA               	movlw	250
 10392  0019BC  24E1               	addwf	fsr1l,w,c
 10393  0019BE  6ED9               	movwf	fsr2l,c
 10394  0019C0  0EFF               	movlw	255
 10395  0019C2  20E2               	addwfc	fsr1h,w,c
 10396  0019C4  6EDA               	movwf	fsr2h,c
 10397  0019C6  AEDF               	btfss	indf2,7,c
 10398  0019C8  EFE8  F00C         	goto	u16_21
 10399  0019CC  EFEA  F00C         	goto	u16_20
 10400  0019D0                     u16_21:
 10401  0019D0  EFEC  F00C         	goto	l1524
 10402  0019D4                     u16_20:
 10403  0019D4                     
 10404                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 10405  0019D4  0EFD               	movlw	-3
 10406  0019D6  80E3               	bsf	plusw1,0,c
 10407  0019D8                     l1524:
 10408                           
 10409                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 10410  0019D8  0EFD               	movlw	-3
 10411  0019DA  50E3               	movf	plusw1,w,c
 10412  0019DC  B4D8               	btfsc	status,2,c
 10413  0019DE  EFF3  F00C         	goto	u17_21
 10414  0019E2  EFF5  F00C         	goto	u17_20
 10415  0019E6                     u17_21:
 10416  0019E6  EF1E  F00D         	goto	l1534
 10417  0019EA                     u17_20:
 10418  0019EA                     
 10419                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 10420  0019EA  0EFD               	movlw	-3
 10421  0019EC  28E3               	incf	plusw1,w,c
 10422  0019EE  A4D8               	btfss	status,2,c
 10423  0019F0  EFFC  F00C         	goto	u18_21
 10424  0019F4  EFFE  F00C         	goto	u18_20
 10425  0019F8                     u18_21:
 10426  0019F8  EF12  F00D         	goto	l1530
 10427  0019FC                     u18_20:
 10428  0019FC  0E00               	movlw	0
 10429  0019FE  6E6A               	movwf	(btemp+8)^0,c
 10430  001A00  0E00               	movlw	0
 10431  001A02  6E6B               	movwf	(btemp+9)^0,c
 10432  001A04  0E00               	movlw	0
 10433  001A06  6E6C               	movwf	(btemp+10)^0,c
 10434  001A08  0E00               	movlw	0
 10435  001A0A  6E6D               	movwf	(btemp+11)^0,c
 10436                           
 10437                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10438  001A0C  0EF8               	movlw	-8
 10439  001A0E  C06A  FFE3         	movff	btemp+8,plusw1
 10440  001A12  0EF9               	movlw	-7
 10441  001A14  C06B  FFE3         	movff	btemp+9,plusw1
 10442  001A18  0EFA               	movlw	-6
 10443  001A1A  C06C  FFE3         	movff	btemp+10,plusw1
 10444  001A1E  0EFB               	movlw	-5
 10445  001A20  C06D  FFE3         	movff	btemp+11,plusw1
 10446  001A24                     l1530:
 10447                           
 10448                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10449  001A24  0EFA               	movlw	-6
 10450  001A26  8EE3               	bsf	plusw1,7,c
 10451  001A28                     
 10452                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10453  001A28  0EFB               	movlw	251
 10454  001A2A  24E1               	addwf	fsr1l,w,c
 10455  001A2C  6ED9               	movwf	fsr2l,c
 10456  001A2E  0EFF               	movlw	255
 10457  001A30  20E2               	addwfc	fsr1h,w,c
 10458  001A32  6EDA               	movwf	fsr2h,c
 10459  001A34  0E00               	movlw	0
 10460  001A36  6EDF               	movwf	indf2,c
 10461  001A38  EF32  F00D         	goto	l1536
 10462  001A3C                     l1534:
 10463  001A3C  0E00               	movlw	0
 10464  001A3E  6E6A               	movwf	(btemp+8)^0,c
 10465  001A40  0E00               	movlw	0
 10466  001A42  6E6B               	movwf	(btemp+9)^0,c
 10467  001A44  0E00               	movlw	0
 10468  001A46  6E6C               	movwf	(btemp+10)^0,c
 10469  001A48  0E00               	movlw	0
 10470  001A4A  6E6D               	movwf	(btemp+11)^0,c
 10471                           
 10472                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10473  001A4C  0EF8               	movlw	-8
 10474  001A4E  C06A  FFE3         	movff	btemp+8,plusw1
 10475  001A52  0EF9               	movlw	-7
 10476  001A54  C06B  FFE3         	movff	btemp+9,plusw1
 10477  001A58  0EFA               	movlw	-6
 10478  001A5A  C06C  FFE3         	movff	btemp+10,plusw1
 10479  001A5E  0EFB               	movlw	-5
 10480  001A60  C06D  FFE3         	movff	btemp+11,plusw1
 10481  001A64                     l1536:
 10482                           
 10483                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 10484  001A64  0EF7               	movlw	247
 10485  001A66  24E1               	addwf	fsr1l,w,c
 10486  001A68  6ED9               	movwf	fsr2l,c
 10487  001A6A  0EFF               	movlw	255
 10488  001A6C  20E2               	addwfc	fsr1h,w,c
 10489  001A6E  6EDA               	movwf	fsr2h,c
 10490  001A70  50DF               	movf	indf2,w,c
 10491  001A72  6E6D               	movwf	(btemp+11)^0,c
 10492  001A74  0E80               	movlw	128
 10493  001A76  166D               	andwf	(btemp+11)^0,f,c
 10494                           
 10495                           ;stkvar	___fladd@aexp @ sp[(-4)+2]
 10496  001A78  0EFE               	movlw	-2
 10497  001A7A  C06D  FFE3         	movff	btemp+11,plusw1
 10498  001A7E                     
 10499                           ;stkvar	___fladd@signs @ sp[(-4)+3]
 10500                           ;stkvar	___fladd@aexp @ sp[(-4)+2]
 10501  001A7E  50E1               	movf	fsr1l,w,c
 10502  001A80  0FFE               	addlw	-2
 10503  001A82  6ED9               	movwf	fsr2l,c
 10504  001A84  50E2               	movf	fsr1h,w,c
 10505  001A86  6EDA               	movwf	fsr2h,c
 10506  001A88  0EFF               	movlw	255
 10507  001A8A  22DA               	addwfc	fsr2h,f,c
 10508  001A8C  0EFF               	movlw	-1
 10509  001A8E  50E3               	movf	plusw1,w,c
 10510  001A90  18DE               	xorwf	postinc2,w,c
 10511  001A92  B4D8               	btfsc	status,2,c
 10512  001A94  EF4E  F00D         	goto	u19_21
 10513  001A98  EF50  F00D         	goto	u19_20
 10514  001A9C                     u19_21:
 10515  001A9C  EF52  F00D         	goto	l1542
 10516  001AA0                     u19_20:
 10517  001AA0                     
 10518                           ;stkvar	___fladd@signs @ sp[(-4)+3]
 10519  001AA0  0EFF               	movlw	-1
 10520  001AA2  8CE3               	bsf	plusw1,6,c
 10521  001AA4                     l1542:
 10522                           
 10523                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 10524  001AA4  0EF7               	movlw	247
 10525  001AA6  24E1               	addwf	fsr1l,w,c
 10526  001AA8  6ED9               	movwf	fsr2l,c
 10527  001AAA  0EFF               	movlw	255
 10528  001AAC  20E2               	addwfc	fsr1h,w,c
 10529  001AAE  6EDA               	movwf	fsr2h,c
 10530  001AB0  50DF               	movf	indf2,w,c
 10531  001AB2  6E6D               	movwf	(btemp+11)^0,c
 10532  001AB4  90D8               	bcf	status,0,c
 10533  001AB6  346D               	rlcf	(btemp+11)^0,w,c
 10534  001AB8  6E6C               	movwf	(btemp+10)^0,c
 10535                           
 10536                           ;stkvar	___fladd@aexp @ sp[(-4)+2]
 10537  001ABA  0EFE               	movlw	-2
 10538  001ABC  C06C  FFE3         	movff	btemp+10,plusw1
 10539  001AC0                     
 10540                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 10541  001AC0  0EF6               	movlw	246
 10542  001AC2  24E1               	addwf	fsr1l,w,c
 10543  001AC4  6ED9               	movwf	fsr2l,c
 10544  001AC6  0EFF               	movlw	255
 10545  001AC8  20E2               	addwfc	fsr1h,w,c
 10546  001ACA  6EDA               	movwf	fsr2h,c
 10547  001ACC  AEDF               	btfss	indf2,7,c
 10548  001ACE  EF6B  F00D         	goto	u20_21
 10549  001AD2  EF6D  F00D         	goto	u20_20
 10550  001AD6                     u20_21:
 10551  001AD6  EF6F  F00D         	goto	l1548
 10552  001ADA                     u20_20:
 10553  001ADA                     
 10554                           ;stkvar	___fladd@aexp @ sp[(-4)+2]
 10555  001ADA  0EFE               	movlw	-2
 10556  001ADC  80E3               	bsf	plusw1,0,c
 10557  001ADE                     l1548:
 10558                           
 10559                           ;stkvar	___fladd@aexp @ sp[(-4)+2]
 10560  001ADE  0EFE               	movlw	-2
 10561  001AE0  50E3               	movf	plusw1,w,c
 10562  001AE2  B4D8               	btfsc	status,2,c
 10563  001AE4  EF76  F00D         	goto	u21_21
 10564  001AE8  EF78  F00D         	goto	u21_20
 10565  001AEC                     u21_21:
 10566  001AEC  EFA1  F00D         	goto	l1558
 10567  001AF0                     u21_20:
 10568  001AF0                     
 10569                           ;stkvar	___fladd@aexp @ sp[(-4)+2]
 10570  001AF0  0EFE               	movlw	-2
 10571  001AF2  28E3               	incf	plusw1,w,c
 10572  001AF4  A4D8               	btfss	status,2,c
 10573  001AF6  EF7F  F00D         	goto	u22_21
 10574  001AFA  EF81  F00D         	goto	u22_20
 10575  001AFE                     u22_21:
 10576  001AFE  EF95  F00D         	goto	l1554
 10577  001B02                     u22_20:
 10578  001B02  0E00               	movlw	0
 10579  001B04  6E6A               	movwf	(btemp+8)^0,c
 10580  001B06  0E00               	movlw	0
 10581  001B08  6E6B               	movwf	(btemp+9)^0,c
 10582  001B0A  0E00               	movlw	0
 10583  001B0C  6E6C               	movwf	(btemp+10)^0,c
 10584  001B0E  0E00               	movlw	0
 10585  001B10  6E6D               	movwf	(btemp+11)^0,c
 10586                           
 10587                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 10588  001B12  0EF4               	movlw	-12
 10589  001B14  C06A  FFE3         	movff	btemp+8,plusw1
 10590  001B18  0EF5               	movlw	-11
 10591  001B1A  C06B  FFE3         	movff	btemp+9,plusw1
 10592  001B1E  0EF6               	movlw	-10
 10593  001B20  C06C  FFE3         	movff	btemp+10,plusw1
 10594  001B24  0EF7               	movlw	-9
 10595  001B26  C06D  FFE3         	movff	btemp+11,plusw1
 10596  001B2A                     l1554:
 10597                           
 10598                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 10599  001B2A  0EF6               	movlw	-10
 10600  001B2C  8EE3               	bsf	plusw1,7,c
 10601  001B2E                     
 10602                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 10603  001B2E  0EF7               	movlw	247
 10604  001B30  24E1               	addwf	fsr1l,w,c
 10605  001B32  6ED9               	movwf	fsr2l,c
 10606  001B34  0EFF               	movlw	255
 10607  001B36  20E2               	addwfc	fsr1h,w,c
 10608  001B38  6EDA               	movwf	fsr2h,c
 10609  001B3A  0E00               	movlw	0
 10610  001B3C  6EDF               	movwf	indf2,c
 10611  001B3E  EFB5  F00D         	goto	l1560
 10612  001B42                     l1558:
 10613  001B42  0E00               	movlw	0
 10614  001B44  6E6A               	movwf	(btemp+8)^0,c
 10615  001B46  0E00               	movlw	0
 10616  001B48  6E6B               	movwf	(btemp+9)^0,c
 10617  001B4A  0E00               	movlw	0
 10618  001B4C  6E6C               	movwf	(btemp+10)^0,c
 10619  001B4E  0E00               	movlw	0
 10620  001B50  6E6D               	movwf	(btemp+11)^0,c
 10621                           
 10622                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 10623  001B52  0EF4               	movlw	-12
 10624  001B54  C06A  FFE3         	movff	btemp+8,plusw1
 10625  001B58  0EF5               	movlw	-11
 10626  001B5A  C06B  FFE3         	movff	btemp+9,plusw1
 10627  001B5E  0EF6               	movlw	-10
 10628  001B60  C06C  FFE3         	movff	btemp+10,plusw1
 10629  001B64  0EF7               	movlw	-9
 10630  001B66  C06D  FFE3         	movff	btemp+11,plusw1
 10631  001B6A                     l1560:
 10632                           
 10633                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 10634                           ;stkvar	___fladd@aexp @ sp[(-4)+2]
 10635  001B6A  50E1               	movf	fsr1l,w,c
 10636  001B6C  0FFE               	addlw	-2
 10637  001B6E  6ED9               	movwf	fsr2l,c
 10638  001B70  50E2               	movf	fsr1h,w,c
 10639  001B72  6EDA               	movwf	fsr2h,c
 10640  001B74  0EFF               	movlw	255
 10641  001B76  22DA               	addwfc	fsr2h,f,c
 10642  001B78  0EFD               	movlw	-3
 10643  001B7A  50E3               	movf	plusw1,w,c
 10644  001B7C  5CDE               	subwf	postinc2,w,c
 10645  001B7E  B0D8               	btfsc	status,0,c
 10646  001B80  EFC4  F00D         	goto	u23_21
 10647  001B84  EFC6  F00D         	goto	u23_20
 10648  001B88                     u23_21:
 10649  001B88  EF5A  F00E         	goto	l1596
 10650  001B8C                     u23_20:
 10651  001B8C                     
 10652                           ;stkvar	___fladd@signs @ sp[(-4)+3]
 10653  001B8C  0EFF               	movlw	-1
 10654  001B8E  ACE3               	btfss	plusw1,6,c
 10655  001B90  EFCC  F00D         	goto	u24_21
 10656  001B94  EFCE  F00D         	goto	u24_20
 10657  001B98                     u24_21:
 10658  001B98  EFD0  F00D         	goto	l1566
 10659  001B9C                     u24_20:
 10660  001B9C                     
 10661                           ;stkvar	___fladd@signs @ sp[(-4)+3]
 10662  001B9C  0EFF               	movlw	-1
 10663  001B9E  7EE3               	btg	plusw1,7,c
 10664  001BA0                     l1566:
 10665                           
 10666                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 10667                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 10668  001BA0  0EFD               	movlw	-3
 10669  001BA2  CFE3 F062          	movff	plusw1,btemp
 10670  001BA6  0EFC               	movlw	-4
 10671  001BA8  C062  FFE3         	movff	btemp,plusw1
 10672  001BAC                     
 10673                           ;stkvar	___fladd@aexp @ sp[(-4)+2]
 10674                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 10675  001BAC  0EFE               	movlw	-2
 10676  001BAE  CFE3 F062          	movff	plusw1,btemp
 10677  001BB2  0EFD               	movlw	-3
 10678  001BB4  C062  FFE3         	movff	btemp,plusw1
 10679  001BB8                     
 10680                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 10681                           ;stkvar	___fladd@aexp @ sp[(-4)+2]
 10682  001BB8  0EFC               	movlw	-4
 10683  001BBA  CFE3 F062          	movff	plusw1,btemp
 10684  001BBE  0EFE               	movlw	-2
 10685  001BC0  C062  FFE3         	movff	btemp,plusw1
 10686  001BC4                     
 10687                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10688                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 10689  001BC4  0EF8               	movlw	-8
 10690  001BC6  CFE3 F062          	movff	plusw1,btemp
 10691  001BCA  0EFC               	movlw	-4
 10692  001BCC  C062  FFE3         	movff	btemp,plusw1
 10693  001BD0                     
 10694                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 10695                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10696  001BD0  0EF4               	movlw	-12
 10697  001BD2  CFE3 F062          	movff	plusw1,btemp
 10698  001BD6  0EF8               	movlw	-8
 10699  001BD8  C062  FFE3         	movff	btemp,plusw1
 10700  001BDC                     
 10701                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 10702                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 10703  001BDC  0EFC               	movlw	-4
 10704  001BDE  CFE3 F062          	movff	plusw1,btemp
 10705  001BE2  0EF4               	movlw	-12
 10706  001BE4  C062  FFE3         	movff	btemp,plusw1
 10707  001BE8                     
 10708                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10709  001BE8  0EF9               	movlw	249
 10710  001BEA  24E1               	addwf	fsr1l,w,c
 10711  001BEC  6ED9               	movwf	fsr2l,c
 10712  001BEE  0EFF               	movlw	255
 10713  001BF0  20E2               	addwfc	fsr1h,w,c
 10714  001BF2  6EDA               	movwf	fsr2h,c
 10715  001BF4  50DF               	movf	indf2,w,c
 10716  001BF6  6E6D               	movwf	(btemp+11)^0,c
 10717                           
 10718                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 10719  001BF8  0EFC               	movlw	-4
 10720  001BFA  C06D  FFE3         	movff	btemp+11,plusw1
 10721  001BFE                     
 10722                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 10723  001BFE  0EF5               	movlw	245
 10724  001C00  24E1               	addwf	fsr1l,w,c
 10725  001C02  6ED9               	movwf	fsr2l,c
 10726  001C04  0EFF               	movlw	255
 10727  001C06  20E2               	addwfc	fsr1h,w,c
 10728  001C08  6EDA               	movwf	fsr2h,c
 10729                           
 10730                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10731  001C0A  0EF9               	movlw	249
 10732  001C0C  24E1               	addwf	fsr1l,w,c
 10733  001C0E  6EE9               	movwf	fsr0l,c
 10734  001C10  0EFF               	movlw	255
 10735  001C12  20E2               	addwfc	fsr1h,w,c
 10736  001C14  6EEA               	movwf	fsr0h,c
 10737  001C16  CFDF FFEF          	movff	indf2,indf0
 10738  001C1A                     
 10739                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 10740                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 10741  001C1A  0EF5               	movlw	245
 10742  001C1C  24E1               	addwf	fsr1l,w,c
 10743  001C1E  6ED9               	movwf	fsr2l,c
 10744  001C20  0EFF               	movlw	255
 10745  001C22  20E2               	addwfc	fsr1h,w,c
 10746  001C24  6EDA               	movwf	fsr2h,c
 10747  001C26  0EFC               	movlw	-4
 10748  001C28  CFE3 FFDF          	movff	plusw1,indf2
 10749  001C2C                     
 10750                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10751  001C2C  0EFA               	movlw	250
 10752  001C2E  24E1               	addwf	fsr1l,w,c
 10753  001C30  6ED9               	movwf	fsr2l,c
 10754  001C32  0EFF               	movlw	255
 10755  001C34  20E2               	addwfc	fsr1h,w,c
 10756  001C36  6EDA               	movwf	fsr2h,c
 10757  001C38  50DF               	movf	indf2,w,c
 10758  001C3A  6E6D               	movwf	(btemp+11)^0,c
 10759                           
 10760                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 10761  001C3C  0EFC               	movlw	-4
 10762  001C3E  C06D  FFE3         	movff	btemp+11,plusw1
 10763  001C42                     
 10764                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 10765  001C42  0EF6               	movlw	246
 10766  001C44  24E1               	addwf	fsr1l,w,c
 10767  001C46  6ED9               	movwf	fsr2l,c
 10768  001C48  0EFF               	movlw	255
 10769  001C4A  20E2               	addwfc	fsr1h,w,c
 10770  001C4C  6EDA               	movwf	fsr2h,c
 10771                           
 10772                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10773  001C4E  0EFA               	movlw	250
 10774  001C50  24E1               	addwf	fsr1l,w,c
 10775  001C52  6EE9               	movwf	fsr0l,c
 10776  001C54  0EFF               	movlw	255
 10777  001C56  20E2               	addwfc	fsr1h,w,c
 10778  001C58  6EEA               	movwf	fsr0h,c
 10779  001C5A  CFDF FFEF          	movff	indf2,indf0
 10780  001C5E                     
 10781                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 10782                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 10783  001C5E  0EF6               	movlw	246
 10784  001C60  24E1               	addwf	fsr1l,w,c
 10785  001C62  6ED9               	movwf	fsr2l,c
 10786  001C64  0EFF               	movlw	255
 10787  001C66  20E2               	addwfc	fsr1h,w,c
 10788  001C68  6EDA               	movwf	fsr2h,c
 10789  001C6A  0EFC               	movlw	-4
 10790  001C6C  CFE3 FFDF          	movff	plusw1,indf2
 10791  001C70                     
 10792                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10793  001C70  0EFB               	movlw	251
 10794  001C72  24E1               	addwf	fsr1l,w,c
 10795  001C74  6ED9               	movwf	fsr2l,c
 10796  001C76  0EFF               	movlw	255
 10797  001C78  20E2               	addwfc	fsr1h,w,c
 10798  001C7A  6EDA               	movwf	fsr2h,c
 10799  001C7C  50DF               	movf	indf2,w,c
 10800  001C7E  6E6D               	movwf	(btemp+11)^0,c
 10801                           
 10802                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 10803  001C80  0EFC               	movlw	-4
 10804  001C82  C06D  FFE3         	movff	btemp+11,plusw1
 10805  001C86                     
 10806                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 10807  001C86  0EF7               	movlw	247
 10808  001C88  24E1               	addwf	fsr1l,w,c
 10809  001C8A  6ED9               	movwf	fsr2l,c
 10810  001C8C  0EFF               	movlw	255
 10811  001C8E  20E2               	addwfc	fsr1h,w,c
 10812  001C90  6EDA               	movwf	fsr2h,c
 10813                           
 10814                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10815  001C92  0EFB               	movlw	251
 10816  001C94  24E1               	addwf	fsr1l,w,c
 10817  001C96  6EE9               	movwf	fsr0l,c
 10818  001C98  0EFF               	movlw	255
 10819  001C9A  20E2               	addwfc	fsr1h,w,c
 10820  001C9C  6EEA               	movwf	fsr0h,c
 10821  001C9E  CFDF FFEF          	movff	indf2,indf0
 10822  001CA2                     
 10823                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 10824                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 10825  001CA2  0EF7               	movlw	247
 10826  001CA4  24E1               	addwf	fsr1l,w,c
 10827  001CA6  6ED9               	movwf	fsr2l,c
 10828  001CA8  0EFF               	movlw	255
 10829  001CAA  20E2               	addwfc	fsr1h,w,c
 10830  001CAC  6EDA               	movwf	fsr2h,c
 10831  001CAE  0EFC               	movlw	-4
 10832  001CB0  CFE3 FFDF          	movff	plusw1,indf2
 10833  001CB4                     l1596:
 10834                           
 10835                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 10836  001CB4  0EFC               	movlw	-4
 10837  001CB6  6AE3               	clrf	plusw1,c
 10838  001CB8                     
 10839                           ;stkvar	___fladd@aexp @ sp[(-4)+2]
 10840  001CB8  0EFE               	movlw	-2
 10841  001CBA  50E3               	movf	plusw1,w,c
 10842  001CBC  6E6C               	movwf	(btemp+10)^0,c
 10843  001CBE  6A6D               	clrf	(btemp+11)^0,c
 10844                           
 10845                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 10846  001CC0  0EFD               	movlw	-3
 10847  001CC2  50E3               	movf	plusw1,w,c
 10848  001CC4  5E6C               	subwf	(btemp+10)^0,f,c
 10849  001CC6  0E00               	movlw	0
 10850  001CC8  5A6D               	subwfb	(btemp+11)^0,f,c
 10851  001CCA  BE6D               	btfsc	(btemp+11)^0,7,c
 10852  001CCC  EF71  F00E         	goto	u25_21
 10853  001CD0  506D               	movf	(btemp+11)^0,w,c
 10854  001CD2  E109               	bnz	u25_20
 10855  001CD4  0E1A               	movlw	26
 10856  001CD6  5C6C               	subwf	(btemp+10)^0,w,c
 10857  001CD8  A0D8               	btfss	status,0,c
 10858  001CDA  EF71  F00E         	goto	u25_21
 10859  001CDE  EF73  F00E         	goto	u25_20
 10860  001CE2                     u25_21:
 10861  001CE2  EFDC  F00E         	goto	l1620
 10862  001CE6                     u25_20:
 10863  001CE6                     
 10864                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10865  001CE6  0EF8               	movlw	-8
 10866  001CE8  50E3               	movf	plusw1,w,c
 10867  001CEA  E10D               	bnz	u26_21
 10868  001CEC  0EF9               	movlw	-7
 10869  001CEE  50E3               	movf	plusw1,w,c
 10870  001CF0  E10A               	bnz	u26_21
 10871  001CF2  0EFA               	movlw	-6
 10872  001CF4  50E3               	movf	plusw1,w,c
 10873  001CF6  E107               	bnz	u26_21
 10874  001CF8  0EFB               	movlw	-5
 10875  001CFA  50E3               	movf	plusw1,w,c
 10876  001CFC  A4D8               	btfss	status,2,c
 10877  001CFE  EF83  F00E         	goto	u26_21
 10878  001D02  EF87  F00E         	goto	u26_20
 10879  001D06                     u26_21:
 10880  001D06  6A6D               	clrf	(btemp+11)^0,c
 10881  001D08  2A6D               	incf	(btemp+11)^0,f,c
 10882  001D0A  EF88  F00E         	goto	u27_28
 10883  001D0E                     u26_20:
 10884  001D0E  6A6D               	clrf	(btemp+11)^0,c
 10885  001D10                     u27_28:
 10886                           
 10887                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 10888  001D10  0EFC               	movlw	-4
 10889  001D12  C06D  FFE3         	movff	btemp+11,plusw1
 10890  001D16                     
 10891                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10892  001D16  0EF8               	movlw	-8
 10893  001D18  6AE3               	clrf	plusw1,c
 10894  001D1A  0EF9               	movlw	-7
 10895  001D1C  6AE3               	clrf	plusw1,c
 10896  001D1E  0EFA               	movlw	-6
 10897  001D20  6AE3               	clrf	plusw1,c
 10898  001D22  0EFB               	movlw	-5
 10899  001D24  6AE3               	clrf	plusw1,c
 10900  001D26                     
 10901                           ;stkvar	___fladd@aexp @ sp[(-4)+2]
 10902                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 10903  001D26  0EFE               	movlw	-2
 10904  001D28  CFE3 F062          	movff	plusw1,btemp
 10905  001D2C  0EFD               	movlw	-3
 10906  001D2E  C062  FFE3         	movff	btemp,plusw1
 10907  001D32  EFED  F00E         	goto	l1622
 10908  001D36                     l1606:
 10909                           
 10910                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 10911  001D36  0EFC               	movlw	-4
 10912  001D38  A0E3               	btfss	plusw1,0,c
 10913  001D3A  EFA1  F00E         	goto	u28_21
 10914  001D3E  EFA3  F00E         	goto	u28_20
 10915  001D42                     u28_21:
 10916  001D42  EFAF  F00E         	goto	l1610
 10917  001D46                     u28_20:
 10918  001D46                     
 10919                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 10920  001D46  0EFC               	movlw	-4
 10921  001D48  CFE3 F06D          	movff	plusw1,btemp+11
 10922  001D4C  90D8               	bcf	status,0,c
 10923  001D4E  326D               	rrcf	(btemp+11)^0,f,c
 10924  001D50  0E01               	movlw	1
 10925  001D52  126D               	iorwf	(btemp+11)^0,f,c
 10926                           
 10927                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 10928  001D54  0EFC               	movlw	-4
 10929  001D56  C06D  FFE3         	movff	btemp+11,plusw1
 10930  001D5A  EFB8  F00E         	goto	l1612
 10931  001D5E                     l1610:
 10932                           
 10933                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 10934  001D5E  50E1               	movf	fsr1l,w,c
 10935  001D60  0FFC               	addlw	-4
 10936  001D62  6ED9               	movwf	fsr2l,c
 10937  001D64  50E2               	movf	fsr1h,w,c
 10938  001D66  6EDA               	movwf	fsr2h,c
 10939  001D68  0EFF               	movlw	255
 10940  001D6A  22DA               	addwfc	fsr2h,f,c
 10941  001D6C  90D8               	bcf	status,0,c
 10942  001D6E  32DF               	rrcf	indf2,f,c
 10943  001D70                     l1612:
 10944                           
 10945                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10946  001D70  0EF8               	movlw	-8
 10947  001D72  A0E3               	btfss	plusw1,0,c
 10948  001D74  EFBE  F00E         	goto	u29_21
 10949  001D78  EFC0  F00E         	goto	u29_20
 10950  001D7C                     u29_21:
 10951  001D7C  EFC2  F00E         	goto	l1616
 10952  001D80                     u29_20:
 10953  001D80                     
 10954                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 10955  001D80  0EFC               	movlw	-4
 10956  001D82  8EE3               	bsf	plusw1,7,c
 10957  001D84                     l1616:
 10958  001D84  0E01               	movlw	1
 10959  001D86  6E6D               	movwf	(btemp+11)^0,c
 10960                           
 10961                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 10962  001D88  50E1               	movf	fsr1l,w,c
 10963  001D8A  0FF8               	addlw	-8
 10964  001D8C  6ED9               	movwf	fsr2l,c
 10965  001D8E  50E2               	movf	fsr1h,w,c
 10966  001D90  6EDA               	movwf	fsr2h,c
 10967  001D92  0EFF               	movlw	255
 10968  001D94  22DA               	addwfc	fsr2h,f,c
 10969  001D96  286D               	incf	(btemp+11)^0,w,c
 10970  001D98  52DE               	movf	postinc2,f,c
 10971  001D9A  EFD7  F00E         	goto	u30_20
 10972  001D9E                     u30_25:
 10973  001D9E  52DE               	movf	postinc2,f,c
 10974  001DA0  90D8               	bcf	status,0,c
 10975  001DA2  BEDC               	btfsc	preinc2,7,c
 10976  001DA4  80D8               	bsf	status,0,c
 10977  001DA6  32DD               	rrcf	postdec2,f,c
 10978  001DA8  32DD               	rrcf	postdec2,f,c
 10979  001DAA  32DD               	rrcf	postdec2,f,c
 10980  001DAC  32DE               	rrcf	postinc2,f,c
 10981  001DAE                     u30_20:
 10982  001DAE  2EE8               	decfsz	wreg,f,c
 10983  001DB0  EFCF  F00E         	goto	u30_25
 10984  001DB4                     
 10985                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 10986  001DB4  0EFD               	movlw	-3
 10987  001DB6  2AE3               	incf	plusw1,f,c
 10988  001DB8                     l1620:
 10989                           
 10990                           ;stkvar	___fladd@aexp @ sp[(-4)+2]
 10991                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 10992  001DB8  50E1               	movf	fsr1l,w,c
 10993  001DBA  0FFD               	addlw	-3
 10994  001DBC  6ED9               	movwf	fsr2l,c
 10995  001DBE  50E2               	movf	fsr1h,w,c
 10996  001DC0  6EDA               	movwf	fsr2h,c
 10997  001DC2  0EFF               	movlw	255
 10998  001DC4  22DA               	addwfc	fsr2h,f,c
 10999  001DC6  0EFE               	movlw	-2
 11000  001DC8  50E3               	movf	plusw1,w,c
 11001  001DCA  5CDE               	subwf	postinc2,w,c
 11002  001DCC  A0D8               	btfss	status,0,c
 11003  001DCE  EFEB  F00E         	goto	u31_21
 11004  001DD2  EFED  F00E         	goto	u31_20
 11005  001DD6                     u31_21:
 11006  001DD6  EF9B  F00E         	goto	l1606
 11007  001DDA                     u31_20:
 11008  001DDA                     l1622:
 11009                           
 11010                           ;stkvar	___fladd@signs @ sp[(-4)+3]
 11011  001DDA  0EFF               	movlw	-1
 11012  001DDC  BCE3               	btfsc	plusw1,6,c
 11013  001DDE  EFF3  F00E         	goto	u32_21
 11014  001DE2  EFF5  F00E         	goto	u32_20
 11015  001DE6                     u32_21:
 11016  001DE6  EF77  F00F         	goto	l1648
 11017  001DEA                     u32_20:
 11018  001DEA                     
 11019                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 11020  001DEA  0EFD               	movlw	-3
 11021  001DEC  50E3               	movf	plusw1,w,c
 11022  001DEE  A4D8               	btfss	status,2,c
 11023  001DF0  EFFC  F00E         	goto	u33_21
 11024  001DF4  EFFE  F00E         	goto	u33_20
 11025  001DF8                     u33_21:
 11026  001DF8  EF08  F00F         	goto	l1630
 11027  001DFC                     u33_20:
 11028  001DFC  0E00               	movlw	0
 11029  001DFE  6E62               	movwf	btemp^0,c
 11030  001E00  0E00               	movlw	0
 11031  001E02  6E63               	movwf	(btemp+1)^0,c
 11032  001E04  0E00               	movlw	0
 11033  001E06  6E64               	movwf	(btemp+2)^0,c
 11034  001E08  0E00               	movlw	0
 11035  001E0A  6E65               	movwf	(btemp+3)^0,c
 11036  001E0C  EF2D  F011         	goto	l1115
 11037  001E10                     l1630:
 11038                           
 11039                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 11040                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11041  001E10  0EF8               	movlw	-8
 11042  001E12  50E3               	movf	plusw1,w,c
 11043  001E14  6E62               	movwf	btemp^0,c
 11044  001E16  0EF4               	movlw	-12
 11045  001E18  50E3               	movf	plusw1,w,c
 11046  001E1A  2662               	addwf	btemp^0,f,c
 11047  001E1C  0EF8               	movlw	-8
 11048  001E1E  C062  FFE3         	movff	btemp,plusw1
 11049  001E22  0EF9               	movlw	-7
 11050  001E24  50E3               	movf	plusw1,w,c
 11051  001E26  6E62               	movwf	btemp^0,c
 11052  001E28  0EF5               	movlw	-11
 11053  001E2A  50E3               	movf	plusw1,w,c
 11054  001E2C  2262               	addwfc	btemp^0,f,c
 11055  001E2E  0EF9               	movlw	-7
 11056  001E30  C062  FFE3         	movff	btemp,plusw1
 11057  001E34  0EFA               	movlw	-6
 11058  001E36  50E3               	movf	plusw1,w,c
 11059  001E38  6E62               	movwf	btemp^0,c
 11060  001E3A  0EF6               	movlw	-10
 11061  001E3C  50E3               	movf	plusw1,w,c
 11062  001E3E  2262               	addwfc	btemp^0,f,c
 11063  001E40  0EFA               	movlw	-6
 11064  001E42  C062  FFE3         	movff	btemp,plusw1
 11065  001E46  0EFB               	movlw	-5
 11066  001E48  50E3               	movf	plusw1,w,c
 11067  001E4A  6E62               	movwf	btemp^0,c
 11068  001E4C  0EF7               	movlw	-9
 11069  001E4E  50E3               	movf	plusw1,w,c
 11070  001E50  2262               	addwfc	btemp^0,f,c
 11071  001E52  0EFB               	movlw	-5
 11072  001E54  C062  FFE3         	movff	btemp,plusw1
 11073  001E58                     
 11074                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11075  001E58  0EFB               	movlw	-5
 11076  001E5A  A0E3               	btfss	plusw1,0,c
 11077  001E5C  EF32  F00F         	goto	u34_21
 11078  001E60  EF34  F00F         	goto	u34_20
 11079  001E64                     u34_21:
 11080  001E64  EF61  F010         	goto	l1686
 11081  001E68                     u34_20:
 11082  001E68                     
 11083                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 11084  001E68  0EFC               	movlw	-4
 11085  001E6A  A0E3               	btfss	plusw1,0,c
 11086  001E6C  EF3A  F00F         	goto	u35_21
 11087  001E70  EF3C  F00F         	goto	u35_20
 11088  001E74                     u35_21:
 11089  001E74  EF48  F00F         	goto	l1638
 11090  001E78                     u35_20:
 11091  001E78                     
 11092                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 11093  001E78  0EFC               	movlw	-4
 11094  001E7A  CFE3 F06D          	movff	plusw1,btemp+11
 11095  001E7E  90D8               	bcf	status,0,c
 11096  001E80  326D               	rrcf	(btemp+11)^0,f,c
 11097  001E82  0E01               	movlw	1
 11098  001E84  126D               	iorwf	(btemp+11)^0,f,c
 11099                           
 11100                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 11101  001E86  0EFC               	movlw	-4
 11102  001E88  C06D  FFE3         	movff	btemp+11,plusw1
 11103  001E8C  EF51  F00F         	goto	l1640
 11104  001E90                     l1638:
 11105                           
 11106                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 11107  001E90  50E1               	movf	fsr1l,w,c
 11108  001E92  0FFC               	addlw	-4
 11109  001E94  6ED9               	movwf	fsr2l,c
 11110  001E96  50E2               	movf	fsr1h,w,c
 11111  001E98  6EDA               	movwf	fsr2h,c
 11112  001E9A  0EFF               	movlw	255
 11113  001E9C  22DA               	addwfc	fsr2h,f,c
 11114  001E9E  90D8               	bcf	status,0,c
 11115  001EA0  32DF               	rrcf	indf2,f,c
 11116  001EA2                     l1640:
 11117                           
 11118                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11119  001EA2  0EF8               	movlw	-8
 11120  001EA4  A0E3               	btfss	plusw1,0,c
 11121  001EA6  EF57  F00F         	goto	u36_21
 11122  001EAA  EF59  F00F         	goto	u36_20
 11123  001EAE                     u36_21:
 11124  001EAE  EF5B  F00F         	goto	l1644
 11125  001EB2                     u36_20:
 11126  001EB2                     
 11127                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 11128  001EB2  0EFC               	movlw	-4
 11129  001EB4  8EE3               	bsf	plusw1,7,c
 11130  001EB6                     l1644:
 11131  001EB6  0E01               	movlw	1
 11132  001EB8  6E6D               	movwf	(btemp+11)^0,c
 11133                           
 11134                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11135  001EBA  50E1               	movf	fsr1l,w,c
 11136  001EBC  0FF8               	addlw	-8
 11137  001EBE  6ED9               	movwf	fsr2l,c
 11138  001EC0  50E2               	movf	fsr1h,w,c
 11139  001EC2  6EDA               	movwf	fsr2h,c
 11140  001EC4  0EFF               	movlw	255
 11141  001EC6  22DA               	addwfc	fsr2h,f,c
 11142  001EC8  286D               	incf	(btemp+11)^0,w,c
 11143  001ECA  52DE               	movf	postinc2,f,c
 11144  001ECC  EF70  F00F         	goto	u37_20
 11145  001ED0                     u37_25:
 11146  001ED0  52DE               	movf	postinc2,f,c
 11147  001ED2  90D8               	bcf	status,0,c
 11148  001ED4  BEDC               	btfsc	preinc2,7,c
 11149  001ED6  80D8               	bsf	status,0,c
 11150  001ED8  32DD               	rrcf	postdec2,f,c
 11151  001EDA  32DD               	rrcf	postdec2,f,c
 11152  001EDC  32DD               	rrcf	postdec2,f,c
 11153  001EDE  32DE               	rrcf	postinc2,f,c
 11154  001EE0                     u37_20:
 11155  001EE0  2EE8               	decfsz	wreg,f,c
 11156  001EE2  EF68  F00F         	goto	u37_25
 11157  001EE6                     
 11158                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 11159  001EE6  0EFD               	movlw	-3
 11160  001EE8  2AE3               	incf	plusw1,f,c
 11161  001EEA  EF61  F010         	goto	l1686
 11162  001EEE                     l1648:
 11163                           
 11164                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 11165                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11166  001EEE  50E1               	movf	fsr1l,w,c
 11167  001EF0  0FF8               	addlw	-8
 11168  001EF2  6ED9               	movwf	fsr2l,c
 11169  001EF4  50E2               	movf	fsr1h,w,c
 11170  001EF6  6EDA               	movwf	fsr2h,c
 11171  001EF8  0EFF               	movlw	255
 11172  001EFA  22DA               	addwfc	fsr2h,f,c
 11173  001EFC  0EF4               	movlw	-12
 11174  001EFE  50E3               	movf	plusw1,w,c
 11175  001F00  5CDE               	subwf	postinc2,w,c
 11176  001F02  0EF5               	movlw	-11
 11177  001F04  50E3               	movf	plusw1,w,c
 11178  001F06  58DE               	subwfb	postinc2,w,c
 11179  001F08  0EF6               	movlw	-10
 11180  001F0A  50E3               	movf	plusw1,w,c
 11181  001F0C  58DE               	subwfb	postinc2,w,c
 11182  001F0E  50DE               	movf	postinc2,w,c
 11183  001F10  0A80               	xorlw	128
 11184  001F12  6E62               	movwf	btemp^0,c
 11185  001F14  0EF7               	movlw	-9
 11186  001F16  50E3               	movf	plusw1,w,c
 11187  001F18  0A80               	xorlw	128
 11188  001F1A  5862               	subwfb	btemp^0,w,c
 11189  001F1C  B0D8               	btfsc	status,0,c
 11190  001F1E  EF93  F00F         	goto	u38_21
 11191  001F22  EF95  F00F         	goto	u38_20
 11192  001F26                     u38_21:
 11193  001F26  EFE5  F00F         	goto	l1660
 11194  001F2A                     u38_20:
 11195  001F2A                     
 11196                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11197                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 11198  001F2A  0EF4               	movlw	-12
 11199  001F2C  CFE3 F06A          	movff	plusw1,btemp+8
 11200  001F30  0EF5               	movlw	-11
 11201  001F32  CFE3 F06B          	movff	plusw1,btemp+9
 11202  001F36  0EF6               	movlw	-10
 11203  001F38  CFE3 F06C          	movff	plusw1,btemp+10
 11204  001F3C  0EF7               	movlw	-9
 11205  001F3E  CFE3 F06D          	movff	plusw1,btemp+11
 11206  001F42  0EF8               	movlw	-8
 11207  001F44  50E3               	movf	plusw1,w,c
 11208  001F46  5E6A               	subwf	(btemp+8)^0,f,c
 11209  001F48  0EF9               	movlw	-7
 11210  001F4A  50E3               	movf	plusw1,w,c
 11211  001F4C  5A6B               	subwfb	(btemp+9)^0,f,c
 11212  001F4E  0EFA               	movlw	-6
 11213  001F50  50E3               	movf	plusw1,w,c
 11214  001F52  5A6C               	subwfb	(btemp+10)^0,f,c
 11215  001F54  0EFB               	movlw	-5
 11216  001F56  50E3               	movf	plusw1,w,c
 11217  001F58  5A6D               	subwfb	(btemp+11)^0,f,c
 11218  001F5A  0EFF               	movlw	255
 11219  001F5C  246A               	addwf	(btemp+8)^0,w,c
 11220  001F5E  6E66               	movwf	(btemp+4)^0,c
 11221  001F60  0EFF               	movlw	255
 11222  001F62  206B               	addwfc	(btemp+9)^0,w,c
 11223  001F64  6E67               	movwf	(btemp+5)^0,c
 11224  001F66  0EFF               	movlw	255
 11225  001F68  206C               	addwfc	(btemp+10)^0,w,c
 11226  001F6A  6E68               	movwf	(btemp+6)^0,c
 11227  001F6C  0EFF               	movlw	255
 11228  001F6E  206D               	addwfc	(btemp+11)^0,w,c
 11229  001F70  6E69               	movwf	(btemp+7)^0,c
 11230                           
 11231                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11232  001F72  0EF8               	movlw	-8
 11233  001F74  C066  FFE3         	movff	btemp+4,plusw1
 11234  001F78  0EF9               	movlw	-7
 11235  001F7A  C067  FFE3         	movff	btemp+5,plusw1
 11236  001F7E  0EFA               	movlw	-6
 11237  001F80  C068  FFE3         	movff	btemp+6,plusw1
 11238  001F84  0EFB               	movlw	-5
 11239  001F86  C069  FFE3         	movff	btemp+7,plusw1
 11240  001F8A                     
 11241                           ;stkvar	___fladd@signs @ sp[(-4)+3]
 11242  001F8A  0EFF               	movlw	-1
 11243  001F8C  7EE3               	btg	plusw1,7,c
 11244  001F8E                     
 11245                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 11246  001F8E  0EFC               	movlw	-4
 11247  001F90  50E3               	movf	plusw1,w,c
 11248  001F92  0800               	sublw	0
 11249  001F94  6E6D               	movwf	(btemp+11)^0,c
 11250                           
 11251                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 11252  001F96  0EFC               	movlw	-4
 11253  001F98  C06D  FFE3         	movff	btemp+11,plusw1
 11254  001F9C                     
 11255                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 11256  001F9C  0EFC               	movlw	-4
 11257  001F9E  50E3               	movf	plusw1,w,c
 11258  001FA0  A4D8               	btfss	status,2,c
 11259  001FA2  EFD5  F00F         	goto	u39_21
 11260  001FA6  EFD7  F00F         	goto	u39_20
 11261  001FAA                     u39_21:
 11262  001FAA  EFF8  F00F         	goto	l1662
 11263  001FAE                     u39_20:
 11264  001FAE                     
 11265                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11266  001FAE  50E1               	movf	fsr1l,w,c
 11267  001FB0  0FF8               	addlw	-8
 11268  001FB2  6ED9               	movwf	fsr2l,c
 11269  001FB4  50E2               	movf	fsr1h,w,c
 11270  001FB6  6EDA               	movwf	fsr2h,c
 11271  001FB8  0EFF               	movlw	255
 11272  001FBA  22DA               	addwfc	fsr2h,f,c
 11273  001FBC  2ADE               	incf	postinc2,f,c
 11274  001FBE  0E00               	movlw	0
 11275  001FC0  22DE               	addwfc	postinc2,f,c
 11276  001FC2  22DE               	addwfc	postinc2,f,c
 11277  001FC4  22DE               	addwfc	postinc2,f,c
 11278  001FC6  EFF8  F00F         	goto	l1662
 11279  001FCA                     l1660:
 11280                           
 11281                           ;stkvar	___fladd@a @ sp[(-4)+-8]
 11282                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11283  001FCA  50E1               	movf	fsr1l,w,c
 11284  001FCC  0FF8               	addlw	-8
 11285  001FCE  6ED9               	movwf	fsr2l,c
 11286  001FD0  50E2               	movf	fsr1h,w,c
 11287  001FD2  6EDA               	movwf	fsr2h,c
 11288  001FD4  0EFF               	movlw	255
 11289  001FD6  22DA               	addwfc	fsr2h,f,c
 11290  001FD8  0EF4               	movlw	-12
 11291  001FDA  50E3               	movf	plusw1,w,c
 11292  001FDC  5EDE               	subwf	postinc2,f,c
 11293  001FDE  0EF5               	movlw	-11
 11294  001FE0  50E3               	movf	plusw1,w,c
 11295  001FE2  5ADE               	subwfb	postinc2,f,c
 11296  001FE4  0EF6               	movlw	-10
 11297  001FE6  50E3               	movf	plusw1,w,c
 11298  001FE8  5ADE               	subwfb	postinc2,f,c
 11299  001FEA  0EF7               	movlw	-9
 11300  001FEC  50E3               	movf	plusw1,w,c
 11301  001FEE  5ADE               	subwfb	postinc2,f,c
 11302  001FF0                     l1662:
 11303                           
 11304                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11305  001FF0  0EF8               	movlw	-8
 11306  001FF2  50E3               	movf	plusw1,w,c
 11307  001FF4  E10D               	bnz	u40_21
 11308  001FF6  0EF9               	movlw	-7
 11309  001FF8  50E3               	movf	plusw1,w,c
 11310  001FFA  E10A               	bnz	u40_21
 11311  001FFC  0EFA               	movlw	-6
 11312  001FFE  50E3               	movf	plusw1,w,c
 11313  002000  E107               	bnz	u40_21
 11314  002002  0EFB               	movlw	-5
 11315  002004  50E3               	movf	plusw1,w,c
 11316  002006  A4D8               	btfss	status,2,c
 11317  002008  EF08  F010         	goto	u40_21
 11318  00200C  EF0A  F010         	goto	u40_20
 11319  002010                     u40_21:
 11320  002010  EF59  F010         	goto	l1684
 11321  002014                     u40_20:
 11322  002014                     
 11323                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 11324  002014  0EFC               	movlw	-4
 11325  002016  50E3               	movf	plusw1,w,c
 11326  002018  A4D8               	btfss	status,2,c
 11327  00201A  EF11  F010         	goto	u41_21
 11328  00201E  EF13  F010         	goto	u41_20
 11329  002022                     u41_21:
 11330  002022  EF59  F010         	goto	l1684
 11331  002026                     u41_20:
 11332  002026  0E00               	movlw	0
 11333  002028  6E62               	movwf	btemp^0,c
 11334  00202A  0E00               	movlw	0
 11335  00202C  6E63               	movwf	(btemp+1)^0,c
 11336  00202E  0E00               	movlw	0
 11337  002030  6E64               	movwf	(btemp+2)^0,c
 11338  002032  0E00               	movlw	0
 11339  002034  6E65               	movwf	(btemp+3)^0,c
 11340  002036  EF2D  F011         	goto	l1115
 11341  00203A                     l1670:
 11342                           
 11343                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11344  00203A  90D8               	bcf	status,0,c
 11345  00203C  0EF8               	movlw	-8
 11346  00203E  36E3               	rlcf	plusw1,f,c
 11347  002040  0EF9               	movlw	-7
 11348  002042  36E3               	rlcf	plusw1,f,c
 11349  002044  0EFA               	movlw	-6
 11350  002046  36E3               	rlcf	plusw1,f,c
 11351  002048  0EFB               	movlw	-5
 11352  00204A  36E3               	rlcf	plusw1,f,c
 11353  00204C                     
 11354                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 11355  00204C  0EFC               	movlw	-4
 11356  00204E  AEE3               	btfss	plusw1,7,c
 11357  002050  EF2C  F010         	goto	u42_21
 11358  002054  EF2E  F010         	goto	u42_20
 11359  002058                     u42_21:
 11360  002058  EF30  F010         	goto	l1127
 11361  00205C                     u42_20:
 11362  00205C                     
 11363                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11364  00205C  0EF8               	movlw	-8
 11365  00205E  80E3               	bsf	plusw1,0,c
 11366  002060                     l1127:
 11367                           
 11368                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 11369  002060  0EFC               	movlw	-4
 11370  002062  A0E3               	btfss	plusw1,0,c
 11371  002064  EF36  F010         	goto	u43_21
 11372  002068  EF38  F010         	goto	u43_20
 11373  00206C                     u43_21:
 11374  00206C  EF45  F010         	goto	l1678
 11375  002070                     u43_20:
 11376  002070                     
 11377                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 11378  002070  0EFC               	movlw	-4
 11379  002072  CFE3 F06D          	movff	plusw1,btemp+11
 11380  002076  90D8               	bcf	status,0,c
 11381  002078  346D               	rlcf	(btemp+11)^0,w,c
 11382  00207A  6E6C               	movwf	(btemp+10)^0,c
 11383  00207C  0E01               	movlw	1
 11384  00207E  126C               	iorwf	(btemp+10)^0,f,c
 11385                           
 11386                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 11387  002080  0EFC               	movlw	-4
 11388  002082  C06C  FFE3         	movff	btemp+10,plusw1
 11389  002086  EF4E  F010         	goto	l1680
 11390  00208A                     l1678:
 11391                           
 11392                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 11393  00208A  50E1               	movf	fsr1l,w,c
 11394  00208C  0FFC               	addlw	-4
 11395  00208E  6ED9               	movwf	fsr2l,c
 11396  002090  50E2               	movf	fsr1h,w,c
 11397  002092  6EDA               	movwf	fsr2h,c
 11398  002094  0EFF               	movlw	255
 11399  002096  22DA               	addwfc	fsr2h,f,c
 11400  002098  90D8               	bcf	status,0,c
 11401  00209A  36DF               	rlcf	indf2,f,c
 11402  00209C                     l1680:
 11403                           
 11404                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 11405  00209C  0EFD               	movlw	-3
 11406  00209E  50E3               	movf	plusw1,w,c
 11407  0020A0  B4D8               	btfsc	status,2,c
 11408  0020A2  EF55  F010         	goto	u44_21
 11409  0020A6  EF57  F010         	goto	u44_20
 11410  0020AA                     u44_21:
 11411  0020AA  EF59  F010         	goto	l1684
 11412  0020AE                     u44_20:
 11413  0020AE                     
 11414                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 11415  0020AE  0EFD               	movlw	-3
 11416  0020B0  06E3               	decf	plusw1,f,c
 11417  0020B2                     l1684:
 11418                           
 11419                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11420  0020B2  0EFA               	movlw	-6
 11421  0020B4  AEE3               	btfss	plusw1,7,c
 11422  0020B6  EF5F  F010         	goto	u45_21
 11423  0020BA  EF61  F010         	goto	u45_20
 11424  0020BE                     u45_21:
 11425  0020BE  EF1D  F010         	goto	l1670
 11426  0020C2                     u45_20:
 11427  0020C2                     l1686:
 11428                           
 11429                           ;stkvar	___fladd@aexp @ sp[(-4)+2]
 11430  0020C2  0EFE               	movlw	-2
 11431  0020C4  6AE3               	clrf	plusw1,c
 11432  0020C6                     
 11433                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 11434  0020C6  0EFC               	movlw	-4
 11435  0020C8  AEE3               	btfss	plusw1,7,c
 11436  0020CA  EF69  F010         	goto	u46_21
 11437  0020CE  EF6B  F010         	goto	u46_20
 11438  0020D2                     u46_21:
 11439  0020D2  EF86  F010         	goto	l1698
 11440  0020D6                     u46_20:
 11441  0020D6                     
 11442                           ;stkvar	___fladd@grs @ sp[(-4)+0]
 11443  0020D6  0EFC               	movlw	-4
 11444  0020D8  CFE3 F06D          	movff	plusw1,btemp+11
 11445  0020DC  0E7F               	movlw	127
 11446  0020DE  166D               	andwf	(btemp+11)^0,f,c
 11447  0020E0  B4D8               	btfsc	status,2,c
 11448  0020E2  EF75  F010         	goto	u47_21
 11449  0020E6  EF77  F010         	goto	u47_20
 11450  0020EA                     u47_21:
 11451  0020EA  EF7C  F010         	goto	l1694
 11452  0020EE                     u47_20:
 11453  0020EE                     l1692:
 11454                           
 11455                           ;stkvar	___fladd@aexp @ sp[(-4)+2]
 11456  0020EE  0EFE               	movlw	-2
 11457  0020F0  6AE3               	clrf	plusw1,c
 11458  0020F2  2AE3               	incf	plusw1,f,c
 11459  0020F4  EF86  F010         	goto	l1698
 11460  0020F8                     l1694:
 11461                           
 11462                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11463  0020F8  0EF8               	movlw	-8
 11464  0020FA  A0E3               	btfss	plusw1,0,c
 11465  0020FC  EF82  F010         	goto	u48_21
 11466  002100  EF84  F010         	goto	u48_20
 11467  002104                     u48_21:
 11468  002104  EF86  F010         	goto	l1698
 11469  002108                     u48_20:
 11470  002108  EF77  F010         	goto	l1692
 11471  00210C                     l1698:
 11472                           
 11473                           ;stkvar	___fladd@aexp @ sp[(-4)+2]
 11474  00210C  0EFE               	movlw	-2
 11475  00210E  50E3               	movf	plusw1,w,c
 11476  002110  B4D8               	btfsc	status,2,c
 11477  002112  EF8D  F010         	goto	u49_21
 11478  002116  EF8F  F010         	goto	u49_20
 11479  00211A                     u49_21:
 11480  00211A  EFC6  F010         	goto	l1710
 11481  00211E                     u49_20:
 11482  00211E                     
 11483                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11484  00211E  50E1               	movf	fsr1l,w,c
 11485  002120  0FF8               	addlw	-8
 11486  002122  6ED9               	movwf	fsr2l,c
 11487  002124  50E2               	movf	fsr1h,w,c
 11488  002126  6EDA               	movwf	fsr2h,c
 11489  002128  0EFF               	movlw	255
 11490  00212A  22DA               	addwfc	fsr2h,f,c
 11491  00212C  2ADE               	incf	postinc2,f,c
 11492  00212E  0E00               	movlw	0
 11493  002130  22DE               	addwfc	postinc2,f,c
 11494  002132  22DE               	addwfc	postinc2,f,c
 11495  002134  22DE               	addwfc	postinc2,f,c
 11496  002136                     
 11497                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11498  002136  0EFB               	movlw	-5
 11499  002138  A0E3               	btfss	plusw1,0,c
 11500  00213A  EFA1  F010         	goto	u50_21
 11501  00213E  EFA3  F010         	goto	u50_20
 11502  002142                     u50_21:
 11503  002142  EFC6  F010         	goto	l1710
 11504  002146                     u50_20:
 11505  002146  0E01               	movlw	1
 11506  002148  6E6D               	movwf	(btemp+11)^0,c
 11507                           
 11508                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11509  00214A  50E1               	movf	fsr1l,w,c
 11510  00214C  0FF8               	addlw	-8
 11511  00214E  6ED9               	movwf	fsr2l,c
 11512  002150  50E2               	movf	fsr1h,w,c
 11513  002152  6EDA               	movwf	fsr2h,c
 11514  002154  0EFF               	movlw	255
 11515  002156  22DA               	addwfc	fsr2h,f,c
 11516  002158  286D               	incf	(btemp+11)^0,w,c
 11517  00215A  52DE               	movf	postinc2,f,c
 11518  00215C  EFB8  F010         	goto	u51_20
 11519  002160                     u51_25:
 11520  002160  52DE               	movf	postinc2,f,c
 11521  002162  90D8               	bcf	status,0,c
 11522  002164  BEDC               	btfsc	preinc2,7,c
 11523  002166  80D8               	bsf	status,0,c
 11524  002168  32DD               	rrcf	postdec2,f,c
 11525  00216A  32DD               	rrcf	postdec2,f,c
 11526  00216C  32DD               	rrcf	postdec2,f,c
 11527  00216E  32DE               	rrcf	postinc2,f,c
 11528  002170                     u51_20:
 11529  002170  2EE8               	decfsz	wreg,f,c
 11530  002172  EFB0  F010         	goto	u51_25
 11531  002176                     
 11532                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 11533  002176  0EFD               	movlw	-3
 11534  002178  28E3               	incf	plusw1,w,c
 11535  00217A  B4D8               	btfsc	status,2,c
 11536  00217C  EFC2  F010         	goto	u52_21
 11537  002180  EFC4  F010         	goto	u52_20
 11538  002184                     u52_21:
 11539  002184  EFC6  F010         	goto	l1710
 11540  002188                     u52_20:
 11541  002188                     
 11542                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 11543  002188  0EFD               	movlw	-3
 11544  00218A  2AE3               	incf	plusw1,f,c
 11545  00218C                     l1710:
 11546                           
 11547                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 11548  00218C  0EFD               	movlw	-3
 11549  00218E  28E3               	incf	plusw1,w,c
 11550  002190  B4D8               	btfsc	status,2,c
 11551  002192  EFCD  F010         	goto	u53_21
 11552  002196  EFCF  F010         	goto	u53_20
 11553  00219A                     u53_21:
 11554  00219A  EFD8  F010         	goto	l1714
 11555  00219E                     u53_20:
 11556  00219E                     
 11557                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 11558  00219E  0EFD               	movlw	-3
 11559  0021A0  50E3               	movf	plusw1,w,c
 11560  0021A2  A4D8               	btfss	status,2,c
 11561  0021A4  EFD6  F010         	goto	u54_21
 11562  0021A8  EFD8  F010         	goto	u54_20
 11563  0021AC                     u54_21:
 11564  0021AC  EFEB  F010         	goto	l1720
 11565  0021B0                     u54_20:
 11566  0021B0                     l1714:
 11567                           
 11568                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11569  0021B0  0EF8               	movlw	-8
 11570  0021B2  6AE3               	clrf	plusw1,c
 11571  0021B4  0EF9               	movlw	-7
 11572  0021B6  6AE3               	clrf	plusw1,c
 11573  0021B8  0EFA               	movlw	-6
 11574  0021BA  6AE3               	clrf	plusw1,c
 11575  0021BC  0EFB               	movlw	-5
 11576  0021BE  6AE3               	clrf	plusw1,c
 11577  0021C0                     
 11578                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 11579  0021C0  0EFD               	movlw	-3
 11580  0021C2  50E3               	movf	plusw1,w,c
 11581  0021C4  A4D8               	btfss	status,2,c
 11582  0021C6  EFE7  F010         	goto	u55_21
 11583  0021CA  EFE9  F010         	goto	u55_20
 11584  0021CE                     u55_21:
 11585  0021CE  EFEB  F010         	goto	l1720
 11586  0021D2                     u55_20:
 11587  0021D2                     
 11588                           ;stkvar	___fladd@signs @ sp[(-4)+3]
 11589  0021D2  0EFF               	movlw	-1
 11590  0021D4  6AE3               	clrf	plusw1,c
 11591  0021D6                     l1720:
 11592                           
 11593                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 11594  0021D6  0EFD               	movlw	-3
 11595  0021D8  A0E3               	btfss	plusw1,0,c
 11596  0021DA  EFF1  F010         	goto	u56_21
 11597  0021DE  EFF3  F010         	goto	u56_20
 11598  0021E2                     u56_21:
 11599  0021E2  EFFD  F010         	goto	l1724
 11600  0021E6                     u56_20:
 11601  0021E6                     
 11602                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11603  0021E6  0EFA               	movlw	250
 11604  0021E8  24E1               	addwf	fsr1l,w,c
 11605  0021EA  6ED9               	movwf	fsr2l,c
 11606  0021EC  0EFF               	movlw	255
 11607  0021EE  20E2               	addwfc	fsr1h,w,c
 11608  0021F0  6EDA               	movwf	fsr2h,c
 11609  0021F2  0E00               	movlw	0
 11610  0021F4  8EDB               	bsf	plusw2,7,c
 11611  0021F6  EF05  F011         	goto	l1726
 11612  0021FA                     l1724:
 11613                           
 11614                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11615  0021FA  0EFA               	movlw	250
 11616  0021FC  24E1               	addwf	fsr1l,w,c
 11617  0021FE  6ED9               	movwf	fsr2l,c
 11618  002200  0EFF               	movlw	255
 11619  002202  20E2               	addwfc	fsr1h,w,c
 11620  002204  6EDA               	movwf	fsr2h,c
 11621  002206  0E7F               	movlw	127
 11622  002208  16DF               	andwf	indf2,f,c
 11623  00220A                     l1726:
 11624                           
 11625                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11626  00220A  0EFB               	movlw	251
 11627  00220C  24E1               	addwf	fsr1l,w,c
 11628  00220E  6ED9               	movwf	fsr2l,c
 11629  002210  0EFF               	movlw	255
 11630  002212  20E2               	addwfc	fsr1h,w,c
 11631  002214  6EDA               	movwf	fsr2h,c
 11632                           
 11633                           ;stkvar	___fladd@bexp @ sp[(-4)+1]
 11634  002216  0EFD               	movlw	-3
 11635  002218  CFE3 F06D          	movff	plusw1,btemp+11
 11636  00221C  90D8               	bcf	status,0,c
 11637  00221E  306D               	rrcf	(btemp+11)^0,w,c
 11638  002220  6EDF               	movwf	indf2,c
 11639  002222                     
 11640                           ;stkvar	___fladd@signs @ sp[(-4)+3]
 11641  002222  0EFF               	movlw	-1
 11642  002224  AEE3               	btfss	plusw1,7,c
 11643  002226  EF17  F011         	goto	u57_21
 11644  00222A  EF19  F011         	goto	u57_20
 11645  00222E                     u57_21:
 11646  00222E  EF21  F011         	goto	l1732
 11647  002232                     u57_20:
 11648  002232                     
 11649                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11650  002232  0EFB               	movlw	251
 11651  002234  24E1               	addwf	fsr1l,w,c
 11652  002236  6ED9               	movwf	fsr2l,c
 11653  002238  0EFF               	movlw	255
 11654  00223A  20E2               	addwfc	fsr1h,w,c
 11655  00223C  6EDA               	movwf	fsr2h,c
 11656  00223E  0E00               	movlw	0
 11657  002240  8EDB               	bsf	plusw2,7,c
 11658  002242                     l1732:
 11659                           
 11660                           ;stkvar	___fladd@b @ sp[(-4)+-4]
 11661  002242  0EF8               	movlw	-8
 11662  002244  CFE3 F062          	movff	plusw1,btemp
 11663  002248  0EF9               	movlw	-7
 11664  00224A  CFE3 F063          	movff	plusw1,btemp+1
 11665  00224E  0EFA               	movlw	-6
 11666  002250  CFE3 F064          	movff	plusw1,btemp+2
 11667  002254  0EFB               	movlw	-5
 11668  002256  CFE3 F065          	movff	plusw1,btemp+3
 11669  00225A                     l1115:
 11670                           
 11671                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 11672  00225A  0EF4               	movlw	244
 11673  00225C  26E1               	addwf	fsr1l,f,c
 11674  00225E  0EFF               	movlw	255
 11675  002260  22E2               	addwfc	fsr1h,f,c
 11676  002262  0012               	return		;funcret
 11677  002264                     __end_of___fladd:
 11678                           	opt callstack 0
 11679                           
 11680 ;; *************** function ___flneg *****************
 11681 ;; Defined at:
 11682 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
 11683 ;; Parameters:    Size  Location     Type
 11684 ;;  f1              4  [STACK] unsigned char 
 11685 ;; Auto vars:     Size  Location     Type
 11686 ;;		None
 11687 ;; Return value:  Size  Location     Type
 11688 ;;                  4  [STACK] unsigned char 
 11689 ;; Registers used:
 11690 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 11691 ;; Tracked objects:
 11692 ;;		On entry : 0/0
 11693 ;;		On exit  : 0/0
 11694 ;;		Unchanged: 0/0
 11695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11696 ;;      Params:         0       0       0       0       0       0       0
 11697 ;;      Locals:         0       0       0       0       0       0       0
 11698 ;;      Temps:          0       0       0       0       0       0       0
 11699 ;;      Totals:         0       0       0       0       0       0       0
 11700 ;;Total ram usage:        0 bytes
 11701 ;; Hardware stack levels used:    1
 11702 ;; Hardware stack levels required when called:    4
 11703 ;; This function calls:
 11704 ;;		Nothing
 11705 ;; This function is called by:
 11706 ;;		_sprintf
 11707 ;; This function uses a reentrant model
 11708 ;;
 11709                           
 11710                           	psect	text33
 11711  0063D8                     __ptext33:
 11712                           	opt callstack 0
 11713  0063D8                     ___flneg:
 11714                           	opt callstack 19
 11715  0063D8                     
 11716                           ;stkvar	___flneg@f1 @ sp[(0)+-4]
 11717  0063D8  0EFC               	movlw	-4
 11718  0063DA  50E3               	movf	plusw1,w,c
 11719  0063DC  E10F               	bnz	u145_20
 11720  0063DE  0EFD               	movlw	-3
 11721  0063E0  50E3               	movf	plusw1,w,c
 11722  0063E2  E10C               	bnz	u145_20
 11723  0063E4  0EFE               	movlw	-2
 11724  0063E6  50E3               	movf	plusw1,w,c
 11725  0063E8  E109               	bnz	u145_20
 11726  0063EA  0EFF               	movlw	-1
 11727  0063EC  50E3               	movf	plusw1,w,c
 11728  0063EE  B4D8               	btfsc	status,2,c
 11729  0063F0  EFFC  F031         	goto	u145_21
 11730  0063F4  EFFE  F031         	goto	u145_20
 11731  0063F8                     u145_21:
 11732  0063F8  EF00  F032         	goto	l2378
 11733  0063FC                     u145_20:
 11734  0063FC                     
 11735                           ;stkvar	___flneg@f1 @ sp[(0)+-4]
 11736  0063FC  0EFF               	movlw	-1
 11737  0063FE  7EE3               	btg	plusw1,7,c
 11738  006400                     l2378:
 11739                           
 11740                           ;stkvar	___flneg@f1 @ sp[(0)+-4]
 11741  006400  0EFC               	movlw	-4
 11742  006402  CFE3 F062          	movff	plusw1,btemp
 11743  006406  0EFD               	movlw	-3
 11744  006408  CFE3 F063          	movff	plusw1,btemp+1
 11745  00640C  0EFE               	movlw	-2
 11746  00640E  CFE3 F064          	movff	plusw1,btemp+2
 11747  006412  0EFF               	movlw	-1
 11748  006414  CFE3 F065          	movff	plusw1,btemp+3
 11749  006418                     
 11750                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 11751  006418  52E5               	movf	postdec1,f,c
 11752  00641A  52E5               	movf	postdec1,f,c
 11753  00641C  52E5               	movf	postdec1,f,c
 11754  00641E  52E5               	movf	postdec1,f,c
 11755  006420  0012               	return		;funcret
 11756  006422                     __end_of___flneg:
 11757                           	opt callstack 0
 11758                           
 11759 ;; *************** function ___flge *****************
 11760 ;; Defined at:
 11761 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
 11762 ;; Parameters:    Size  Location     Type
 11763 ;;  ff1             4  [STACK] unsigned char 
 11764 ;;  ff2             4  [STACK] unsigned char 
 11765 ;; Auto vars:     Size  Location     Type
 11766 ;;		None
 11767 ;; Return value:  Size  Location     Type
 11768 ;;		None               void
 11769 ;; Registers used:
 11770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 11771 ;; Tracked objects:
 11772 ;;		On entry : 0/0
 11773 ;;		On exit  : 0/0
 11774 ;;		Unchanged: 0/0
 11775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11776 ;;      Params:         0       0       0       0       0       0       0
 11777 ;;      Locals:         0       0       0       0       0       0       0
 11778 ;;      Temps:          0       0       0       0       0       0       0
 11779 ;;      Totals:         0       0       0       0       0       0       0
 11780 ;;Total ram usage:        0 bytes
 11781 ;; Hardware stack levels used:    1
 11782 ;; Hardware stack levels required when called:    4
 11783 ;; This function calls:
 11784 ;;		Nothing
 11785 ;; This function is called by:
 11786 ;;		_task_lcd
 11787 ;;		_sprintf
 11788 ;; This function uses a reentrant model
 11789 ;;
 11790                           
 11791                           	psect	text34
 11792  004BF8                     __ptext34:
 11793                           	opt callstack 0
 11794  004BF8                     ___flge:
 11795                           	opt callstack 19
 11796  004BF8                     
 11797                           ;stkvar	___flge@ff1 @ sp[(0)+-4]
 11798  004BF8  50E1               	movf	fsr1l,w,c
 11799  004BFA  0FFC               	addlw	-4
 11800  004BFC  6ED9               	movwf	fsr2l,c
 11801  004BFE  50E2               	movf	fsr1h,w,c
 11802  004C00  6EDA               	movwf	fsr2h,c
 11803  004C02  0EFF               	movlw	255
 11804  004C04  22DA               	addwfc	fsr2h,f,c
 11805  004C06  0E00               	movlw	0
 11806  004C08  14DE               	andwf	postinc2,w,c
 11807  004C0A  6E6A               	movwf	(btemp+8)^0,c
 11808  004C0C  0E00               	movlw	0
 11809  004C0E  14DE               	andwf	postinc2,w,c
 11810  004C10  6E6B               	movwf	(btemp+9)^0,c
 11811  004C12  0E80               	movlw	128
 11812  004C14  14DE               	andwf	postinc2,w,c
 11813  004C16  6E6C               	movwf	(btemp+10)^0,c
 11814  004C18  0E7F               	movlw	127
 11815  004C1A  14DE               	andwf	postinc2,w,c
 11816  004C1C  6E6D               	movwf	(btemp+11)^0,c
 11817  004C1E  506A               	movf	(btemp+8)^0,w,c
 11818  004C20  106B               	iorwf	(btemp+9)^0,w,c
 11819  004C22  106C               	iorwf	(btemp+10)^0,w,c
 11820  004C24  106D               	iorwf	(btemp+11)^0,w,c
 11821  004C26  A4D8               	btfss	status,2,c
 11822  004C28  EF18  F026         	goto	u140_21
 11823  004C2C  EF1A  F026         	goto	u140_20
 11824  004C30                     u140_21:
 11825  004C30  EF22  F026         	goto	l2352
 11826  004C34                     u140_20:
 11827  004C34                     
 11828                           ;stkvar	___flge@ff1 @ sp[(0)+-4]
 11829  004C34  0EFC               	movlw	-4
 11830  004C36  6AE3               	clrf	plusw1,c
 11831  004C38  0EFD               	movlw	-3
 11832  004C3A  6AE3               	clrf	plusw1,c
 11833  004C3C  0EFE               	movlw	-2
 11834  004C3E  6AE3               	clrf	plusw1,c
 11835  004C40  0EFF               	movlw	-1
 11836  004C42  6AE3               	clrf	plusw1,c
 11837  004C44                     l2352:
 11838                           
 11839                           ;stkvar	___flge@ff2 @ sp[(0)+-8]
 11840  004C44  50E1               	movf	fsr1l,w,c
 11841  004C46  0FF8               	addlw	-8
 11842  004C48  6ED9               	movwf	fsr2l,c
 11843  004C4A  50E2               	movf	fsr1h,w,c
 11844  004C4C  6EDA               	movwf	fsr2h,c
 11845  004C4E  0EFF               	movlw	255
 11846  004C50  22DA               	addwfc	fsr2h,f,c
 11847  004C52  0E00               	movlw	0
 11848  004C54  14DE               	andwf	postinc2,w,c
 11849  004C56  6E6A               	movwf	(btemp+8)^0,c
 11850  004C58  0E00               	movlw	0
 11851  004C5A  14DE               	andwf	postinc2,w,c
 11852  004C5C  6E6B               	movwf	(btemp+9)^0,c
 11853  004C5E  0E80               	movlw	128
 11854  004C60  14DE               	andwf	postinc2,w,c
 11855  004C62  6E6C               	movwf	(btemp+10)^0,c
 11856  004C64  0E7F               	movlw	127
 11857  004C66  14DE               	andwf	postinc2,w,c
 11858  004C68  6E6D               	movwf	(btemp+11)^0,c
 11859  004C6A  506A               	movf	(btemp+8)^0,w,c
 11860  004C6C  106B               	iorwf	(btemp+9)^0,w,c
 11861  004C6E  106C               	iorwf	(btemp+10)^0,w,c
 11862  004C70  106D               	iorwf	(btemp+11)^0,w,c
 11863  004C72  A4D8               	btfss	status,2,c
 11864  004C74  EF3E  F026         	goto	u141_21
 11865  004C78  EF40  F026         	goto	u141_20
 11866  004C7C                     u141_21:
 11867  004C7C  EF48  F026         	goto	l832
 11868  004C80                     u141_20:
 11869  004C80                     
 11870                           ;stkvar	___flge@ff2 @ sp[(0)+-8]
 11871  004C80  0EF8               	movlw	-8
 11872  004C82  6AE3               	clrf	plusw1,c
 11873  004C84  0EF9               	movlw	-7
 11874  004C86  6AE3               	clrf	plusw1,c
 11875  004C88  0EFA               	movlw	-6
 11876  004C8A  6AE3               	clrf	plusw1,c
 11877  004C8C  0EFB               	movlw	-5
 11878  004C8E  6AE3               	clrf	plusw1,c
 11879  004C90                     l832:
 11880                           
 11881                           ;stkvar	___flge@ff1 @ sp[(0)+-4]
 11882  004C90  0EFF               	movlw	-1
 11883  004C92  AEE3               	btfss	plusw1,7,c
 11884  004C94  EF4E  F026         	goto	u142_21
 11885  004C98  EF50  F026         	goto	u142_20
 11886  004C9C                     u142_21:
 11887  004C9C  EF70  F026         	goto	l2358
 11888  004CA0                     u142_20:
 11889  004CA0                     
 11890                           ;stkvar	___flge@ff1 @ sp[(0)+-4]
 11891  004CA0  0E00               	movlw	0
 11892  004CA2  6E6A               	movwf	(btemp+8)^0,c
 11893  004CA4  0E00               	movlw	0
 11894  004CA6  6E6B               	movwf	(btemp+9)^0,c
 11895  004CA8  0E00               	movlw	0
 11896  004CAA  6E6C               	movwf	(btemp+10)^0,c
 11897  004CAC  0E80               	movlw	128
 11898  004CAE  6E6D               	movwf	(btemp+11)^0,c
 11899  004CB0  0EFC               	movlw	-4
 11900  004CB2  50E3               	movf	plusw1,w,c
 11901  004CB4  5E6A               	subwf	(btemp+8)^0,f,c
 11902  004CB6  0EFD               	movlw	-3
 11903  004CB8  50E3               	movf	plusw1,w,c
 11904  004CBA  5A6B               	subwfb	(btemp+9)^0,f,c
 11905  004CBC  0EFE               	movlw	-2
 11906  004CBE  50E3               	movf	plusw1,w,c
 11907  004CC0  5A6C               	subwfb	(btemp+10)^0,f,c
 11908  004CC2  0EFF               	movlw	-1
 11909  004CC4  50E3               	movf	plusw1,w,c
 11910  004CC6  5A6D               	subwfb	(btemp+11)^0,f,c
 11911                           
 11912                           ;stkvar	___flge@ff1 @ sp[(0)+-4]
 11913  004CC8  0EFC               	movlw	-4
 11914  004CCA  C06A  FFE3         	movff	btemp+8,plusw1
 11915  004CCE  0EFD               	movlw	-3
 11916  004CD0  C06B  FFE3         	movff	btemp+9,plusw1
 11917  004CD4  0EFE               	movlw	-2
 11918  004CD6  C06C  FFE3         	movff	btemp+10,plusw1
 11919  004CDA  0EFF               	movlw	-1
 11920  004CDC  C06D  FFE3         	movff	btemp+11,plusw1
 11921  004CE0                     l2358:
 11922                           
 11923                           ;stkvar	___flge@ff2 @ sp[(0)+-8]
 11924  004CE0  0EFB               	movlw	-5
 11925  004CE2  AEE3               	btfss	plusw1,7,c
 11926  004CE4  EF76  F026         	goto	u143_21
 11927  004CE8  EF78  F026         	goto	u143_20
 11928  004CEC                     u143_21:
 11929  004CEC  EF98  F026         	goto	l2362
 11930  004CF0                     u143_20:
 11931  004CF0                     
 11932                           ;stkvar	___flge@ff2 @ sp[(0)+-8]
 11933  004CF0  0E00               	movlw	0
 11934  004CF2  6E6A               	movwf	(btemp+8)^0,c
 11935  004CF4  0E00               	movlw	0
 11936  004CF6  6E6B               	movwf	(btemp+9)^0,c
 11937  004CF8  0E00               	movlw	0
 11938  004CFA  6E6C               	movwf	(btemp+10)^0,c
 11939  004CFC  0E80               	movlw	128
 11940  004CFE  6E6D               	movwf	(btemp+11)^0,c
 11941  004D00  0EF8               	movlw	-8
 11942  004D02  50E3               	movf	plusw1,w,c
 11943  004D04  5E6A               	subwf	(btemp+8)^0,f,c
 11944  004D06  0EF9               	movlw	-7
 11945  004D08  50E3               	movf	plusw1,w,c
 11946  004D0A  5A6B               	subwfb	(btemp+9)^0,f,c
 11947  004D0C  0EFA               	movlw	-6
 11948  004D0E  50E3               	movf	plusw1,w,c
 11949  004D10  5A6C               	subwfb	(btemp+10)^0,f,c
 11950  004D12  0EFB               	movlw	-5
 11951  004D14  50E3               	movf	plusw1,w,c
 11952  004D16  5A6D               	subwfb	(btemp+11)^0,f,c
 11953                           
 11954                           ;stkvar	___flge@ff2 @ sp[(0)+-8]
 11955  004D18  0EF8               	movlw	-8
 11956  004D1A  C06A  FFE3         	movff	btemp+8,plusw1
 11957  004D1E  0EF9               	movlw	-7
 11958  004D20  C06B  FFE3         	movff	btemp+9,plusw1
 11959  004D24  0EFA               	movlw	-6
 11960  004D26  C06C  FFE3         	movff	btemp+10,plusw1
 11961  004D2A  0EFB               	movlw	-5
 11962  004D2C  C06D  FFE3         	movff	btemp+11,plusw1
 11963  004D30                     l2362:
 11964                           
 11965                           ;stkvar	___flge@ff1 @ sp[(0)+-4]
 11966  004D30  0EFF               	movlw	-1
 11967  004D32  7EE3               	btg	plusw1,7,c
 11968  004D34                     
 11969                           ;stkvar	___flge@ff2 @ sp[(0)+-8]
 11970  004D34  0EFB               	movlw	-5
 11971  004D36  7EE3               	btg	plusw1,7,c
 11972  004D38                     
 11973                           ;stkvar	___flge@ff2 @ sp[(0)+-8]
 11974                           ;stkvar	___flge@ff1 @ sp[(0)+-4]
 11975  004D38  50E1               	movf	fsr1l,w,c
 11976  004D3A  0FFC               	addlw	-4
 11977  004D3C  6ED9               	movwf	fsr2l,c
 11978  004D3E  50E2               	movf	fsr1h,w,c
 11979  004D40  6EDA               	movwf	fsr2h,c
 11980  004D42  0EFF               	movlw	255
 11981  004D44  22DA               	addwfc	fsr2h,f,c
 11982  004D46  0EF8               	movlw	-8
 11983  004D48  50E3               	movf	plusw1,w,c
 11984  004D4A  5CDE               	subwf	postinc2,w,c
 11985  004D4C  0EF9               	movlw	-7
 11986  004D4E  50E3               	movf	plusw1,w,c
 11987  004D50  58DE               	subwfb	postinc2,w,c
 11988  004D52  0EFA               	movlw	-6
 11989  004D54  50E3               	movf	plusw1,w,c
 11990  004D56  58DE               	subwfb	postinc2,w,c
 11991  004D58  0EFB               	movlw	-5
 11992  004D5A  50E3               	movf	plusw1,w,c
 11993  004D5C  58DE               	subwfb	postinc2,w,c
 11994  004D5E  B0D8               	btfsc	status,0,c
 11995  004D60  EFB4  F026         	goto	u144_21
 11996  004D64  EFB6  F026         	goto	u144_20
 11997  004D68                     u144_21:
 11998  004D68  EFB9  F026         	goto	l2370
 11999  004D6C                     u144_20:
 12000  004D6C  9062               	bcf	btemp& (0+255),0,c
 12001  004D6E  EFBA  F026         	goto	l835
 12002  004D72                     l2370:
 12003  004D72  8062               	bsf	btemp& (0+255),0,c
 12004  004D74                     l835:
 12005                           
 12006                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 12007  004D74  0EF8               	movlw	248
 12008  004D76  26E1               	addwf	fsr1l,f,c
 12009  004D78  0EFF               	movlw	255
 12010  004D7A  22E2               	addwfc	fsr1h,f,c
 12011  004D7C  0012               	return		;funcret
 12012  004D7E                     __end_of___flge:
 12013                           	opt callstack 0
 12014                           
 12015 ;; *************** function ___fleq *****************
 12016 ;; Defined at:
 12017 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
 12018 ;; Parameters:    Size  Location     Type
 12019 ;;  ff1             4  [STACK] unsigned char 
 12020 ;;  ff2             4  [STACK] unsigned char 
 12021 ;; Auto vars:     Size  Location     Type
 12022 ;;		None
 12023 ;; Return value:  Size  Location     Type
 12024 ;;		None               void
 12025 ;; Registers used:
 12026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12027 ;; Tracked objects:
 12028 ;;		On entry : 0/0
 12029 ;;		On exit  : 0/0
 12030 ;;		Unchanged: 0/0
 12031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12032 ;;      Params:         0       0       0       0       0       0       0
 12033 ;;      Locals:         0       0       0       0       0       0       0
 12034 ;;      Temps:          0       0       0       0       0       0       0
 12035 ;;      Totals:         0       0       0       0       0       0       0
 12036 ;;Total ram usage:        0 bytes
 12037 ;; Hardware stack levels used:    1
 12038 ;; Hardware stack levels required when called:    4
 12039 ;; This function calls:
 12040 ;;		Nothing
 12041 ;; This function is called by:
 12042 ;;		_sprintf
 12043 ;; This function uses a reentrant model
 12044 ;;
 12045                           
 12046                           	psect	text35
 12047  00584C                     __ptext35:
 12048                           	opt callstack 0
 12049  00584C                     ___fleq:
 12050                           	opt callstack 19
 12051  00584C                     
 12052                           ;stkvar	___fleq@ff1 @ sp[(0)+-4]
 12053  00584C  50E1               	movf	fsr1l,w,c
 12054  00584E  0FFC               	addlw	-4
 12055  005850  6ED9               	movwf	fsr2l,c
 12056  005852  50E2               	movf	fsr1h,w,c
 12057  005854  6EDA               	movwf	fsr2h,c
 12058  005856  0EFF               	movlw	255
 12059  005858  22DA               	addwfc	fsr2h,f,c
 12060  00585A  0E00               	movlw	0
 12061  00585C  14DE               	andwf	postinc2,w,c
 12062  00585E  6E6A               	movwf	(btemp+8)^0,c
 12063  005860  0E00               	movlw	0
 12064  005862  14DE               	andwf	postinc2,w,c
 12065  005864  6E6B               	movwf	(btemp+9)^0,c
 12066  005866  0E80               	movlw	128
 12067  005868  14DE               	andwf	postinc2,w,c
 12068  00586A  6E6C               	movwf	(btemp+10)^0,c
 12069  00586C  0E7F               	movlw	127
 12070  00586E  14DE               	andwf	postinc2,w,c
 12071  005870  6E6D               	movwf	(btemp+11)^0,c
 12072  005872  506A               	movf	(btemp+8)^0,w,c
 12073  005874  106B               	iorwf	(btemp+9)^0,w,c
 12074  005876  106C               	iorwf	(btemp+10)^0,w,c
 12075  005878  106D               	iorwf	(btemp+11)^0,w,c
 12076  00587A  A4D8               	btfss	status,2,c
 12077  00587C  EF42  F02C         	goto	u137_21
 12078  005880  EF44  F02C         	goto	u137_20
 12079  005884                     u137_21:
 12080  005884  EF4C  F02C         	goto	l2336
 12081  005888                     u137_20:
 12082  005888                     
 12083                           ;stkvar	___fleq@ff1 @ sp[(0)+-4]
 12084  005888  0EFC               	movlw	-4
 12085  00588A  6AE3               	clrf	plusw1,c
 12086  00588C  0EFD               	movlw	-3
 12087  00588E  6AE3               	clrf	plusw1,c
 12088  005890  0EFE               	movlw	-2
 12089  005892  6AE3               	clrf	plusw1,c
 12090  005894  0EFF               	movlw	-1
 12091  005896  6AE3               	clrf	plusw1,c
 12092  005898                     l2336:
 12093                           
 12094                           ;stkvar	___fleq@ff2 @ sp[(0)+-8]
 12095  005898  50E1               	movf	fsr1l,w,c
 12096  00589A  0FF8               	addlw	-8
 12097  00589C  6ED9               	movwf	fsr2l,c
 12098  00589E  50E2               	movf	fsr1h,w,c
 12099  0058A0  6EDA               	movwf	fsr2h,c
 12100  0058A2  0EFF               	movlw	255
 12101  0058A4  22DA               	addwfc	fsr2h,f,c
 12102  0058A6  0E00               	movlw	0
 12103  0058A8  14DE               	andwf	postinc2,w,c
 12104  0058AA  6E6A               	movwf	(btemp+8)^0,c
 12105  0058AC  0E00               	movlw	0
 12106  0058AE  14DE               	andwf	postinc2,w,c
 12107  0058B0  6E6B               	movwf	(btemp+9)^0,c
 12108  0058B2  0E80               	movlw	128
 12109  0058B4  14DE               	andwf	postinc2,w,c
 12110  0058B6  6E6C               	movwf	(btemp+10)^0,c
 12111  0058B8  0E7F               	movlw	127
 12112  0058BA  14DE               	andwf	postinc2,w,c
 12113  0058BC  6E6D               	movwf	(btemp+11)^0,c
 12114  0058BE  506A               	movf	(btemp+8)^0,w,c
 12115  0058C0  106B               	iorwf	(btemp+9)^0,w,c
 12116  0058C2  106C               	iorwf	(btemp+10)^0,w,c
 12117  0058C4  106D               	iorwf	(btemp+11)^0,w,c
 12118  0058C6  A4D8               	btfss	status,2,c
 12119  0058C8  EF68  F02C         	goto	u138_21
 12120  0058CC  EF6A  F02C         	goto	u138_20
 12121  0058D0                     u138_21:
 12122  0058D0  EF72  F02C         	goto	l2340
 12123  0058D4                     u138_20:
 12124  0058D4                     
 12125                           ;stkvar	___fleq@ff2 @ sp[(0)+-8]
 12126  0058D4  0EF8               	movlw	-8
 12127  0058D6  6AE3               	clrf	plusw1,c
 12128  0058D8  0EF9               	movlw	-7
 12129  0058DA  6AE3               	clrf	plusw1,c
 12130  0058DC  0EFA               	movlw	-6
 12131  0058DE  6AE3               	clrf	plusw1,c
 12132  0058E0  0EFB               	movlw	-5
 12133  0058E2  6AE3               	clrf	plusw1,c
 12134  0058E4                     l2340:
 12135                           
 12136                           ;stkvar	___fleq@ff2 @ sp[(0)+-8]
 12137                           ;stkvar	___fleq@ff1 @ sp[(0)+-4]
 12138  0058E4  50E1               	movf	fsr1l,w,c
 12139  0058E6  0FFC               	addlw	-4
 12140  0058E8  6ED9               	movwf	fsr2l,c
 12141  0058EA  50E2               	movf	fsr1h,w,c
 12142  0058EC  6EDA               	movwf	fsr2h,c
 12143  0058EE  0EFF               	movlw	255
 12144  0058F0  22DA               	addwfc	fsr2h,f,c
 12145  0058F2  0EF8               	movlw	-8
 12146  0058F4  50E3               	movf	plusw1,w,c
 12147  0058F6  18DE               	xorwf	postinc2,w,c
 12148  0058F8  E112               	bnz	u139_20
 12149  0058FA  0EF9               	movlw	-7
 12150  0058FC  50E3               	movf	plusw1,w,c
 12151  0058FE  18DE               	xorwf	postinc2,w,c
 12152  005900  E10E               	bnz	u139_20
 12153  005902  0EFA               	movlw	-6
 12154  005904  50E3               	movf	plusw1,w,c
 12155  005906  18DE               	xorwf	postinc2,w,c
 12156  005908  E10A               	bnz	u139_20
 12157  00590A  0EFB               	movlw	-5
 12158  00590C  50E3               	movf	plusw1,w,c
 12159  00590E  18DE               	xorwf	postinc2,w,c
 12160  005910  B4D8               	btfsc	status,2,c
 12161  005912  EF8D  F02C         	goto	u139_21
 12162  005916  EF8F  F02C         	goto	u139_20
 12163  00591A                     u139_21:
 12164  00591A  EF92  F02C         	goto	l2344
 12165  00591E                     u139_20:
 12166  00591E  9062               	bcf	btemp& (0+255),0,c
 12167  005920  EF93  F02C         	goto	l828
 12168  005924                     l2344:
 12169  005924  8062               	bsf	btemp& (0+255),0,c
 12170  005926                     l828:
 12171                           
 12172                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 12173  005926  0EF8               	movlw	248
 12174  005928  26E1               	addwf	fsr1l,f,c
 12175  00592A  0EFF               	movlw	255
 12176  00592C  22E2               	addwfc	fsr1h,f,c
 12177  00592E  0012               	return		;funcret
 12178  005930                     __end_of___fleq:
 12179                           	opt callstack 0
 12180                           
 12181 ;; *************** function _sem_wait *****************
 12182 ;; Defined at:
 12183 ;;		line 21 in file "semaphore.c"
 12184 ;; Parameters:    Size  Location     Type
 12185 ;;  sem             2  [STACK] PTR struct sem
 12186 ;;		 -> sem3(18), sem2(18), sem1(18), 
 12187 ;; Auto vars:     Size  Location     Type
 12188 ;;		None
 12189 ;; Return value:  Size  Location     Type
 12190 ;;                  1  [STACK] void 
 12191 ;; Registers used:
 12192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
 12193 ;; Tracked objects:
 12194 ;;		On entry : 0/0
 12195 ;;		On exit  : 0/0
 12196 ;;		Unchanged: 0/0
 12197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12198 ;;      Params:         0       0       0       0       0       0       0
 12199 ;;      Locals:         0       0       0       0       0       0       0
 12200 ;;      Temps:          0       0       0       0       0       0       0
 12201 ;;      Totals:         0       0       0       0       0       0       0
 12202 ;;Total ram usage:        0 bytes
 12203 ;; Hardware stack levels used:    1
 12204 ;; Hardware stack levels required when called:    7
 12205 ;; This function calls:
 12206 ;;		___awmod
 12207 ;;		_dispatcher
 12208 ;; This function is called by:
 12209 ;;		_task_um
 12210 ;;		_task_dois
 12211 ;;		_task_tres
 12212 ;;		_task_lcd
 12213 ;;		_task_m1
 12214 ;;		_task_m2
 12215 ;; This function uses a reentrant model
 12216 ;;
 12217                           
 12218                           	psect	text36
 12219  005664                     __ptext36:
 12220                           	opt callstack 0
 12221  005664                     _sem_wait:
 12222                           	opt callstack 17
 12223  005664                     
 12224                           ;semaphore.c: 23: INTCONbits.GIE = 0;;
 12225  005664  9EF2               	bcf	242,7,c	;volatile
 12226  005666                     
 12227                           ;semaphore.c: 25: sem->contador--;
 12228                           ;stkvar	sem_wait@sem @ sp[(0)+-2]
 12229  005666  0EFE               	movlw	-2
 12230  005668  CFE3 F06C          	movff	plusw1,btemp+10
 12231  00566C  0EFF               	movlw	-1
 12232  00566E  CFE3 F06D          	movff	plusw1,btemp+11
 12233  005672  0E10               	movlw	16
 12234  005674  246C               	addwf	(btemp+10)^0,w,c
 12235  005676  6ED9               	movwf	fsr2l,c
 12236  005678  0E00               	movlw	0
 12237  00567A  206D               	addwfc	(btemp+11)^0,w,c
 12238  00567C  6EDA               	movwf	fsr2h,c
 12239  00567E  06DE               	decf	postinc2,f,c
 12240  005680  0E00               	movlw	0
 12241  005682  5ADD               	subwfb	postdec2,f,c
 12242  005684                     
 12243                           ;semaphore.c: 26: if (sem->contador < 0) {
 12244                           ;stkvar	sem_wait@sem @ sp[(0)+-2]
 12245  005684  0EFE               	movlw	-2
 12246  005686  CFE3 F06C          	movff	plusw1,btemp+10
 12247  00568A  0EFF               	movlw	-1
 12248  00568C  CFE3 F06D          	movff	plusw1,btemp+11
 12249  005690  0E10               	movlw	16
 12250  005692  246C               	addwf	(btemp+10)^0,w,c
 12251  005694  6ED9               	movwf	fsr2l,c
 12252  005696  0E00               	movlw	0
 12253  005698  206D               	addwfc	(btemp+11)^0,w,c
 12254  00569A  6EDA               	movwf	fsr2h,c
 12255  00569C  0E01               	movlw	1
 12256  00569E  BEDB               	btfsc	plusw2,7,c
 12257  0056A0  EF56  F02B         	goto	u181_20
 12258  0056A4  EF54  F02B         	goto	u181_21
 12259  0056A8                     u181_21:
 12260  0056A8  EFAF  F02B         	goto	l2624
 12261  0056AC                     u181_20:
 12262  0056AC                     
 12263                           ;semaphore.c: 28: sem->bloqueados[sem->bloqued_tasks] = f_aptos.task_running;
 12264  0056AC  EE23  F04A         	lfsr	2,_f_aptos+680
 12265                           
 12266                           ;stkvar	sem_wait@sem @ sp[(0)+-2]
 12267  0056B0  0EFE               	movlw	-2
 12268  0056B2  CFE3 F06C          	movff	plusw1,btemp+10
 12269  0056B6  0EFF               	movlw	-1
 12270  0056B8  CFE3 F06D          	movff	plusw1,btemp+11
 12271  0056BC  0E0C               	movlw	12
 12272  0056BE  246C               	addwf	(btemp+10)^0,w,c
 12273  0056C0  6EE9               	movwf	fsr0l,c
 12274  0056C2  0E00               	movlw	0
 12275  0056C4  206D               	addwfc	(btemp+11)^0,w,c
 12276  0056C6  6EEA               	movwf	fsr0h,c
 12277  0056C8  CFEE F06C          	movff	postinc0,btemp+10
 12278  0056CC  CFED F06D          	movff	postdec0,btemp+11
 12279  0056D0  90D8               	bcf	status,0,c
 12280  0056D2  346C               	rlcf	(btemp+10)^0,w,c
 12281  0056D4  6E6A               	movwf	(btemp+8)^0,c
 12282  0056D6  346D               	rlcf	(btemp+11)^0,w,c
 12283  0056D8  6E6B               	movwf	(btemp+9)^0,c
 12284                           
 12285                           ;stkvar	sem_wait@sem @ sp[(0)+-2]
 12286  0056DA  0EFE               	movlw	-2
 12287  0056DC  CFE3 F06C          	movff	plusw1,btemp+10
 12288  0056E0  0EFF               	movlw	-1
 12289  0056E2  CFE3 F06D          	movff	plusw1,btemp+11
 12290  0056E6  506A               	movf	(btemp+8)^0,w,c
 12291  0056E8  246C               	addwf	(btemp+10)^0,w,c
 12292  0056EA  6EE9               	movwf	fsr0l,c
 12293  0056EC  506B               	movf	(btemp+9)^0,w,c
 12294  0056EE  206D               	addwfc	(btemp+11)^0,w,c
 12295  0056F0  6EEA               	movwf	fsr0h,c
 12296  0056F2  CFDE FFEE          	movff	postinc2,postinc0
 12297  0056F6  CFDD FFED          	movff	postdec2,postdec0
 12298  0056FA                     
 12299                           ;semaphore.c: 29: sem->bloqued_tasks = (sem->bloqued_tasks+1) % (6+1);
 12300  0056FA  0E07               	movlw	7
 12301  0056FC  6EE6               	movwf	postinc1,c
 12302  0056FE  0E00               	movlw	0
 12303  005700  6EE6               	movwf	postinc1,c
 12304                           
 12305                           ;stkvar	sem_wait@sem @ sp[(-2)+-2]
 12306  005702  0EFC               	movlw	-4
 12307  005704  CFE3 F06C          	movff	plusw1,btemp+10
 12308  005708  0EFD               	movlw	-3
 12309  00570A  CFE3 F06D          	movff	plusw1,btemp+11
 12310  00570E  0E0C               	movlw	12
 12311  005710  246C               	addwf	(btemp+10)^0,w,c
 12312  005712  6ED9               	movwf	fsr2l,c
 12313  005714  0E00               	movlw	0
 12314  005716  206D               	addwfc	(btemp+11)^0,w,c
 12315  005718  6EDA               	movwf	fsr2h,c
 12316  00571A  CFDE F06C          	movff	postinc2,btemp+10
 12317  00571E  CFDD F06D          	movff	postdec2,btemp+11
 12318  005722  0E01               	movlw	1
 12319  005724  266C               	addwf	(btemp+10)^0,f,c
 12320  005726  0E00               	movlw	0
 12321  005728  226D               	addwfc	(btemp+11)^0,f,c
 12322  00572A  C06C  FFE6         	movff	btemp+10,postinc1
 12323  00572E  C06D  FFE6         	movff	btemp+11,postinc1
 12324  005732  ECE2  F028         	call	___awmod	;wreg free
 12325                           
 12326                           ;stkvar	sem_wait@sem @ sp[(0)+-2]
 12327  005736  0EFE               	movlw	-2
 12328  005738  CFE3 F06C          	movff	plusw1,btemp+10
 12329  00573C  0EFF               	movlw	-1
 12330  00573E  CFE3 F06D          	movff	plusw1,btemp+11
 12331  005742  0E0C               	movlw	12
 12332  005744  246C               	addwf	(btemp+10)^0,w,c
 12333  005746  6ED9               	movwf	fsr2l,c
 12334  005748  0E00               	movlw	0
 12335  00574A  206D               	addwfc	(btemp+11)^0,w,c
 12336  00574C  6EDA               	movwf	fsr2h,c
 12337  00574E  C062  FFDE         	movff	btemp,postinc2
 12338  005752  C063  FFDD         	movff	btemp+1,postdec2
 12339  005756                     
 12340                           ;semaphore.c: 30: dispatcher(W_SEMAPHORE);
 12341  005756  0E04               	movlw	4
 12342  005758  6EE6               	movwf	postinc1,c
 12343  00575A  EC74  F018         	call	_dispatcher	;wreg free
 12344  00575E                     l2624:
 12345                           
 12346                           ;semaphore.c: 31: };semaphore.c: 33: INTCONbits.GIE = 1;;
 12347  00575E  8EF2               	bsf	242,7,c	;volatile
 12348  005760                     
 12349                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 12350  005760  52E5               	movf	postdec1,f,c
 12351  005762  52E5               	movf	postdec1,f,c
 12352  005764  0012               	return		;funcret
 12353  005766                     __end_of_sem_wait:
 12354                           	opt callstack 0
 12355                           
 12356 ;; *************** function _sem_post *****************
 12357 ;; Defined at:
 12358 ;;		line 36 in file "semaphore.c"
 12359 ;; Parameters:    Size  Location     Type
 12360 ;;  sem             2  [STACK] PTR struct sem
 12361 ;;		 -> sem3(18), sem2(18), sem1(18), 
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;		None
 12364 ;; Return value:  Size  Location     Type
 12365 ;;                  1  [STACK] void 
 12366 ;; Registers used:
 12367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
 12368 ;; Tracked objects:
 12369 ;;		On entry : 0/0
 12370 ;;		On exit  : 0/0
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12373 ;;      Params:         0       0       0       0       0       0       0
 12374 ;;      Locals:         0       0       0       0       0       0       0
 12375 ;;      Temps:          0       0       0       0       0       0       0
 12376 ;;      Totals:         0       0       0       0       0       0       0
 12377 ;;Total ram usage:        0 bytes
 12378 ;; Hardware stack levels used:    1
 12379 ;; Hardware stack levels required when called:    7
 12380 ;; This function calls:
 12381 ;;		___awmod
 12382 ;;		_dispatcher
 12383 ;; This function is called by:
 12384 ;;		_task_um
 12385 ;;		_task_dois
 12386 ;;		_task_tres
 12387 ;;		_task_lcd
 12388 ;;		_task_m1
 12389 ;;		_task_m2
 12390 ;; This function uses a reentrant model
 12391 ;;
 12392                           
 12393                           	psect	text37
 12394  005076                     __ptext37:
 12395                           	opt callstack 0
 12396  005076                     _sem_post:
 12397                           	opt callstack 17
 12398  005076                     
 12399                           ;semaphore.c: 38: INTCONbits.GIE = 0;;
 12400  005076  9EF2               	bcf	242,7,c	;volatile
 12401  005078                     
 12402                           ;semaphore.c: 40: sem->contador++;
 12403                           ;stkvar	sem_post@sem @ sp[(0)+-2]
 12404  005078  0EFE               	movlw	-2
 12405  00507A  CFE3 F06C          	movff	plusw1,btemp+10
 12406  00507E  0EFF               	movlw	-1
 12407  005080  CFE3 F06D          	movff	plusw1,btemp+11
 12408  005084  0E10               	movlw	16
 12409  005086  246C               	addwf	(btemp+10)^0,w,c
 12410  005088  6ED9               	movwf	fsr2l,c
 12411  00508A  0E00               	movlw	0
 12412  00508C  206D               	addwfc	(btemp+11)^0,w,c
 12413  00508E  6EDA               	movwf	fsr2h,c
 12414  005090  2ADE               	incf	postinc2,f,c
 12415  005092  0E00               	movlw	0
 12416  005094  22DD               	addwfc	postdec2,f,c
 12417  005096                     
 12418                           ;semaphore.c: 41: if (sem->contador <= 0) {
 12419                           ;stkvar	sem_post@sem @ sp[(0)+-2]
 12420  005096  0EFE               	movlw	-2
 12421  005098  CFE3 F06C          	movff	plusw1,btemp+10
 12422  00509C  0EFF               	movlw	-1
 12423  00509E  CFE3 F06D          	movff	plusw1,btemp+11
 12424  0050A2  0E10               	movlw	16
 12425  0050A4  246C               	addwf	(btemp+10)^0,w,c
 12426  0050A6  6ED9               	movwf	fsr2l,c
 12427  0050A8  0E00               	movlw	0
 12428  0050AA  206D               	addwfc	(btemp+11)^0,w,c
 12429  0050AC  6EDA               	movwf	fsr2h,c
 12430  0050AE  0E01               	movlw	1
 12431  0050B0  BEDB               	btfsc	plusw2,7,c
 12432  0050B2  EF66  F028         	goto	u182_20
 12433  0050B6  0E01               	movlw	1
 12434  0050B8  50DB               	movf	plusw2,w,c
 12435  0050BA  E106               	bnz	u182_21
 12436  0050BC  04DE               	decf	postinc2,w,c
 12437  0050BE  B0D8               	btfsc	status,0,c
 12438  0050C0  EF64  F028         	goto	u182_21
 12439  0050C4  EF66  F028         	goto	u182_20
 12440  0050C8                     u182_21:
 12441  0050C8  EFDE  F028         	goto	l2638
 12442  0050CC                     u182_20:
 12443  0050CC                     
 12444                           ;semaphore.c: 43: f_aptos.APTOS[sem->bloqueados[sem->next_task_to_unblock]].task_state =
      +                           READY;
 12445                           ;stkvar	sem_post@sem @ sp[(0)+-2]
 12446  0050CC  0EFE               	movlw	-2
 12447  0050CE  CFE3 F06C          	movff	plusw1,btemp+10
 12448  0050D2  0EFF               	movlw	-1
 12449  0050D4  CFE3 F06D          	movff	plusw1,btemp+11
 12450  0050D8  0E0E               	movlw	14
 12451  0050DA  246C               	addwf	(btemp+10)^0,w,c
 12452  0050DC  6ED9               	movwf	fsr2l,c
 12453  0050DE  0E00               	movlw	0
 12454  0050E0  206D               	addwfc	(btemp+11)^0,w,c
 12455  0050E2  6EDA               	movwf	fsr2h,c
 12456  0050E4  CFDE F06C          	movff	postinc2,btemp+10
 12457  0050E8  CFDD F06D          	movff	postdec2,btemp+11
 12458  0050EC  90D8               	bcf	status,0,c
 12459  0050EE  346C               	rlcf	(btemp+10)^0,w,c
 12460  0050F0  6E6A               	movwf	(btemp+8)^0,c
 12461  0050F2  346D               	rlcf	(btemp+11)^0,w,c
 12462  0050F4  6E6B               	movwf	(btemp+9)^0,c
 12463                           
 12464                           ;stkvar	sem_post@sem @ sp[(0)+-2]
 12465  0050F6  0EFE               	movlw	-2
 12466  0050F8  CFE3 F06C          	movff	plusw1,btemp+10
 12467  0050FC  0EFF               	movlw	-1
 12468  0050FE  CFE3 F06D          	movff	plusw1,btemp+11
 12469  005102  506A               	movf	(btemp+8)^0,w,c
 12470  005104  246C               	addwf	(btemp+10)^0,w,c
 12471  005106  6ED9               	movwf	fsr2l,c
 12472  005108  506B               	movf	(btemp+9)^0,w,c
 12473  00510A  206D               	addwfc	(btemp+11)^0,w,c
 12474  00510C  6EDA               	movwf	fsr2h,c
 12475  00510E  CFDE F06C          	movff	postinc2,btemp+10
 12476  005112  CFDD F06D          	movff	postdec2,btemp+11
 12477  005116  0E71               	movlw	113
 12478  005118  026C               	mulwf	(btemp+10)^0,c
 12479  00511A  CFF3 F06A          	movff	prodl,btemp+8
 12480  00511E  CFF4 F06B          	movff	prodh,btemp+9
 12481  005122  026D               	mulwf	(btemp+11)^0,c
 12482  005124  50F3               	movf	prodl,w,c
 12483  005126  266B               	addwf	(btemp+9)^0,f,c
 12484  005128  0EA6               	movlw	low (_f_aptos+4)
 12485  00512A  246A               	addwf	(btemp+8)^0,w,c
 12486  00512C  6ED9               	movwf	fsr2l,c
 12487  00512E  0E00               	movlw	high (_f_aptos+4)
 12488  005130  206B               	addwfc	(btemp+9)^0,w,c
 12489  005132  6EDA               	movwf	fsr2h,c
 12490  005134  0E01               	movlw	1
 12491  005136  6EDF               	movwf	indf2,c
 12492  005138                     
 12493                           ;semaphore.c: 44: sem->next_task_to_unblock = (sem->next_task_to_unblock+1) % sem->bloqu
      +                          ed_tasks;
 12494                           ;stkvar	sem_post@sem @ sp[(0)+-2]
 12495  005138  0EFE               	movlw	-2
 12496  00513A  CFE3 F06C          	movff	plusw1,btemp+10
 12497  00513E  0EFF               	movlw	-1
 12498  005140  CFE3 F06D          	movff	plusw1,btemp+11
 12499  005144  0E0C               	movlw	12
 12500  005146  246C               	addwf	(btemp+10)^0,w,c
 12501  005148  6ED9               	movwf	fsr2l,c
 12502  00514A  0E00               	movlw	0
 12503  00514C  206D               	addwfc	(btemp+11)^0,w,c
 12504  00514E  6EDA               	movwf	fsr2h,c
 12505  005150  CFDE F06C          	movff	postinc2,btemp+10
 12506  005154  CFDD F06D          	movff	postdec2,btemp+11
 12507  005158  C06C  FFE6         	movff	btemp+10,postinc1
 12508  00515C  C06D  FFE6         	movff	btemp+11,postinc1
 12509                           
 12510                           ;stkvar	sem_post@sem @ sp[(-2)+-2]
 12511  005160  0EFC               	movlw	-4
 12512  005162  CFE3 F06C          	movff	plusw1,btemp+10
 12513  005166  0EFD               	movlw	-3
 12514  005168  CFE3 F06D          	movff	plusw1,btemp+11
 12515  00516C  0E0E               	movlw	14
 12516  00516E  246C               	addwf	(btemp+10)^0,w,c
 12517  005170  6ED9               	movwf	fsr2l,c
 12518  005172  0E00               	movlw	0
 12519  005174  206D               	addwfc	(btemp+11)^0,w,c
 12520  005176  6EDA               	movwf	fsr2h,c
 12521  005178  CFDE F06C          	movff	postinc2,btemp+10
 12522  00517C  CFDD F06D          	movff	postdec2,btemp+11
 12523  005180  0E01               	movlw	1
 12524  005182  266C               	addwf	(btemp+10)^0,f,c
 12525  005184  0E00               	movlw	0
 12526  005186  226D               	addwfc	(btemp+11)^0,f,c
 12527  005188  C06C  FFE6         	movff	btemp+10,postinc1
 12528  00518C  C06D  FFE6         	movff	btemp+11,postinc1
 12529  005190  ECE2  F028         	call	___awmod	;wreg free
 12530                           
 12531                           ;stkvar	sem_post@sem @ sp[(0)+-2]
 12532  005194  0EFE               	movlw	-2
 12533  005196  CFE3 F06C          	movff	plusw1,btemp+10
 12534  00519A  0EFF               	movlw	-1
 12535  00519C  CFE3 F06D          	movff	plusw1,btemp+11
 12536  0051A0  0E0E               	movlw	14
 12537  0051A2  246C               	addwf	(btemp+10)^0,w,c
 12538  0051A4  6ED9               	movwf	fsr2l,c
 12539  0051A6  0E00               	movlw	0
 12540  0051A8  206D               	addwfc	(btemp+11)^0,w,c
 12541  0051AA  6EDA               	movwf	fsr2h,c
 12542  0051AC  C062  FFDE         	movff	btemp,postinc2
 12543  0051B0  C063  FFDD         	movff	btemp+1,postdec2
 12544  0051B4                     
 12545                           ;semaphore.c: 45: dispatcher(READY);
 12546  0051B4  0E01               	movlw	1
 12547  0051B6  6EE6               	movwf	postinc1,c
 12548  0051B8  EC74  F018         	call	_dispatcher	;wreg free
 12549  0051BC                     l2638:
 12550                           
 12551                           ;semaphore.c: 46: };semaphore.c: 48: INTCONbits.GIE = 1;;
 12552  0051BC  8EF2               	bsf	242,7,c	;volatile
 12553  0051BE                     
 12554                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 12555  0051BE  52E5               	movf	postdec1,f,c
 12556  0051C0  52E5               	movf	postdec1,f,c
 12557  0051C2  0012               	return		;funcret
 12558  0051C4                     __end_of_sem_post:
 12559                           	opt callstack 0
 12560                           
 12561 ;; *************** function _pipe_write *****************
 12562 ;; Defined at:
 12563 ;;		line 42 in file "pipe.c"
 12564 ;; Parameters:    Size  Location     Type
 12565 ;;  p               2  [STACK] PTR struct pipe
 12566 ;;		 -> msg1(10), 
 12567 ;;  data            1  [STACK] unsigned char 
 12568 ;; Auto vars:     Size  Location     Type
 12569 ;;		None
 12570 ;; Return value:  Size  Location     Type
 12571 ;;                  1  [STACK] void 
 12572 ;; Registers used:
 12573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
 12574 ;; Tracked objects:
 12575 ;;		On entry : 0/0
 12576 ;;		On exit  : 0/0
 12577 ;;		Unchanged: 0/0
 12578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12579 ;;      Params:         0       0       0       0       0       0       0
 12580 ;;      Locals:         0       0       0       0       0       0       0
 12581 ;;      Temps:          0       0       0       0       0       0       0
 12582 ;;      Totals:         0       0       0       0       0       0       0
 12583 ;;Total ram usage:        0 bytes
 12584 ;; Hardware stack levels used:    1
 12585 ;; Hardware stack levels required when called:    7
 12586 ;; This function calls:
 12587 ;;		_dispatcher
 12588 ;; This function is called by:
 12589 ;;		_task_lcd
 12590 ;; This function uses a reentrant model
 12591 ;;
 12592                           
 12593                           	psect	text38
 12594  004882                     __ptext38:
 12595                           	opt callstack 0
 12596  004882                     _pipe_write:
 12597                           	opt callstack 17
 12598  004882                     
 12599                           ;pipe.c: 44: INTCONbits.GIE = 0;;
 12600  004882  9EF2               	bcf	242,7,c	;volatile
 12601  004884                     
 12602                           ;pipe.c: 46: if (p->pipe_size < 2) {
 12603                           ;stkvar	pipe_write@p @ sp[(0)+-2]
 12604  004884  0EFE               	movlw	-2
 12605  004886  CFE3 F06C          	movff	plusw1,btemp+10
 12606  00488A  0EFF               	movlw	-1
 12607  00488C  CFE3 F06D          	movff	plusw1,btemp+11
 12608  004890  0E02               	movlw	2
 12609  004892  246C               	addwf	(btemp+10)^0,w,c
 12610  004894  6ED9               	movwf	fsr2l,c
 12611  004896  0E00               	movlw	0
 12612  004898  206D               	addwfc	(btemp+11)^0,w,c
 12613  00489A  6EDA               	movwf	fsr2h,c
 12614  00489C  0E01               	movlw	1
 12615  00489E  50DB               	movf	plusw2,w,c
 12616  0048A0  E107               	bnz	u236_21
 12617  0048A2  0E02               	movlw	2
 12618  0048A4  5CDE               	subwf	postinc2,w,c
 12619  0048A6  B0D8               	btfsc	status,0,c
 12620  0048A8  EF58  F024         	goto	u236_21
 12621  0048AC  EF5A  F024         	goto	u236_20
 12622  0048B0                     u236_21:
 12623  0048B0  EF0D  F025         	goto	l2968
 12624  0048B4                     u236_20:
 12625  0048B4                     
 12626                           ;pipe.c: 47: p->pipe_data[p->pipe_pos_write] = data;
 12627                           ;stkvar	pipe_write@data @ sp[(0)+-3]
 12628                           ;stkvar	pipe_write@p @ sp[(0)+-2]
 12629  0048B4  0EFE               	movlw	-2
 12630  0048B6  CFE3 F06C          	movff	plusw1,btemp+10
 12631  0048BA  0EFF               	movlw	-1
 12632  0048BC  CFE3 F06D          	movff	plusw1,btemp+11
 12633  0048C0  0E06               	movlw	6
 12634  0048C2  246C               	addwf	(btemp+10)^0,w,c
 12635  0048C4  6ED9               	movwf	fsr2l,c
 12636  0048C6  0E00               	movlw	0
 12637  0048C8  206D               	addwfc	(btemp+11)^0,w,c
 12638  0048CA  6EDA               	movwf	fsr2h,c
 12639  0048CC  CFDE F06C          	movff	postinc2,btemp+10
 12640  0048D0  CFDD F06D          	movff	postdec2,btemp+11
 12641                           
 12642                           ;stkvar	pipe_write@p @ sp[(0)+-2]
 12643  0048D4  0EFE               	movlw	-2
 12644  0048D6  CFE3 F06A          	movff	plusw1,btemp+8
 12645  0048DA  0EFF               	movlw	-1
 12646  0048DC  CFE3 F06B          	movff	plusw1,btemp+9
 12647  0048E0  506C               	movf	(btemp+10)^0,w,c
 12648  0048E2  246A               	addwf	(btemp+8)^0,w,c
 12649  0048E4  6ED9               	movwf	fsr2l,c
 12650  0048E6  506D               	movf	(btemp+11)^0,w,c
 12651  0048E8  206B               	addwfc	(btemp+9)^0,w,c
 12652  0048EA  6EDA               	movwf	fsr2h,c
 12653  0048EC  0EFD               	movlw	-3
 12654  0048EE  CFE3 FFDF          	movff	plusw1,indf2
 12655                           
 12656                           ;pipe.c: 48: p->pipe_pos_write = (p->pipe_pos_write + 1) % 2;
 12657                           ;stkvar	pipe_write@p @ sp[(0)+-2]
 12658  0048F2  0EFE               	movlw	-2
 12659  0048F4  CFE3 F06C          	movff	plusw1,btemp+10
 12660  0048F8  0EFF               	movlw	-1
 12661  0048FA  CFE3 F06D          	movff	plusw1,btemp+11
 12662  0048FE  0E06               	movlw	6
 12663  004900  246C               	addwf	(btemp+10)^0,w,c
 12664  004902  6ED9               	movwf	fsr2l,c
 12665  004904  0E00               	movlw	0
 12666  004906  206D               	addwfc	(btemp+11)^0,w,c
 12667  004908  6EDA               	movwf	fsr2h,c
 12668  00490A  CFDE F06C          	movff	postinc2,btemp+10
 12669  00490E  CFDD F06D          	movff	postdec2,btemp+11
 12670  004912  0E01               	movlw	1
 12671  004914  266C               	addwf	(btemp+10)^0,f,c
 12672  004916  0E00               	movlw	0
 12673  004918  226D               	addwfc	(btemp+11)^0,f,c
 12674  00491A  0E01               	movlw	1
 12675  00491C  166C               	andwf	(btemp+10)^0,f,c
 12676  00491E  0E00               	movlw	0
 12677  004920  166D               	andwf	(btemp+11)^0,f,c
 12678                           
 12679                           ;stkvar	pipe_write@p @ sp[(0)+-2]
 12680  004922  0EFE               	movlw	-2
 12681  004924  CFE3 F06A          	movff	plusw1,btemp+8
 12682  004928  0EFF               	movlw	-1
 12683  00492A  CFE3 F06B          	movff	plusw1,btemp+9
 12684  00492E  0E06               	movlw	6
 12685  004930  246A               	addwf	(btemp+8)^0,w,c
 12686  004932  6ED9               	movwf	fsr2l,c
 12687  004934  0E00               	movlw	0
 12688  004936  206B               	addwfc	(btemp+9)^0,w,c
 12689  004938  6EDA               	movwf	fsr2h,c
 12690  00493A  C06C  FFDE         	movff	btemp+10,postinc2
 12691  00493E  C06D  FFDD         	movff	btemp+11,postdec2
 12692                           
 12693                           ;pipe.c: 49: p->pipe_size = p->pipe_size + 1;
 12694                           ;stkvar	pipe_write@p @ sp[(0)+-2]
 12695  004942  0EFE               	movlw	-2
 12696  004944  CFE3 F06C          	movff	plusw1,btemp+10
 12697  004948  0EFF               	movlw	-1
 12698  00494A  CFE3 F06D          	movff	plusw1,btemp+11
 12699  00494E  0E02               	movlw	2
 12700  004950  246C               	addwf	(btemp+10)^0,w,c
 12701  004952  6ED9               	movwf	fsr2l,c
 12702  004954  0E00               	movlw	0
 12703  004956  206D               	addwfc	(btemp+11)^0,w,c
 12704  004958  6EDA               	movwf	fsr2h,c
 12705  00495A  CFDE F06C          	movff	postinc2,btemp+10
 12706  00495E  CFDD F06D          	movff	postdec2,btemp+11
 12707  004962  0E01               	movlw	1
 12708  004964  266C               	addwf	(btemp+10)^0,f,c
 12709  004966  0E00               	movlw	0
 12710  004968  226D               	addwfc	(btemp+11)^0,f,c
 12711                           
 12712                           ;stkvar	pipe_write@p @ sp[(0)+-2]
 12713  00496A  0EFE               	movlw	-2
 12714  00496C  CFE3 F06A          	movff	plusw1,btemp+8
 12715  004970  0EFF               	movlw	-1
 12716  004972  CFE3 F06B          	movff	plusw1,btemp+9
 12717  004976  0E02               	movlw	2
 12718  004978  246A               	addwf	(btemp+8)^0,w,c
 12719  00497A  6ED9               	movwf	fsr2l,c
 12720  00497C  0E00               	movlw	0
 12721  00497E  206B               	addwfc	(btemp+9)^0,w,c
 12722  004980  6EDA               	movwf	fsr2h,c
 12723  004982  C06C  FFDE         	movff	btemp+10,postinc2
 12724  004986  C06D  FFDD         	movff	btemp+11,postdec2
 12725  00498A                     
 12726                           ;pipe.c: 50: if (p->pipe_task_bloqued > 0) {
 12727                           ;stkvar	pipe_write@p @ sp[(0)+-2]
 12728  00498A  0EFE               	movlw	-2
 12729  00498C  CFE3 F06C          	movff	plusw1,btemp+10
 12730  004990  0EFF               	movlw	-1
 12731  004992  CFE3 F06D          	movff	plusw1,btemp+11
 12732  004996  0E08               	movlw	8
 12733  004998  246C               	addwf	(btemp+10)^0,w,c
 12734  00499A  6ED9               	movwf	fsr2l,c
 12735  00499C  0E00               	movlw	0
 12736  00499E  206D               	addwfc	(btemp+11)^0,w,c
 12737  0049A0  6EDA               	movwf	fsr2h,c
 12738  0049A2  50DE               	movf	postinc2,w,c
 12739  0049A4  10DE               	iorwf	postinc2,w,c
 12740  0049A6  B4D8               	btfsc	status,2,c
 12741  0049A8  EFD8  F024         	goto	u237_21
 12742  0049AC  EFDA  F024         	goto	u237_20
 12743  0049B0                     u237_21:
 12744  0049B0  EF23  F025         	goto	l2972
 12745  0049B4                     u237_20:
 12746  0049B4                     
 12747                           ;pipe.c: 51: f_aptos.APTOS[p->pipe_task_bloqued].task_state = READY;
 12748                           ;stkvar	pipe_write@p @ sp[(0)+-2]
 12749  0049B4  0EFE               	movlw	-2
 12750  0049B6  CFE3 F06C          	movff	plusw1,btemp+10
 12751  0049BA  0EFF               	movlw	-1
 12752  0049BC  CFE3 F06D          	movff	plusw1,btemp+11
 12753  0049C0  0E08               	movlw	8
 12754  0049C2  246C               	addwf	(btemp+10)^0,w,c
 12755  0049C4  6ED9               	movwf	fsr2l,c
 12756  0049C6  0E00               	movlw	0
 12757  0049C8  206D               	addwfc	(btemp+11)^0,w,c
 12758  0049CA  6EDA               	movwf	fsr2h,c
 12759  0049CC  CFDE F06C          	movff	postinc2,btemp+10
 12760  0049D0  CFDD F06D          	movff	postdec2,btemp+11
 12761  0049D4  0E71               	movlw	113
 12762  0049D6  026C               	mulwf	(btemp+10)^0,c
 12763  0049D8  CFF3 F06A          	movff	prodl,btemp+8
 12764  0049DC  CFF4 F06B          	movff	prodh,btemp+9
 12765  0049E0  026D               	mulwf	(btemp+11)^0,c
 12766  0049E2  50F3               	movf	prodl,w,c
 12767  0049E4  266B               	addwf	(btemp+9)^0,f,c
 12768  0049E6  0EA6               	movlw	low (_f_aptos+4)
 12769  0049E8  246A               	addwf	(btemp+8)^0,w,c
 12770  0049EA  6ED9               	movwf	fsr2l,c
 12771  0049EC  0E00               	movlw	high (_f_aptos+4)
 12772  0049EE  206B               	addwfc	(btemp+9)^0,w,c
 12773  0049F0  6EDA               	movwf	fsr2h,c
 12774  0049F2  0E01               	movlw	1
 12775  0049F4  6EDF               	movwf	indf2,c
 12776  0049F6                     
 12777                           ;pipe.c: 52: p->pipe_task_bloqued = 0;
 12778                           ;stkvar	pipe_write@p @ sp[(0)+-2]
 12779  0049F6  0EFE               	movlw	-2
 12780  0049F8  CFE3 F06C          	movff	plusw1,btemp+10
 12781  0049FC  0EFF               	movlw	-1
 12782  0049FE  CFE3 F06D          	movff	plusw1,btemp+11
 12783  004A02  0E08               	movlw	8
 12784  004A04  246C               	addwf	(btemp+10)^0,w,c
 12785  004A06  6ED9               	movwf	fsr2l,c
 12786  004A08  0E00               	movlw	0
 12787  004A0A  206D               	addwfc	(btemp+11)^0,w,c
 12788  004A0C  6EDA               	movwf	fsr2h,c
 12789  004A0E  0E00               	movlw	0
 12790  004A10  6EDE               	movwf	postinc2,c
 12791  004A12  0E00               	movlw	0
 12792  004A14  6EDD               	movwf	postdec2,c
 12793  004A16  EF23  F025         	goto	l2972
 12794  004A1A                     l2968:
 12795                           
 12796                           ;pipe.c: 58: else {;pipe.c: 59: p->pipe_task_bloqued = f_aptos.task_running;
 12797  004A1A  EE23  F04A         	lfsr	2,_f_aptos+680
 12798                           
 12799                           ;stkvar	pipe_write@p @ sp[(0)+-2]
 12800  004A1E  0EFE               	movlw	-2
 12801  004A20  CFE3 F06C          	movff	plusw1,btemp+10
 12802  004A24  0EFF               	movlw	-1
 12803  004A26  CFE3 F06D          	movff	plusw1,btemp+11
 12804  004A2A  0E08               	movlw	8
 12805  004A2C  246C               	addwf	(btemp+10)^0,w,c
 12806  004A2E  6EE9               	movwf	fsr0l,c
 12807  004A30  0E00               	movlw	0
 12808  004A32  206D               	addwfc	(btemp+11)^0,w,c
 12809  004A34  6EEA               	movwf	fsr0h,c
 12810  004A36  CFDE FFEE          	movff	postinc2,postinc0
 12811  004A3A  CFDD FFED          	movff	postdec2,postdec0
 12812  004A3E                     
 12813                           ;pipe.c: 60: dispatcher(WAITING);
 12814  004A3E  0E03               	movlw	3
 12815  004A40  6EE6               	movwf	postinc1,c
 12816  004A42  EC74  F018         	call	_dispatcher	;wreg free
 12817  004A46                     l2972:
 12818                           
 12819                           ;pipe.c: 61: };pipe.c: 63: INTCONbits.GIE = 1;;
 12820  004A46  8EF2               	bsf	242,7,c	;volatile
 12821  004A48                     
 12822                           ; _pipe_write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 12823  004A48  52E5               	movf	postdec1,f,c
 12824  004A4A  52E5               	movf	postdec1,f,c
 12825  004A4C  52E5               	movf	postdec1,f,c
 12826  004A4E  0012               	return		;funcret
 12827  004A50                     __end_of_pipe_write:
 12828                           	opt callstack 0
 12829                           
 12830 ;; *************** function _dispatcher *****************
 12831 ;; Defined at:
 12832 ;;		line 119 in file "kernel.c"
 12833 ;; Parameters:    Size  Location     Type
 12834 ;;  state           1  [STACK] enum E2393
 12835 ;; Auto vars:     Size  Location     Type
 12836 ;;		None
 12837 ;; Return value:  Size  Location     Type
 12838 ;;                  1  [STACK] void 
 12839 ;; Registers used:
 12840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
 12841 ;; Tracked objects:
 12842 ;;		On entry : 0/0
 12843 ;;		On exit  : 0/0
 12844 ;;		Unchanged: 0/0
 12845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12846 ;;      Params:         0       0       0       0       0       0       0
 12847 ;;      Locals:         0       0       0       0       0       0       0
 12848 ;;      Temps:          0       0       0       0       0       0       0
 12849 ;;      Totals:         0       0       0       0       0       0       0
 12850 ;;Total ram usage:        0 bytes
 12851 ;; Hardware stack levels used:    1
 12852 ;; Hardware stack levels required when called:    6
 12853 ;; This function calls:
 12854 ;;		_rr_scheduler
 12855 ;; This function is called by:
 12856 ;;		_timer_zero_int
 12857 ;;		_sem_wait
 12858 ;;		_sem_post
 12859 ;;		_pipe_read
 12860 ;;		_pipe_write
 12861 ;;		_delay_os
 12862 ;; This function uses a reentrant model
 12863 ;;
 12864                           
 12865                           	psect	text39
 12866  0030E8                     __ptext39:
 12867                           	opt callstack 0
 12868  0030E8                     _dispatcher:
 12869                           	opt callstack 13
 12870  0030E8                     
 12871                           ;kernel.c: 121: INTCONbits.GIE = 0;;
 12872  0030E8  9EF2               	bcf	242,7,c	;volatile
 12873  0030EA                     
 12874                           ;kernel.c: 123: { if (f_aptos.APTOS[f_aptos.task_running].task_state == RUNNING) { f_apt
      +                          os.APTOS[f_aptos.task_running].task_state = state; f_aptos.APTOS[f_aptos.task_running].W
      +                          _reg = WREG; f_aptos.APTOS[f_aptos.task_running].STATUS_reg = STATUS; f_aptos.APTOS[f_ap
      +                          to
 12875  0030EA  EE23  F04A         	lfsr	2,_f_aptos+680
 12876  0030EE  CFDE F06C          	movff	postinc2,btemp+10
 12877  0030F2  CFDD F06D          	movff	postdec2,btemp+11
 12878  0030F6  0E71               	movlw	113
 12879  0030F8  026C               	mulwf	(btemp+10)^0,c
 12880  0030FA  CFF3 F06A          	movff	prodl,btemp+8
 12881  0030FE  CFF4 F06B          	movff	prodh,btemp+9
 12882  003102  026D               	mulwf	(btemp+11)^0,c
 12883  003104  50F3               	movf	prodl,w,c
 12884  003106  266B               	addwf	(btemp+9)^0,f,c
 12885  003108  0EA6               	movlw	low (_f_aptos+4)
 12886  00310A  246A               	addwf	(btemp+8)^0,w,c
 12887  00310C  6ED9               	movwf	fsr2l,c
 12888  00310E  0E00               	movlw	high (_f_aptos+4)
 12889  003110  206B               	addwfc	(btemp+9)^0,w,c
 12890  003112  6EDA               	movwf	fsr2h,c
 12891  003114  0E02               	movlw	2
 12892  003116  18DE               	xorwf	postinc2,w,c
 12893  003118  A4D8               	btfss	status,2,c
 12894  00311A  EF91  F018         	goto	u171_21
 12895  00311E  EF93  F018         	goto	u171_20
 12896  003122                     u171_21:
 12897  003122  EFA8  F019         	goto	l2546
 12898  003126                     u171_20:
 12899  003126                     
 12900                           ;stkvar	dispatcher@state @ sp[(0)+-1]
 12901  003126  EE23  F04A         	lfsr	2,_f_aptos+680
 12902  00312A  CFDE F06C          	movff	postinc2,btemp+10
 12903  00312E  CFDD F06D          	movff	postdec2,btemp+11
 12904  003132  0E71               	movlw	113
 12905  003134  026C               	mulwf	(btemp+10)^0,c
 12906  003136  CFF3 F06A          	movff	prodl,btemp+8
 12907  00313A  CFF4 F06B          	movff	prodh,btemp+9
 12908  00313E  026D               	mulwf	(btemp+11)^0,c
 12909  003140  50F3               	movf	prodl,w,c
 12910  003142  266B               	addwf	(btemp+9)^0,f,c
 12911  003144  0EA6               	movlw	low (_f_aptos+4)
 12912  003146  246A               	addwf	(btemp+8)^0,w,c
 12913  003148  6ED9               	movwf	fsr2l,c
 12914  00314A  0E00               	movlw	high (_f_aptos+4)
 12915  00314C  206B               	addwfc	(btemp+9)^0,w,c
 12916  00314E  6EDA               	movwf	fsr2h,c
 12917  003150  0EFF               	movlw	-1
 12918  003152  CFE3 FFDF          	movff	plusw1,indf2
 12919  003156  EE23  F04A         	lfsr	2,_f_aptos+680
 12920  00315A  CFDE F06C          	movff	postinc2,btemp+10
 12921  00315E  CFDD F06D          	movff	postdec2,btemp+11
 12922  003162  0E71               	movlw	113
 12923  003164  026C               	mulwf	(btemp+10)^0,c
 12924  003166  CFF3 F06A          	movff	prodl,btemp+8
 12925  00316A  CFF4 F06B          	movff	prodh,btemp+9
 12926  00316E  026D               	mulwf	(btemp+11)^0,c
 12927  003170  50F3               	movf	prodl,w,c
 12928  003172  266B               	addwf	(btemp+9)^0,f,c
 12929  003174  0E0C               	movlw	low (_f_aptos+106)
 12930  003176  246A               	addwf	(btemp+8)^0,w,c
 12931  003178  6ED9               	movwf	fsr2l,c
 12932  00317A  0E01               	movlw	high (_f_aptos+106)
 12933  00317C  206B               	addwfc	(btemp+9)^0,w,c
 12934  00317E  6EDA               	movwf	fsr2h,c
 12935  003180  CFE8 FFDF          	movff	wreg,indf2	;volatile
 12936  003184  EE23  F04A         	lfsr	2,_f_aptos+680
 12937  003188  CFDE F06C          	movff	postinc2,btemp+10
 12938  00318C  CFDD F06D          	movff	postdec2,btemp+11
 12939  003190  0E71               	movlw	113
 12940  003192  026C               	mulwf	(btemp+10)^0,c
 12941  003194  CFF3 F06A          	movff	prodl,btemp+8
 12942  003198  CFF4 F06B          	movff	prodh,btemp+9
 12943  00319C  026D               	mulwf	(btemp+11)^0,c
 12944  00319E  50F3               	movf	prodl,w,c
 12945  0031A0  266B               	addwf	(btemp+9)^0,f,c
 12946  0031A2  0E0D               	movlw	low (_f_aptos+107)
 12947  0031A4  246A               	addwf	(btemp+8)^0,w,c
 12948  0031A6  6ED9               	movwf	fsr2l,c
 12949  0031A8  0E01               	movlw	high (_f_aptos+107)
 12950  0031AA  206B               	addwfc	(btemp+9)^0,w,c
 12951  0031AC  6EDA               	movwf	fsr2h,c
 12952  0031AE  CFD8 FFDF          	movff	status,indf2	;volatile
 12953  0031B2  EE23  F04A         	lfsr	2,_f_aptos+680
 12954  0031B6  CFDE F06C          	movff	postinc2,btemp+10
 12955  0031BA  CFDD F06D          	movff	postdec2,btemp+11
 12956  0031BE  0E71               	movlw	113
 12957  0031C0  026C               	mulwf	(btemp+10)^0,c
 12958  0031C2  CFF3 F06A          	movff	prodl,btemp+8
 12959  0031C6  CFF4 F06B          	movff	prodh,btemp+9
 12960  0031CA  026D               	mulwf	(btemp+11)^0,c
 12961  0031CC  50F3               	movf	prodl,w,c
 12962  0031CE  266B               	addwf	(btemp+9)^0,f,c
 12963  0031D0  0E0E               	movlw	low (_f_aptos+108)
 12964  0031D2  246A               	addwf	(btemp+8)^0,w,c
 12965  0031D4  6ED9               	movwf	fsr2l,c
 12966  0031D6  0E01               	movlw	high (_f_aptos+108)
 12967  0031D8  206B               	addwfc	(btemp+9)^0,w,c
 12968  0031DA  6EDA               	movwf	fsr2h,c
 12969  0031DC  CFE0 FFDF          	movff	bsr,indf2	;volatile
 12970  0031E0  6A03               	clrf	_stack_size^0,c
 12971  0031E2  6A04               	clrf	(_stack_size+1)^0,c
 12972  0031E4  EF87  F019         	goto	l2542
 12973  0031E8                     l2538:
 12974  0031E8  C003  F06C         	movff	_stack_size,btemp+10
 12975  0031EC  C004  F06D         	movff	_stack_size+1,btemp+11
 12976  0031F0  0E03               	movlw	3
 12977  0031F2  026C               	mulwf	(btemp+10)^0,c
 12978  0031F4  CFF3 F06A          	movff	prodl,btemp+8
 12979  0031F8  CFF4 F06B          	movff	prodh,btemp+9
 12980  0031FC  026D               	mulwf	(btemp+11)^0,c
 12981  0031FE  50F3               	movf	prodl,w,c
 12982  003200  266B               	addwf	(btemp+9)^0,f,c
 12983  003202  EE23  F04A         	lfsr	2,_f_aptos+680
 12984  003206  CFDE F06C          	movff	postinc2,btemp+10
 12985  00320A  CFDD F06D          	movff	postdec2,btemp+11
 12986  00320E  0E71               	movlw	113
 12987  003210  026C               	mulwf	(btemp+10)^0,c
 12988  003212  CFF3 F068          	movff	prodl,btemp+6
 12989  003216  CFF4 F069          	movff	prodh,btemp+7
 12990  00321A  026D               	mulwf	(btemp+11)^0,c
 12991  00321C  50F3               	movf	prodl,w,c
 12992  00321E  2669               	addwf	(btemp+7)^0,f,c
 12993  003220  0EA2               	movlw	low _f_aptos
 12994  003222  6E6C               	movwf	(btemp+10)^0,c
 12995  003224  0E00               	movlw	high _f_aptos
 12996  003226  6E6D               	movwf	(btemp+11)^0,c
 12997  003228  0E07               	movlw	7
 12998  00322A  266C               	addwf	(btemp+10)^0,f,c
 12999  00322C  0E00               	movlw	0
 13000  00322E  226D               	addwfc	(btemp+11)^0,f,c
 13001  003230  5068               	movf	(btemp+6)^0,w,c
 13002  003232  266C               	addwf	(btemp+10)^0,f,c
 13003  003234  5069               	movf	(btemp+7)^0,w,c
 13004  003236  226D               	addwfc	(btemp+11)^0,f,c
 13005  003238  506A               	movf	(btemp+8)^0,w,c
 13006  00323A  246C               	addwf	(btemp+10)^0,w,c
 13007  00323C  6ED9               	movwf	fsr2l,c
 13008  00323E  506B               	movf	(btemp+9)^0,w,c
 13009  003240  206D               	addwfc	(btemp+11)^0,w,c
 13010  003242  6EDA               	movwf	fsr2h,c
 13011  003244  CFFF FFDF          	movff	tosu,indf2	;volatile
 13012  003248  C003  F06C         	movff	_stack_size,btemp+10
 13013  00324C  C004  F06D         	movff	_stack_size+1,btemp+11
 13014  003250  0E03               	movlw	3
 13015  003252  026C               	mulwf	(btemp+10)^0,c
 13016  003254  CFF3 F06A          	movff	prodl,btemp+8
 13017  003258  CFF4 F06B          	movff	prodh,btemp+9
 13018  00325C  026D               	mulwf	(btemp+11)^0,c
 13019  00325E  50F3               	movf	prodl,w,c
 13020  003260  266B               	addwf	(btemp+9)^0,f,c
 13021  003262  EE23  F04A         	lfsr	2,_f_aptos+680
 13022  003266  CFDE F06C          	movff	postinc2,btemp+10
 13023  00326A  CFDD F06D          	movff	postdec2,btemp+11
 13024  00326E  0E71               	movlw	113
 13025  003270  026C               	mulwf	(btemp+10)^0,c
 13026  003272  CFF3 F068          	movff	prodl,btemp+6
 13027  003276  CFF4 F069          	movff	prodh,btemp+7
 13028  00327A  026D               	mulwf	(btemp+11)^0,c
 13029  00327C  50F3               	movf	prodl,w,c
 13030  00327E  2669               	addwf	(btemp+7)^0,f,c
 13031  003280  0EA2               	movlw	low _f_aptos
 13032  003282  6E6C               	movwf	(btemp+10)^0,c
 13033  003284  0E00               	movlw	high _f_aptos
 13034  003286  6E6D               	movwf	(btemp+11)^0,c
 13035  003288  0E09               	movlw	9
 13036  00328A  266C               	addwf	(btemp+10)^0,f,c
 13037  00328C  0E00               	movlw	0
 13038  00328E  226D               	addwfc	(btemp+11)^0,f,c
 13039  003290  5068               	movf	(btemp+6)^0,w,c
 13040  003292  266C               	addwf	(btemp+10)^0,f,c
 13041  003294  5069               	movf	(btemp+7)^0,w,c
 13042  003296  226D               	addwfc	(btemp+11)^0,f,c
 13043  003298  506A               	movf	(btemp+8)^0,w,c
 13044  00329A  246C               	addwf	(btemp+10)^0,w,c
 13045  00329C  6ED9               	movwf	fsr2l,c
 13046  00329E  506B               	movf	(btemp+9)^0,w,c
 13047  0032A0  206D               	addwfc	(btemp+11)^0,w,c
 13048  0032A2  6EDA               	movwf	fsr2h,c
 13049  0032A4  CFFE FFDF          	movff	tosh,indf2	;volatile
 13050  0032A8  C003  F06C         	movff	_stack_size,btemp+10
 13051  0032AC  C004  F06D         	movff	_stack_size+1,btemp+11
 13052  0032B0  0E03               	movlw	3
 13053  0032B2  026C               	mulwf	(btemp+10)^0,c
 13054  0032B4  CFF3 F06A          	movff	prodl,btemp+8
 13055  0032B8  CFF4 F06B          	movff	prodh,btemp+9
 13056  0032BC  026D               	mulwf	(btemp+11)^0,c
 13057  0032BE  50F3               	movf	prodl,w,c
 13058  0032C0  266B               	addwf	(btemp+9)^0,f,c
 13059  0032C2  EE23  F04A         	lfsr	2,_f_aptos+680
 13060  0032C6  CFDE F06C          	movff	postinc2,btemp+10
 13061  0032CA  CFDD F06D          	movff	postdec2,btemp+11
 13062  0032CE  0E71               	movlw	113
 13063  0032D0  026C               	mulwf	(btemp+10)^0,c
 13064  0032D2  CFF3 F068          	movff	prodl,btemp+6
 13065  0032D6  CFF4 F069          	movff	prodh,btemp+7
 13066  0032DA  026D               	mulwf	(btemp+11)^0,c
 13067  0032DC  50F3               	movf	prodl,w,c
 13068  0032DE  2669               	addwf	(btemp+7)^0,f,c
 13069  0032E0  0EA2               	movlw	low _f_aptos
 13070  0032E2  6E6C               	movwf	(btemp+10)^0,c
 13071  0032E4  0E00               	movlw	high _f_aptos
 13072  0032E6  6E6D               	movwf	(btemp+11)^0,c
 13073  0032E8  0E08               	movlw	8
 13074  0032EA  266C               	addwf	(btemp+10)^0,f,c
 13075  0032EC  0E00               	movlw	0
 13076  0032EE  226D               	addwfc	(btemp+11)^0,f,c
 13077  0032F0  5068               	movf	(btemp+6)^0,w,c
 13078  0032F2  266C               	addwf	(btemp+10)^0,f,c
 13079  0032F4  5069               	movf	(btemp+7)^0,w,c
 13080  0032F6  226D               	addwfc	(btemp+11)^0,f,c
 13081  0032F8  506A               	movf	(btemp+8)^0,w,c
 13082  0032FA  246C               	addwf	(btemp+10)^0,w,c
 13083  0032FC  6ED9               	movwf	fsr2l,c
 13084  0032FE  506B               	movf	(btemp+9)^0,w,c
 13085  003300  206D               	addwfc	(btemp+11)^0,w,c
 13086  003302  6EDA               	movwf	fsr2h,c
 13087  003304  CFFD FFDF          	movff	tosl,indf2	;volatile
 13088  003308  4A03               	infsnz	_stack_size^0,f,c
 13089  00330A  2A04               	incf	(_stack_size+1)^0,f,c
 13090  00330C  0006               	pop		;# 
 13091  00330E                     l2542:
 13092  00330E  50FC               	movf	252,w,c	;volatile
 13093  003310  A4D8               	btfss	status,2,c
 13094  003312  EF8D  F019         	goto	u172_21
 13095  003316  EF8F  F019         	goto	u172_20
 13096  00331A                     u172_21:
 13097  00331A  EFF4  F018         	goto	l2538
 13098  00331E                     u172_20:
 13099  00331E  EE23  F04A         	lfsr	2,_f_aptos+680
 13100  003322  CFDE F06C          	movff	postinc2,btemp+10
 13101  003326  CFDD F06D          	movff	postdec2,btemp+11
 13102  00332A  0E71               	movlw	113
 13103  00332C  026C               	mulwf	(btemp+10)^0,c
 13104  00332E  CFF3 F06A          	movff	prodl,btemp+8
 13105  003332  CFF4 F06B          	movff	prodh,btemp+9
 13106  003336  026D               	mulwf	(btemp+11)^0,c
 13107  003338  50F3               	movf	prodl,w,c
 13108  00333A  266B               	addwf	(btemp+9)^0,f,c
 13109  00333C  0EA7               	movlw	low (_f_aptos+5)
 13110  00333E  246A               	addwf	(btemp+8)^0,w,c
 13111  003340  6ED9               	movwf	fsr2l,c
 13112  003342  0E00               	movlw	high (_f_aptos+5)
 13113  003344  206B               	addwfc	(btemp+9)^0,w,c
 13114  003346  6EDA               	movwf	fsr2h,c
 13115  003348  C003  FFDE         	movff	_stack_size,postinc2
 13116  00334C  C004  FFDD         	movff	_stack_size+1,postdec2
 13117  003350                     l2546:
 13118                           
 13119                           ;kernel.c: 126: f_aptos.task_running = rr_scheduler();
 13120  003350  EC71  F02F         	call	_rr_scheduler	;wreg free
 13121  003354  C062  F34A         	movff	btemp,_f_aptos+680
 13122  003358  C063  F34B         	movff	btemp+1,_f_aptos+681
 13123  00335C                     
 13124                           ;kernel.c: 132: { STKPTR = 0; if (f_aptos.APTOS[f_aptos.task_running].task_stack.stack_s
      +                          ize == 0) { asm("PUSH"); TOS = f_aptos.APTOS[f_aptos.task_running].task_ptr; } else { WR
      +                          EG = f_aptos.APTOS[f_aptos.task_running].W_reg; STATUS = f_aptos.APTOS[f_aptos.task_runn
      +                          in
 13125  00335C  6AFC               	clrf	252,c	;volatile
 13126  00335E  EE23  F04A         	lfsr	2,_f_aptos+680
 13127  003362  CFDE F06C          	movff	postinc2,btemp+10
 13128  003366  CFDD F06D          	movff	postdec2,btemp+11
 13129  00336A  0E71               	movlw	113
 13130  00336C  026C               	mulwf	(btemp+10)^0,c
 13131  00336E  CFF3 F06A          	movff	prodl,btemp+8
 13132  003372  CFF4 F06B          	movff	prodh,btemp+9
 13133  003376  026D               	mulwf	(btemp+11)^0,c
 13134  003378  50F3               	movf	prodl,w,c
 13135  00337A  266B               	addwf	(btemp+9)^0,f,c
 13136  00337C  0EA7               	movlw	low (_f_aptos+5)
 13137  00337E  246A               	addwf	(btemp+8)^0,w,c
 13138  003380  6ED9               	movwf	fsr2l,c
 13139  003382  0E00               	movlw	high (_f_aptos+5)
 13140  003384  206B               	addwfc	(btemp+9)^0,w,c
 13141  003386  6EDA               	movwf	fsr2h,c
 13142  003388  50DE               	movf	postinc2,w,c
 13143  00338A  10DE               	iorwf	postinc2,w,c
 13144  00338C  A4D8               	btfss	status,2,c
 13145  00338E  EFCB  F019         	goto	u173_21
 13146  003392  EFCD  F019         	goto	u173_20
 13147  003396                     u173_21:
 13148  003396  EFEE  F019         	goto	l2556
 13149  00339A                     u173_20:
 13150  00339A  0005               	push		;# 
 13151  00339C  EE23  F04A         	lfsr	2,_f_aptos+680
 13152  0033A0  CFDE F06C          	movff	postinc2,btemp+10
 13153  0033A4  CFDD F06D          	movff	postdec2,btemp+11
 13154  0033A8  0E71               	movlw	113
 13155  0033AA  026C               	mulwf	(btemp+10)^0,c
 13156  0033AC  CFF3 F06A          	movff	prodl,btemp+8
 13157  0033B0  CFF4 F06B          	movff	prodh,btemp+9
 13158  0033B4  026D               	mulwf	(btemp+11)^0,c
 13159  0033B6  50F3               	movf	prodl,w,c
 13160  0033B8  266B               	addwf	(btemp+9)^0,f,c
 13161  0033BA  0E0F               	movlw	low (_f_aptos+109)
 13162  0033BC  246A               	addwf	(btemp+8)^0,w,c
 13163  0033BE  6ED9               	movwf	fsr2l,c
 13164  0033C0  0E01               	movlw	high (_f_aptos+109)
 13165  0033C2  206B               	addwfc	(btemp+9)^0,w,c
 13166  0033C4  6EDA               	movwf	fsr2h,c
 13167  0033C6  CFDE F06C          	movff	postinc2,btemp+10
 13168  0033CA  CFDD F06D          	movff	postdec2,btemp+11
 13169  0033CE  C06C  FFFD         	movff	btemp+10,tosl	;volatile
 13170  0033D2  C06D  FFFE         	movff	btemp+11,tosh	;volatile
 13171  0033D6  6AFF               	clrf	255,c	;volatile
 13172  0033D8  EFF2  F01A         	goto	l2564
 13173  0033DC                     l2556:
 13174  0033DC  EE23  F04A         	lfsr	2,_f_aptos+680
 13175  0033E0  CFDE F06C          	movff	postinc2,btemp+10
 13176  0033E4  CFDD F06D          	movff	postdec2,btemp+11
 13177  0033E8  0E71               	movlw	113
 13178  0033EA  026C               	mulwf	(btemp+10)^0,c
 13179  0033EC  CFF3 F06A          	movff	prodl,btemp+8
 13180  0033F0  CFF4 F06B          	movff	prodh,btemp+9
 13181  0033F4  026D               	mulwf	(btemp+11)^0,c
 13182  0033F6  50F3               	movf	prodl,w,c
 13183  0033F8  266B               	addwf	(btemp+9)^0,f,c
 13184  0033FA  0E0C               	movlw	low (_f_aptos+106)
 13185  0033FC  246A               	addwf	(btemp+8)^0,w,c
 13186  0033FE  6ED9               	movwf	fsr2l,c
 13187  003400  0E01               	movlw	high (_f_aptos+106)
 13188  003402  206B               	addwfc	(btemp+9)^0,w,c
 13189  003404  6EDA               	movwf	fsr2h,c
 13190  003406  50DF               	movf	indf2,w,c
 13191  003408  6E6D               	movwf	(btemp+11)^0,c
 13192  00340A  506D               	movf	(btemp+11)^0,w,c
 13193  00340C  EE23  F04A         	lfsr	2,_f_aptos+680
 13194  003410  CFDE F06C          	movff	postinc2,btemp+10
 13195  003414  CFDD F06D          	movff	postdec2,btemp+11
 13196  003418  0E71               	movlw	113
 13197  00341A  026C               	mulwf	(btemp+10)^0,c
 13198  00341C  CFF3 F06A          	movff	prodl,btemp+8
 13199  003420  CFF4 F06B          	movff	prodh,btemp+9
 13200  003424  026D               	mulwf	(btemp+11)^0,c
 13201  003426  50F3               	movf	prodl,w,c
 13202  003428  266B               	addwf	(btemp+9)^0,f,c
 13203  00342A  0E0D               	movlw	low (_f_aptos+107)
 13204  00342C  246A               	addwf	(btemp+8)^0,w,c
 13205  00342E  6ED9               	movwf	fsr2l,c
 13206  003430  0E01               	movlw	high (_f_aptos+107)
 13207  003432  206B               	addwfc	(btemp+9)^0,w,c
 13208  003434  6EDA               	movwf	fsr2h,c
 13209  003436  50DF               	movf	indf2,w,c
 13210  003438  6ED8               	movwf	216,c	;volatile
 13211  00343A  EE23  F04A         	lfsr	2,_f_aptos+680
 13212  00343E  CFDE F06C          	movff	postinc2,btemp+10
 13213  003442  CFDD F06D          	movff	postdec2,btemp+11
 13214  003446  0E71               	movlw	113
 13215  003448  026C               	mulwf	(btemp+10)^0,c
 13216  00344A  CFF3 F06A          	movff	prodl,btemp+8
 13217  00344E  CFF4 F06B          	movff	prodh,btemp+9
 13218  003452  026D               	mulwf	(btemp+11)^0,c
 13219  003454  50F3               	movf	prodl,w,c
 13220  003456  266B               	addwf	(btemp+9)^0,f,c
 13221  003458  0E0E               	movlw	low (_f_aptos+108)
 13222  00345A  246A               	addwf	(btemp+8)^0,w,c
 13223  00345C  6ED9               	movwf	fsr2l,c
 13224  00345E  0E01               	movlw	high (_f_aptos+108)
 13225  003460  206B               	addwfc	(btemp+9)^0,w,c
 13226  003462  6EDA               	movwf	fsr2h,c
 13227  003464  50DF               	movf	indf2,w,c
 13228  003466  6EE0               	movwf	224,c	;volatile
 13229  003468  EE23  F04A         	lfsr	2,_f_aptos+680
 13230  00346C  CFDE F06C          	movff	postinc2,btemp+10
 13231  003470  CFDD F06D          	movff	postdec2,btemp+11
 13232  003474  0E71               	movlw	113
 13233  003476  026C               	mulwf	(btemp+10)^0,c
 13234  003478  CFF3 F06A          	movff	prodl,btemp+8
 13235  00347C  CFF4 F06B          	movff	prodh,btemp+9
 13236  003480  026D               	mulwf	(btemp+11)^0,c
 13237  003482  50F3               	movf	prodl,w,c
 13238  003484  266B               	addwf	(btemp+9)^0,f,c
 13239  003486  0EA7               	movlw	low (_f_aptos+5)
 13240  003488  246A               	addwf	(btemp+8)^0,w,c
 13241  00348A  6ED9               	movwf	fsr2l,c
 13242  00348C  0E00               	movlw	high (_f_aptos+5)
 13243  00348E  206B               	addwfc	(btemp+9)^0,w,c
 13244  003490  6EDA               	movwf	fsr2h,c
 13245  003492  CFDE F06C          	movff	postinc2,btemp+10
 13246  003496  CFDD F06D          	movff	postdec2,btemp+11
 13247  00349A  0EFF               	movlw	255
 13248  00349C  246C               	addwf	(btemp+10)^0,w,c
 13249  00349E  6E03               	movwf	_stack_size^0,c
 13250  0034A0  0EFF               	movlw	255
 13251  0034A2  206D               	addwfc	(btemp+11)^0,w,c
 13252  0034A4  6E04               	movwf	(_stack_size+1)^0,c
 13253  0034A6  EFE9  F01A         	goto	l2562
 13254  0034AA                     l118:
 13255  0034AA  0005               	push		;# 
 13256  0034AC  C003  F06C         	movff	_stack_size,btemp+10
 13257  0034B0  C004  F06D         	movff	_stack_size+1,btemp+11
 13258  0034B4  0E03               	movlw	3
 13259  0034B6  026C               	mulwf	(btemp+10)^0,c
 13260  0034B8  CFF3 F06A          	movff	prodl,btemp+8
 13261  0034BC  CFF4 F06B          	movff	prodh,btemp+9
 13262  0034C0  026D               	mulwf	(btemp+11)^0,c
 13263  0034C2  50F3               	movf	prodl,w,c
 13264  0034C4  266B               	addwf	(btemp+9)^0,f,c
 13265  0034C6  EE23  F04A         	lfsr	2,_f_aptos+680
 13266  0034CA  CFDE F06C          	movff	postinc2,btemp+10
 13267  0034CE  CFDD F06D          	movff	postdec2,btemp+11
 13268  0034D2  0E71               	movlw	113
 13269  0034D4  026C               	mulwf	(btemp+10)^0,c
 13270  0034D6  CFF3 F068          	movff	prodl,btemp+6
 13271  0034DA  CFF4 F069          	movff	prodh,btemp+7
 13272  0034DE  026D               	mulwf	(btemp+11)^0,c
 13273  0034E0  50F3               	movf	prodl,w,c
 13274  0034E2  2669               	addwf	(btemp+7)^0,f,c
 13275  0034E4  0EA2               	movlw	low _f_aptos
 13276  0034E6  6E6C               	movwf	(btemp+10)^0,c
 13277  0034E8  0E00               	movlw	high _f_aptos
 13278  0034EA  6E6D               	movwf	(btemp+11)^0,c
 13279  0034EC  0E08               	movlw	8
 13280  0034EE  266C               	addwf	(btemp+10)^0,f,c
 13281  0034F0  0E00               	movlw	0
 13282  0034F2  226D               	addwfc	(btemp+11)^0,f,c
 13283  0034F4  5068               	movf	(btemp+6)^0,w,c
 13284  0034F6  266C               	addwf	(btemp+10)^0,f,c
 13285  0034F8  5069               	movf	(btemp+7)^0,w,c
 13286  0034FA  226D               	addwfc	(btemp+11)^0,f,c
 13287  0034FC  506A               	movf	(btemp+8)^0,w,c
 13288  0034FE  246C               	addwf	(btemp+10)^0,w,c
 13289  003500  6ED9               	movwf	fsr2l,c
 13290  003502  506B               	movf	(btemp+9)^0,w,c
 13291  003504  206D               	addwfc	(btemp+11)^0,w,c
 13292  003506  6EDA               	movwf	fsr2h,c
 13293  003508  50DF               	movf	indf2,w,c
 13294  00350A  6EFD               	movwf	253,c	;volatile
 13295  00350C  C003  F06C         	movff	_stack_size,btemp+10
 13296  003510  C004  F06D         	movff	_stack_size+1,btemp+11
 13297  003514  0E03               	movlw	3
 13298  003516  026C               	mulwf	(btemp+10)^0,c
 13299  003518  CFF3 F06A          	movff	prodl,btemp+8
 13300  00351C  CFF4 F06B          	movff	prodh,btemp+9
 13301  003520  026D               	mulwf	(btemp+11)^0,c
 13302  003522  50F3               	movf	prodl,w,c
 13303  003524  266B               	addwf	(btemp+9)^0,f,c
 13304  003526  EE23  F04A         	lfsr	2,_f_aptos+680
 13305  00352A  CFDE F06C          	movff	postinc2,btemp+10
 13306  00352E  CFDD F06D          	movff	postdec2,btemp+11
 13307  003532  0E71               	movlw	113
 13308  003534  026C               	mulwf	(btemp+10)^0,c
 13309  003536  CFF3 F068          	movff	prodl,btemp+6
 13310  00353A  CFF4 F069          	movff	prodh,btemp+7
 13311  00353E  026D               	mulwf	(btemp+11)^0,c
 13312  003540  50F3               	movf	prodl,w,c
 13313  003542  2669               	addwf	(btemp+7)^0,f,c
 13314  003544  0EA2               	movlw	low _f_aptos
 13315  003546  6E6C               	movwf	(btemp+10)^0,c
 13316  003548  0E00               	movlw	high _f_aptos
 13317  00354A  6E6D               	movwf	(btemp+11)^0,c
 13318  00354C  0E09               	movlw	9
 13319  00354E  266C               	addwf	(btemp+10)^0,f,c
 13320  003550  0E00               	movlw	0
 13321  003552  226D               	addwfc	(btemp+11)^0,f,c
 13322  003554  5068               	movf	(btemp+6)^0,w,c
 13323  003556  266C               	addwf	(btemp+10)^0,f,c
 13324  003558  5069               	movf	(btemp+7)^0,w,c
 13325  00355A  226D               	addwfc	(btemp+11)^0,f,c
 13326  00355C  506A               	movf	(btemp+8)^0,w,c
 13327  00355E  246C               	addwf	(btemp+10)^0,w,c
 13328  003560  6ED9               	movwf	fsr2l,c
 13329  003562  506B               	movf	(btemp+9)^0,w,c
 13330  003564  206D               	addwfc	(btemp+11)^0,w,c
 13331  003566  6EDA               	movwf	fsr2h,c
 13332  003568  50DF               	movf	indf2,w,c
 13333  00356A  6EFE               	movwf	254,c	;volatile
 13334  00356C  C003  F06C         	movff	_stack_size,btemp+10
 13335  003570  C004  F06D         	movff	_stack_size+1,btemp+11
 13336  003574  0E03               	movlw	3
 13337  003576  026C               	mulwf	(btemp+10)^0,c
 13338  003578  CFF3 F06A          	movff	prodl,btemp+8
 13339  00357C  CFF4 F06B          	movff	prodh,btemp+9
 13340  003580  026D               	mulwf	(btemp+11)^0,c
 13341  003582  50F3               	movf	prodl,w,c
 13342  003584  266B               	addwf	(btemp+9)^0,f,c
 13343  003586  EE23  F04A         	lfsr	2,_f_aptos+680
 13344  00358A  CFDE F06C          	movff	postinc2,btemp+10
 13345  00358E  CFDD F06D          	movff	postdec2,btemp+11
 13346  003592  0E71               	movlw	113
 13347  003594  026C               	mulwf	(btemp+10)^0,c
 13348  003596  CFF3 F068          	movff	prodl,btemp+6
 13349  00359A  CFF4 F069          	movff	prodh,btemp+7
 13350  00359E  026D               	mulwf	(btemp+11)^0,c
 13351  0035A0  50F3               	movf	prodl,w,c
 13352  0035A2  2669               	addwf	(btemp+7)^0,f,c
 13353  0035A4  0EA2               	movlw	low _f_aptos
 13354  0035A6  6E6C               	movwf	(btemp+10)^0,c
 13355  0035A8  0E00               	movlw	high _f_aptos
 13356  0035AA  6E6D               	movwf	(btemp+11)^0,c
 13357  0035AC  0E07               	movlw	7
 13358  0035AE  266C               	addwf	(btemp+10)^0,f,c
 13359  0035B0  0E00               	movlw	0
 13360  0035B2  226D               	addwfc	(btemp+11)^0,f,c
 13361  0035B4  5068               	movf	(btemp+6)^0,w,c
 13362  0035B6  266C               	addwf	(btemp+10)^0,f,c
 13363  0035B8  5069               	movf	(btemp+7)^0,w,c
 13364  0035BA  226D               	addwfc	(btemp+11)^0,f,c
 13365  0035BC  506A               	movf	(btemp+8)^0,w,c
 13366  0035BE  246C               	addwf	(btemp+10)^0,w,c
 13367  0035C0  6ED9               	movwf	fsr2l,c
 13368  0035C2  506B               	movf	(btemp+9)^0,w,c
 13369  0035C4  206D               	addwfc	(btemp+11)^0,w,c
 13370  0035C6  6EDA               	movwf	fsr2h,c
 13371  0035C8  50DF               	movf	indf2,w,c
 13372  0035CA  6EFF               	movwf	255,c	;volatile
 13373  0035CC  0603               	decf	_stack_size^0,f,c
 13374  0035CE  A0D8               	btfss	status,0,c
 13375  0035D0  0604               	decf	(_stack_size+1)^0,f,c
 13376  0035D2                     l2562:
 13377  0035D2  5003               	movf	_stack_size^0,w,c
 13378  0035D4  1004               	iorwf	(_stack_size+1)^0,w,c
 13379  0035D6  A4D8               	btfss	status,2,c
 13380  0035D8  EFF0  F01A         	goto	u174_21
 13381  0035DC  EFF2  F01A         	goto	u174_20
 13382  0035E0                     u174_21:
 13383  0035E0  EF55  F01A         	goto	l118
 13384  0035E4                     u174_20:
 13385  0035E4                     l2564:
 13386  0035E4  EE23  F04A         	lfsr	2,_f_aptos+680
 13387  0035E8  CFDE F06C          	movff	postinc2,btemp+10
 13388  0035EC  CFDD F06D          	movff	postdec2,btemp+11
 13389  0035F0  0E71               	movlw	113
 13390  0035F2  026C               	mulwf	(btemp+10)^0,c
 13391  0035F4  CFF3 F06A          	movff	prodl,btemp+8
 13392  0035F8  CFF4 F06B          	movff	prodh,btemp+9
 13393  0035FC  026D               	mulwf	(btemp+11)^0,c
 13394  0035FE  50F3               	movf	prodl,w,c
 13395  003600  266B               	addwf	(btemp+9)^0,f,c
 13396  003602  0EA6               	movlw	low (_f_aptos+4)
 13397  003604  246A               	addwf	(btemp+8)^0,w,c
 13398  003606  6ED9               	movwf	fsr2l,c
 13399  003608  0E00               	movlw	high (_f_aptos+4)
 13400  00360A  206B               	addwfc	(btemp+9)^0,w,c
 13401  00360C  6EDA               	movwf	fsr2h,c
 13402  00360E  0E02               	movlw	2
 13403  003610  6EDF               	movwf	indf2,c
 13404  003612                     
 13405                           ;kernel.c: 134: INTCONbits.GIE = 1;;
 13406  003612  8EF2               	bsf	242,7,c	;volatile
 13407  003614                     
 13408                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 13409  003614  52E5               	movf	postdec1,f,c
 13410  003616  0012               	return		;funcret
 13411  003618                     __end_of_dispatcher:
 13412                           	opt callstack 0
 13413                           
 13414 ;; *************** function _rr_scheduler *****************
 13415 ;; Defined at:
 13416 ;;		line 47 in file "kernel.c"
 13417 ;; Parameters:    Size  Location     Type
 13418 ;;		None
 13419 ;; Auto vars:     Size  Location     Type
 13420 ;;  next_task       2  [STACK] short 
 13421 ;; Return value:  Size  Location     Type
 13422 ;;                  2  [STACK] short 
 13423 ;; Registers used:
 13424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 13425 ;; Tracked objects:
 13426 ;;		On entry : 0/0
 13427 ;;		On exit  : 0/0
 13428 ;;		Unchanged: 0/0
 13429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13430 ;;      Params:         0       0       0       0       0       0       0
 13431 ;;      Locals:         0       0       0       0       0       0       0
 13432 ;;      Temps:          0       0       0       0       0       0       0
 13433 ;;      Totals:         0       0       0       0       0       0       0
 13434 ;;Total ram usage:        0 bytes
 13435 ;; Hardware stack levels used:    1
 13436 ;; Hardware stack levels required when called:    5
 13437 ;; This function calls:
 13438 ;;		___awmod
 13439 ;; This function is called by:
 13440 ;;		_dispatcher
 13441 ;; This function uses a reentrant model
 13442 ;;
 13443                           
 13444                           	psect	text40
 13445  005EE2                     __ptext40:
 13446                           	opt callstack 0
 13447  005EE2                     _rr_scheduler:
 13448                           	opt callstack 0
 13449                           
 13450                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13451  005EE2  52E6               	movf	postinc1,f,c
 13452  005EE4  52E6               	movf	postinc1,f,c
 13453  005EE6                     
 13454                           ;kernel.c: 49: short int next_task = f_aptos.task_running;
 13455                           ;stkvar	rr_scheduler@next_task @ sp[(-2)+0]
 13456  005EE6  0EFE               	movlw	-2
 13457  005EE8  C34A  FFE3         	movff	_f_aptos+680,plusw1
 13458  005EEC  0EFF               	movlw	-1
 13459  005EEE  C34B  FFE3         	movff	_f_aptos+681,plusw1
 13460  005EF2                     l2036:
 13461                           
 13462                           ;kernel.c: 52: next_task = (next_task+1) % f_aptos.size;
 13463  005EF2  EE23  F048         	lfsr	2,_f_aptos+678
 13464  005EF6  CFDE F06C          	movff	postinc2,btemp+10
 13465  005EFA  CFDD F06D          	movff	postdec2,btemp+11
 13466  005EFE  C06C  FFE6         	movff	btemp+10,postinc1
 13467  005F02  C06D  FFE6         	movff	btemp+11,postinc1
 13468                           
 13469                           ;stkvar	rr_scheduler@next_task @ sp[(-4)+0]
 13470  005F06  0EFC               	movlw	-4
 13471  005F08  50E3               	movf	plusw1,w,c
 13472  005F0A  0F01               	addlw	1
 13473  005F0C  6E6C               	movwf	(btemp+10)^0,c
 13474  005F0E  0EFD               	movlw	-3
 13475  005F10  CFE3 F06D          	movff	plusw1,btemp+11
 13476  005F14  0E00               	movlw	0
 13477  005F16  226D               	addwfc	(btemp+11)^0,f,c
 13478  005F18  C06C  FFE6         	movff	btemp+10,postinc1
 13479  005F1C  C06D  FFE6         	movff	btemp+11,postinc1
 13480  005F20  ECE2  F028         	call	___awmod	;wreg free
 13481                           
 13482                           ;stkvar	rr_scheduler@next_task @ sp[(-2)+0]
 13483  005F24  0EFE               	movlw	-2
 13484  005F26  C062  FFE3         	movff	btemp,plusw1
 13485  005F2A  0EFF               	movlw	-1
 13486  005F2C  C063  FFE3         	movff	btemp+1,plusw1
 13487  005F30                     
 13488                           ;kernel.c: 53: } while (f_aptos.APTOS[next_task].task_state != READY);
 13489                           ;stkvar	rr_scheduler@next_task @ sp[(-2)+0]
 13490  005F30  0EFE               	movlw	-2
 13491  005F32  CFE3 F06C          	movff	plusw1,btemp+10
 13492  005F36  0EFF               	movlw	-1
 13493  005F38  CFE3 F06D          	movff	plusw1,btemp+11
 13494  005F3C  0E71               	movlw	113
 13495  005F3E  026C               	mulwf	(btemp+10)^0,c
 13496  005F40  CFF3 F06A          	movff	prodl,btemp+8
 13497  005F44  CFF4 F06B          	movff	prodh,btemp+9
 13498  005F48  026D               	mulwf	(btemp+11)^0,c
 13499  005F4A  50F3               	movf	prodl,w,c
 13500  005F4C  266B               	addwf	(btemp+9)^0,f,c
 13501  005F4E  0EA6               	movlw	low (_f_aptos+4)
 13502  005F50  246A               	addwf	(btemp+8)^0,w,c
 13503  005F52  6ED9               	movwf	fsr2l,c
 13504  005F54  0E00               	movlw	high (_f_aptos+4)
 13505  005F56  206B               	addwfc	(btemp+9)^0,w,c
 13506  005F58  6EDA               	movwf	fsr2h,c
 13507  005F5A  04DE               	decf	postinc2,w,c
 13508  005F5C  A4D8               	btfss	status,2,c
 13509  005F5E  EFB3  F02F         	goto	u101_21
 13510  005F62  EFB5  F02F         	goto	u101_20
 13511  005F66                     u101_21:
 13512  005F66  EF79  F02F         	goto	l2036
 13513  005F6A                     u101_20:
 13514  005F6A                     
 13515                           ;kernel.c: 55: return next_task;
 13516                           ;stkvar	rr_scheduler@next_task @ sp[(-2)+0]
 13517  005F6A  0EFE               	movlw	-2
 13518  005F6C  CFE3 F062          	movff	plusw1,btemp
 13519  005F70  0EFF               	movlw	-1
 13520  005F72  CFE3 F063          	movff	plusw1,btemp+1
 13521  005F76                     
 13522                           ; _rr_scheduler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 13523  005F76  52E5               	movf	postdec1,f,c
 13524  005F78  52E5               	movf	postdec1,f,c
 13525  005F7A  0012               	return		;funcret
 13526  005F7C                     __end_of_rr_scheduler:
 13527                           	opt callstack 0
 13528                           
 13529 ;; *************** function ___awmod *****************
 13530 ;; Defined at:
 13531 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
 13532 ;; Parameters:    Size  Location     Type
 13533 ;;  dividend        2  [STACK] int 
 13534 ;;  divisor         2  [STACK] int 
 13535 ;; Auto vars:     Size  Location     Type
 13536 ;;  sign            1  [STACK] unsigned char 
 13537 ;;  counter         1  [STACK] unsigned char 
 13538 ;; Return value:  Size  Location     Type
 13539 ;;                  2  [STACK] int 
 13540 ;; Registers used:
 13541 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 13542 ;; Tracked objects:
 13543 ;;		On entry : 0/0
 13544 ;;		On exit  : 0/0
 13545 ;;		Unchanged: 0/0
 13546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13547 ;;      Params:         0       0       0       0       0       0       0
 13548 ;;      Locals:         0       0       0       0       0       0       0
 13549 ;;      Temps:          0       0       0       0       0       0       0
 13550 ;;      Totals:         0       0       0       0       0       0       0
 13551 ;;Total ram usage:        0 bytes
 13552 ;; Hardware stack levels used:    1
 13553 ;; Hardware stack levels required when called:    4
 13554 ;; This function calls:
 13555 ;;		Nothing
 13556 ;; This function is called by:
 13557 ;;		_rr_scheduler
 13558 ;;		_sem_wait
 13559 ;;		_sem_post
 13560 ;;		_scale
 13561 ;; This function uses a reentrant model
 13562 ;;
 13563                           
 13564                           	psect	text41
 13565  0051C4                     __ptext41:
 13566                           	opt callstack 0
 13567  0051C4                     ___awmod:
 13568                           	opt callstack 0
 13569                           
 13570                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13571  0051C4  52E6               	movf	postinc1,f,c
 13572  0051C6  52E6               	movf	postinc1,f,c
 13573  0051C8                     
 13574                           ;stkvar	___awmod@sign @ sp[(-2)+0]
 13575  0051C8  0EFE               	movlw	-2
 13576  0051CA  6AE3               	clrf	plusw1,c
 13577  0051CC                     
 13578                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 13579  0051CC  0EFD               	movlw	-3
 13580  0051CE  BEE3               	btfsc	plusw1,7,c
 13581  0051D0  EFEE  F028         	goto	u87_20
 13582  0051D4  EFEC  F028         	goto	u87_21
 13583  0051D8                     u87_21:
 13584  0051D8  EFF7  F028         	goto	l1946
 13585  0051DC                     u87_20:
 13586  0051DC                     
 13587                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 13588                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 13589  0051DC  0EFC               	movlw	-4
 13590  0051DE  6CE3               	negf	plusw1,c
 13591  0051E0  0EFD               	movlw	-3
 13592  0051E2  1EE3               	comf	plusw1,f,c
 13593  0051E4  B0D8               	btfsc	status,0,c
 13594  0051E6  2AE3               	incf	plusw1,f,c
 13595  0051E8                     
 13596                           ;stkvar	___awmod@sign @ sp[(-2)+0]
 13597  0051E8  0EFE               	movlw	-2
 13598  0051EA  6AE3               	clrf	plusw1,c
 13599  0051EC  2AE3               	incf	plusw1,f,c
 13600  0051EE                     l1946:
 13601                           
 13602                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13603  0051EE  0EFB               	movlw	-5
 13604  0051F0  BEE3               	btfsc	plusw1,7,c
 13605  0051F2  EFFF  F028         	goto	u88_20
 13606  0051F6  EFFD  F028         	goto	u88_21
 13607  0051FA                     u88_21:
 13608  0051FA  EF05  F029         	goto	l1950
 13609  0051FE                     u88_20:
 13610  0051FE                     
 13611                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13612                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13613  0051FE  0EFA               	movlw	-6
 13614  005200  6CE3               	negf	plusw1,c
 13615  005202  0EFB               	movlw	-5
 13616  005204  1EE3               	comf	plusw1,f,c
 13617  005206  B0D8               	btfsc	status,0,c
 13618  005208  2AE3               	incf	plusw1,f,c
 13619  00520A                     l1950:
 13620                           
 13621                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13622  00520A  0EFA               	movlw	-6
 13623  00520C  CFE3 F062          	movff	plusw1,btemp
 13624  005210  0EFB               	movlw	-5
 13625  005212  50E3               	movf	plusw1,w,c
 13626  005214  1062               	iorwf	btemp^0,w,c
 13627  005216  B4D8               	btfsc	status,2,c
 13628  005218  EF10  F029         	goto	u89_21
 13629  00521C  EF12  F029         	goto	u89_20
 13630  005220                     u89_21:
 13631  005220  EF6D  F029         	goto	l1968
 13632  005224                     u89_20:
 13633  005224                     
 13634                           ;stkvar	___awmod@counter @ sp[(-2)+1]
 13635  005224  0EFF               	movlw	-1
 13636  005226  6AE3               	clrf	plusw1,c
 13637  005228  2AE3               	incf	plusw1,f,c
 13638  00522A  EF28  F029         	goto	l1958
 13639  00522E                     l1954:
 13640                           
 13641                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13642  00522E  0EFA               	movlw	-6
 13643  005230  50E3               	movf	plusw1,w,c
 13644  005232  90D8               	bcf	status,0,c
 13645  005234  34E8               	rlcf	wreg,w,c
 13646  005236  6E62               	movwf	btemp^0,c
 13647  005238  0EFA               	movlw	-6
 13648  00523A  C062  FFE3         	movff	btemp,plusw1
 13649  00523E  0EFB               	movlw	-5
 13650  005240  50E3               	movf	plusw1,w,c
 13651  005242  34E8               	rlcf	wreg,w,c
 13652  005244  6E62               	movwf	btemp^0,c
 13653  005246  0EFB               	movlw	-5
 13654  005248  C062  FFE3         	movff	btemp,plusw1
 13655  00524C                     
 13656                           ;stkvar	___awmod@counter @ sp[(-2)+1]
 13657  00524C  0EFF               	movlw	-1
 13658  00524E  2AE3               	incf	plusw1,f,c
 13659  005250                     l1958:
 13660                           
 13661                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13662  005250  0EFB               	movlw	-5
 13663  005252  AEE3               	btfss	plusw1,7,c
 13664  005254  EF2E  F029         	goto	u90_21
 13665  005258  EF30  F029         	goto	u90_20
 13666  00525C                     u90_21:
 13667  00525C  EF17  F029         	goto	l1954
 13668  005260                     u90_20:
 13669  005260                     l1960:
 13670                           
 13671                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13672  005260  0EFA               	movlw	-6
 13673  005262  CFE3 F06C          	movff	plusw1,btemp+10
 13674  005266  0EFB               	movlw	-5
 13675  005268  CFE3 F06D          	movff	plusw1,btemp+11
 13676                           
 13677                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 13678  00526C  0EFC               	movlw	-4
 13679  00526E  CFE3 F06A          	movff	plusw1,btemp+8
 13680  005272  0EFD               	movlw	-3
 13681  005274  CFE3 F06B          	movff	plusw1,btemp+9
 13682  005278  506C               	movf	(btemp+10)^0,w,c
 13683  00527A  5C6A               	subwf	(btemp+8)^0,w,c
 13684  00527C  506D               	movf	(btemp+11)^0,w,c
 13685  00527E  586B               	subwfb	(btemp+9)^0,w,c
 13686  005280  A0D8               	btfss	status,0,c
 13687  005282  EF45  F029         	goto	u91_21
 13688  005286  EF47  F029         	goto	u91_20
 13689  00528A                     u91_21:
 13690  00528A  EF59  F029         	goto	l1964
 13691  00528E                     u91_20:
 13692  00528E                     
 13693                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13694                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 13695  00528E  0EFC               	movlw	-4
 13696  005290  50E3               	movf	plusw1,w,c
 13697  005292  6E62               	movwf	btemp^0,c
 13698  005294  0EFA               	movlw	-6
 13699  005296  50E3               	movf	plusw1,w,c
 13700  005298  5E62               	subwf	btemp^0,f,c
 13701  00529A  0EFC               	movlw	-4
 13702  00529C  C062  FFE3         	movff	btemp,plusw1
 13703  0052A0  0EFD               	movlw	-3
 13704  0052A2  50E3               	movf	plusw1,w,c
 13705  0052A4  6E62               	movwf	btemp^0,c
 13706  0052A6  0EFB               	movlw	-5
 13707  0052A8  50E3               	movf	plusw1,w,c
 13708  0052AA  5A62               	subwfb	btemp^0,f,c
 13709  0052AC  0EFD               	movlw	-3
 13710  0052AE  C062  FFE3         	movff	btemp,plusw1
 13711  0052B2                     l1964:
 13712                           
 13713                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
 13714  0052B2  90D8               	bcf	status,0,c
 13715  0052B4  0EFB               	movlw	-5
 13716  0052B6  32E3               	rrcf	plusw1,f,c
 13717  0052B8  0EFA               	movlw	-6
 13718  0052BA  32E3               	rrcf	plusw1,f,c
 13719  0052BC                     
 13720                           ;stkvar	___awmod@counter @ sp[(-2)+1]
 13721  0052BC  0EFF               	movlw	-1
 13722  0052BE  50E3               	movf	plusw1,w,c
 13723  0052C0  6E62               	movwf	btemp^0,c
 13724  0052C2  0E01               	movlw	1
 13725  0052C4  5E62               	subwf	btemp^0,f,c
 13726  0052C6  0EFF               	movlw	-1
 13727  0052C8  C062  FFE3         	movff	btemp,plusw1
 13728  0052CC  A4D8               	btfss	status,2,c
 13729  0052CE  EF6B  F029         	goto	u92_21
 13730  0052D2  EF6D  F029         	goto	u92_20
 13731  0052D6                     u92_21:
 13732  0052D6  EF30  F029         	goto	l1960
 13733  0052DA                     u92_20:
 13734  0052DA                     l1968:
 13735                           
 13736                           ;stkvar	___awmod@sign @ sp[(-2)+0]
 13737  0052DA  0EFE               	movlw	-2
 13738  0052DC  50E3               	movf	plusw1,w,c
 13739  0052DE  B4D8               	btfsc	status,2,c
 13740  0052E0  EF74  F029         	goto	u93_21
 13741  0052E4  EF76  F029         	goto	u93_20
 13742  0052E8                     u93_21:
 13743  0052E8  EF7C  F029         	goto	l1972
 13744  0052EC                     u93_20:
 13745  0052EC                     
 13746                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 13747                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 13748  0052EC  0EFC               	movlw	-4
 13749  0052EE  6CE3               	negf	plusw1,c
 13750  0052F0  0EFD               	movlw	-3
 13751  0052F2  1EE3               	comf	plusw1,f,c
 13752  0052F4  B0D8               	btfsc	status,0,c
 13753  0052F6  2AE3               	incf	plusw1,f,c
 13754  0052F8                     l1972:
 13755                           
 13756                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
 13757  0052F8  0EFC               	movlw	-4
 13758  0052FA  CFE3 F062          	movff	plusw1,btemp
 13759  0052FE  0EFD               	movlw	-3
 13760  005300  CFE3 F063          	movff	plusw1,btemp+1
 13761  005304                     
 13762                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13763  005304  0EFA               	movlw	250
 13764  005306  26E1               	addwf	fsr1l,f,c
 13765  005308  0EFF               	movlw	255
 13766  00530A  22E2               	addwfc	fsr1h,f,c
 13767  00530C  0012               	return		;funcret
 13768  00530E                     __end_of___awmod:
 13769                           	opt callstack 0
 13770                           
 13771 ;; *************** function ___fldiv *****************
 13772 ;; Defined at:
 13773 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
 13774 ;; Parameters:    Size  Location     Type
 13775 ;;  b               4  [STACK] int 
 13776 ;;  a               4  [STACK] int 
 13777 ;; Auto vars:     Size  Location     Type
 13778 ;;  grs             4  [STACK] unsigned long 
 13779 ;;  rem             4  [STACK] unsigned long 
 13780 ;;  new_exp         2  [STACK] int 
 13781 ;;  aexp            1  [STACK] unsigned char 
 13782 ;;  bexp            1  [STACK] unsigned char 
 13783 ;;  sign            1  [STACK] unsigned char 
 13784 ;; Return value:  Size  Location     Type
 13785 ;;                  4  [STACK] unsigned char 
 13786 ;; Registers used:
 13787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 13788 ;; Tracked objects:
 13789 ;;		On entry : 0/0
 13790 ;;		On exit  : 0/0
 13791 ;;		Unchanged: 0/0
 13792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13793 ;;      Params:         0       0       0       0       0       0       0
 13794 ;;      Locals:         0       0       0       0       0       0       0
 13795 ;;      Temps:          0       0       0       0       0       0       0
 13796 ;;      Totals:         0       0       0       0       0       0       0
 13797 ;;Total ram usage:        0 bytes
 13798 ;; Hardware stack levels used:    1
 13799 ;; Hardware stack levels required when called:    4
 13800 ;; This function calls:
 13801 ;;		Nothing
 13802 ;; This function is called by:
 13803 ;;		_task_lcd
 13804 ;; This function uses a reentrant model
 13805 ;;
 13806                           
 13807                           	psect	text42
 13808  002ABE                     __ptext42:
 13809                           	opt callstack 0
 13810  002ABE                     ___fldiv:
 13811                           	opt callstack 0
 13812                           
 13813                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13814  002ABE  0E0D               	movlw	13
 13815  002AC0  26E1               	addwf	fsr1l,f,c
 13816  002AC2  0E00               	movlw	0
 13817  002AC4  22E2               	addwfc	fsr1h,f,c
 13818  002AC6                     
 13819                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 13820  002AC6  0EF2               	movlw	242
 13821  002AC8  24E1               	addwf	fsr1l,w,c
 13822  002ACA  6ED9               	movwf	fsr2l,c
 13823  002ACC  0EFF               	movlw	255
 13824  002ACE  20E2               	addwfc	fsr1h,w,c
 13825  002AD0  6EDA               	movwf	fsr2h,c
 13826  002AD2  50DF               	movf	indf2,w,c
 13827  002AD4  6E6D               	movwf	(btemp+11)^0,c
 13828  002AD6  0E80               	movlw	128
 13829  002AD8  166D               	andwf	(btemp+11)^0,f,c
 13830                           
 13831                           ;stkvar	___fldiv@sign @ sp[(-13)+12]
 13832  002ADA  0EFF               	movlw	-1
 13833  002ADC  C06D  FFE3         	movff	btemp+11,plusw1
 13834  002AE0                     
 13835                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 13836  002AE0  0EF2               	movlw	242
 13837  002AE2  24E1               	addwf	fsr1l,w,c
 13838  002AE4  6ED9               	movwf	fsr2l,c
 13839  002AE6  0EFF               	movlw	255
 13840  002AE8  20E2               	addwfc	fsr1h,w,c
 13841  002AEA  6EDA               	movwf	fsr2h,c
 13842  002AEC  50DF               	movf	indf2,w,c
 13843  002AEE  6E6D               	movwf	(btemp+11)^0,c
 13844  002AF0  90D8               	bcf	status,0,c
 13845  002AF2  346D               	rlcf	(btemp+11)^0,w,c
 13846  002AF4  6E6C               	movwf	(btemp+10)^0,c
 13847                           
 13848                           ;stkvar	___fldiv@bexp @ sp[(-13)+11]
 13849  002AF6  0EFE               	movlw	-2
 13850  002AF8  C06C  FFE3         	movff	btemp+10,plusw1
 13851  002AFC                     
 13852                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 13853  002AFC  0EF1               	movlw	241
 13854  002AFE  24E1               	addwf	fsr1l,w,c
 13855  002B00  6ED9               	movwf	fsr2l,c
 13856  002B02  0EFF               	movlw	255
 13857  002B04  20E2               	addwfc	fsr1h,w,c
 13858  002B06  6EDA               	movwf	fsr2h,c
 13859  002B08  AEDF               	btfss	indf2,7,c
 13860  002B0A  EF89  F015         	goto	u240_21
 13861  002B0E  EF8B  F015         	goto	u240_20
 13862  002B12                     u240_21:
 13863  002B12  EF8D  F015         	goto	l3004
 13864  002B16                     u240_20:
 13865  002B16                     
 13866                           ;stkvar	___fldiv@bexp @ sp[(-13)+11]
 13867  002B16  0EFE               	movlw	-2
 13868  002B18  80E3               	bsf	plusw1,0,c
 13869  002B1A                     l3004:
 13870                           
 13871                           ;stkvar	___fldiv@bexp @ sp[(-13)+11]
 13872  002B1A  0EFE               	movlw	-2
 13873  002B1C  50E3               	movf	plusw1,w,c
 13874  002B1E  B4D8               	btfsc	status,2,c
 13875  002B20  EF94  F015         	goto	u241_21
 13876  002B24  EF96  F015         	goto	u241_20
 13877  002B28                     u241_21:
 13878  002B28  EFBF  F015         	goto	l3014
 13879  002B2C                     u241_20:
 13880  002B2C                     
 13881                           ;stkvar	___fldiv@bexp @ sp[(-13)+11]
 13882  002B2C  0EFE               	movlw	-2
 13883  002B2E  28E3               	incf	plusw1,w,c
 13884  002B30  A4D8               	btfss	status,2,c
 13885  002B32  EF9D  F015         	goto	u242_21
 13886  002B36  EF9F  F015         	goto	u242_20
 13887  002B3A                     u242_21:
 13888  002B3A  EFB3  F015         	goto	l3010
 13889  002B3E                     u242_20:
 13890  002B3E  0E00               	movlw	0
 13891  002B40  6E6A               	movwf	(btemp+8)^0,c
 13892  002B42  0E00               	movlw	0
 13893  002B44  6E6B               	movwf	(btemp+9)^0,c
 13894  002B46  0E00               	movlw	0
 13895  002B48  6E6C               	movwf	(btemp+10)^0,c
 13896  002B4A  0E00               	movlw	0
 13897  002B4C  6E6D               	movwf	(btemp+11)^0,c
 13898                           
 13899                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 13900  002B4E  0EEF               	movlw	-17
 13901  002B50  C06A  FFE3         	movff	btemp+8,plusw1
 13902  002B54  0EF0               	movlw	-16
 13903  002B56  C06B  FFE3         	movff	btemp+9,plusw1
 13904  002B5A  0EF1               	movlw	-15
 13905  002B5C  C06C  FFE3         	movff	btemp+10,plusw1
 13906  002B60  0EF2               	movlw	-14
 13907  002B62  C06D  FFE3         	movff	btemp+11,plusw1
 13908  002B66                     l3010:
 13909                           
 13910                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 13911  002B66  0EF1               	movlw	-15
 13912  002B68  8EE3               	bsf	plusw1,7,c
 13913  002B6A                     
 13914                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 13915  002B6A  0EF2               	movlw	242
 13916  002B6C  24E1               	addwf	fsr1l,w,c
 13917  002B6E  6ED9               	movwf	fsr2l,c
 13918  002B70  0EFF               	movlw	255
 13919  002B72  20E2               	addwfc	fsr1h,w,c
 13920  002B74  6EDA               	movwf	fsr2h,c
 13921  002B76  0E00               	movlw	0
 13922  002B78  6EDF               	movwf	indf2,c
 13923  002B7A  EFD3  F015         	goto	l3016
 13924  002B7E                     l3014:
 13925  002B7E  0E00               	movlw	0
 13926  002B80  6E6A               	movwf	(btemp+8)^0,c
 13927  002B82  0E00               	movlw	0
 13928  002B84  6E6B               	movwf	(btemp+9)^0,c
 13929  002B86  0E00               	movlw	0
 13930  002B88  6E6C               	movwf	(btemp+10)^0,c
 13931  002B8A  0E00               	movlw	0
 13932  002B8C  6E6D               	movwf	(btemp+11)^0,c
 13933                           
 13934                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 13935  002B8E  0EEF               	movlw	-17
 13936  002B90  C06A  FFE3         	movff	btemp+8,plusw1
 13937  002B94  0EF0               	movlw	-16
 13938  002B96  C06B  FFE3         	movff	btemp+9,plusw1
 13939  002B9A  0EF1               	movlw	-15
 13940  002B9C  C06C  FFE3         	movff	btemp+10,plusw1
 13941  002BA0  0EF2               	movlw	-14
 13942  002BA2  C06D  FFE3         	movff	btemp+11,plusw1
 13943  002BA6                     l3016:
 13944                           
 13945                           ;stkvar	___fldiv@a @ sp[(-13)+-8]
 13946  002BA6  0EEE               	movlw	238
 13947  002BA8  24E1               	addwf	fsr1l,w,c
 13948  002BAA  6ED9               	movwf	fsr2l,c
 13949  002BAC  0EFF               	movlw	255
 13950  002BAE  20E2               	addwfc	fsr1h,w,c
 13951  002BB0  6EDA               	movwf	fsr2h,c
 13952  002BB2  50DF               	movf	indf2,w,c
 13953  002BB4  6E6D               	movwf	(btemp+11)^0,c
 13954  002BB6  0E80               	movlw	128
 13955  002BB8  166D               	andwf	(btemp+11)^0,f,c
 13956                           
 13957                           ;stkvar	___fldiv@sign @ sp[(-13)+12]
 13958  002BBA  50E1               	movf	fsr1l,w,c
 13959  002BBC  0FFF               	addlw	-1
 13960  002BBE  6ED9               	movwf	fsr2l,c
 13961  002BC0  50E2               	movf	fsr1h,w,c
 13962  002BC2  6EDA               	movwf	fsr2h,c
 13963  002BC4  0EFF               	movlw	255
 13964  002BC6  22DA               	addwfc	fsr2h,f,c
 13965  002BC8  506D               	movf	(btemp+11)^0,w,c
 13966  002BCA  1ADF               	xorwf	indf2,f,c
 13967  002BCC                     
 13968                           ;stkvar	___fldiv@a @ sp[(-13)+-8]
 13969  002BCC  0EEE               	movlw	238
 13970  002BCE  24E1               	addwf	fsr1l,w,c
 13971  002BD0  6ED9               	movwf	fsr2l,c
 13972  002BD2  0EFF               	movlw	255
 13973  002BD4  20E2               	addwfc	fsr1h,w,c
 13974  002BD6  6EDA               	movwf	fsr2h,c
 13975  002BD8  50DF               	movf	indf2,w,c
 13976  002BDA  6E6D               	movwf	(btemp+11)^0,c
 13977  002BDC  90D8               	bcf	status,0,c
 13978  002BDE  346D               	rlcf	(btemp+11)^0,w,c
 13979  002BE0  6E6C               	movwf	(btemp+10)^0,c
 13980                           
 13981                           ;stkvar	___fldiv@aexp @ sp[(-13)+10]
 13982  002BE2  0EFD               	movlw	-3
 13983  002BE4  C06C  FFE3         	movff	btemp+10,plusw1
 13984  002BE8                     
 13985                           ;stkvar	___fldiv@a @ sp[(-13)+-8]
 13986  002BE8  0EED               	movlw	237
 13987  002BEA  24E1               	addwf	fsr1l,w,c
 13988  002BEC  6ED9               	movwf	fsr2l,c
 13989  002BEE  0EFF               	movlw	255
 13990  002BF0  20E2               	addwfc	fsr1h,w,c
 13991  002BF2  6EDA               	movwf	fsr2h,c
 13992  002BF4  AEDF               	btfss	indf2,7,c
 13993  002BF6  EFFF  F015         	goto	u243_21
 13994  002BFA  EF01  F016         	goto	u243_20
 13995  002BFE                     u243_21:
 13996  002BFE  EF03  F016         	goto	l3024
 13997  002C02                     u243_20:
 13998  002C02                     
 13999                           ;stkvar	___fldiv@aexp @ sp[(-13)+10]
 14000  002C02  0EFD               	movlw	-3
 14001  002C04  80E3               	bsf	plusw1,0,c
 14002  002C06                     l3024:
 14003                           
 14004                           ;stkvar	___fldiv@aexp @ sp[(-13)+10]
 14005  002C06  0EFD               	movlw	-3
 14006  002C08  50E3               	movf	plusw1,w,c
 14007  002C0A  B4D8               	btfsc	status,2,c
 14008  002C0C  EF0A  F016         	goto	u244_21
 14009  002C10  EF0C  F016         	goto	u244_20
 14010  002C14                     u244_21:
 14011  002C14  EF35  F016         	goto	l3034
 14012  002C18                     u244_20:
 14013  002C18                     
 14014                           ;stkvar	___fldiv@aexp @ sp[(-13)+10]
 14015  002C18  0EFD               	movlw	-3
 14016  002C1A  28E3               	incf	plusw1,w,c
 14017  002C1C  A4D8               	btfss	status,2,c
 14018  002C1E  EF13  F016         	goto	u245_21
 14019  002C22  EF15  F016         	goto	u245_20
 14020  002C26                     u245_21:
 14021  002C26  EF29  F016         	goto	l3030
 14022  002C2A                     u245_20:
 14023  002C2A  0E00               	movlw	0
 14024  002C2C  6E6A               	movwf	(btemp+8)^0,c
 14025  002C2E  0E00               	movlw	0
 14026  002C30  6E6B               	movwf	(btemp+9)^0,c
 14027  002C32  0E00               	movlw	0
 14028  002C34  6E6C               	movwf	(btemp+10)^0,c
 14029  002C36  0E00               	movlw	0
 14030  002C38  6E6D               	movwf	(btemp+11)^0,c
 14031                           
 14032                           ;stkvar	___fldiv@a @ sp[(-13)+-8]
 14033  002C3A  0EEB               	movlw	-21
 14034  002C3C  C06A  FFE3         	movff	btemp+8,plusw1
 14035  002C40  0EEC               	movlw	-20
 14036  002C42  C06B  FFE3         	movff	btemp+9,plusw1
 14037  002C46  0EED               	movlw	-19
 14038  002C48  C06C  FFE3         	movff	btemp+10,plusw1
 14039  002C4C  0EEE               	movlw	-18
 14040  002C4E  C06D  FFE3         	movff	btemp+11,plusw1
 14041  002C52                     l3030:
 14042                           
 14043                           ;stkvar	___fldiv@a @ sp[(-13)+-8]
 14044  002C52  0EED               	movlw	-19
 14045  002C54  8EE3               	bsf	plusw1,7,c
 14046  002C56                     
 14047                           ;stkvar	___fldiv@a @ sp[(-13)+-8]
 14048  002C56  0EEE               	movlw	238
 14049  002C58  24E1               	addwf	fsr1l,w,c
 14050  002C5A  6ED9               	movwf	fsr2l,c
 14051  002C5C  0EFF               	movlw	255
 14052  002C5E  20E2               	addwfc	fsr1h,w,c
 14053  002C60  6EDA               	movwf	fsr2h,c
 14054  002C62  0E00               	movlw	0
 14055  002C64  6EDF               	movwf	indf2,c
 14056  002C66  EF49  F016         	goto	l3036
 14057  002C6A                     l3034:
 14058  002C6A  0E00               	movlw	0
 14059  002C6C  6E6A               	movwf	(btemp+8)^0,c
 14060  002C6E  0E00               	movlw	0
 14061  002C70  6E6B               	movwf	(btemp+9)^0,c
 14062  002C72  0E00               	movlw	0
 14063  002C74  6E6C               	movwf	(btemp+10)^0,c
 14064  002C76  0E00               	movlw	0
 14065  002C78  6E6D               	movwf	(btemp+11)^0,c
 14066                           
 14067                           ;stkvar	___fldiv@a @ sp[(-13)+-8]
 14068  002C7A  0EEB               	movlw	-21
 14069  002C7C  C06A  FFE3         	movff	btemp+8,plusw1
 14070  002C80  0EEC               	movlw	-20
 14071  002C82  C06B  FFE3         	movff	btemp+9,plusw1
 14072  002C86  0EED               	movlw	-19
 14073  002C88  C06C  FFE3         	movff	btemp+10,plusw1
 14074  002C8C  0EEE               	movlw	-18
 14075  002C8E  C06D  FFE3         	movff	btemp+11,plusw1
 14076  002C92                     l3036:
 14077                           
 14078                           ;stkvar	___fldiv@a @ sp[(-13)+-8]
 14079  002C92  0EEB               	movlw	-21
 14080  002C94  50E3               	movf	plusw1,w,c
 14081  002C96  E10D               	bnz	u246_21
 14082  002C98  0EEC               	movlw	-20
 14083  002C9A  50E3               	movf	plusw1,w,c
 14084  002C9C  E10A               	bnz	u246_21
 14085  002C9E  0EED               	movlw	-19
 14086  002CA0  50E3               	movf	plusw1,w,c
 14087  002CA2  E107               	bnz	u246_21
 14088  002CA4  0EEE               	movlw	-18
 14089  002CA6  50E3               	movf	plusw1,w,c
 14090  002CA8  A4D8               	btfss	status,2,c
 14091  002CAA  EF59  F016         	goto	u246_21
 14092  002CAE  EF5B  F016         	goto	u246_20
 14093  002CB2                     u246_21:
 14094  002CB2  EF86  F016         	goto	l3048
 14095  002CB6                     u246_20:
 14096  002CB6                     
 14097                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14098  002CB6  0EEF               	movlw	-17
 14099  002CB8  6AE3               	clrf	plusw1,c
 14100  002CBA  0EF0               	movlw	-16
 14101  002CBC  6AE3               	clrf	plusw1,c
 14102  002CBE  0EF1               	movlw	-15
 14103  002CC0  6AE3               	clrf	plusw1,c
 14104  002CC2  0EF2               	movlw	-14
 14105  002CC4  6AE3               	clrf	plusw1,c
 14106  002CC6                     
 14107                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14108  002CC6  0EF1               	movlw	241
 14109  002CC8  24E1               	addwf	fsr1l,w,c
 14110  002CCA  6ED9               	movwf	fsr2l,c
 14111  002CCC  0EFF               	movlw	255
 14112  002CCE  20E2               	addwfc	fsr1h,w,c
 14113  002CD0  6EDA               	movwf	fsr2h,c
 14114  002CD2  0E80               	movlw	128
 14115  002CD4  12DE               	iorwf	postinc2,f,c
 14116  002CD6  0E7F               	movlw	127
 14117  002CD8  12DD               	iorwf	postdec2,f,c
 14118  002CDA                     l3042:
 14119                           
 14120                           ;stkvar	___fldiv@sign @ sp[(-13)+12]
 14121  002CDA  0EFF               	movlw	-1
 14122  002CDC  CFE3 F06D          	movff	plusw1,btemp+11
 14123                           
 14124                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14125  002CE0  0EF2               	movlw	242
 14126  002CE2  24E1               	addwf	fsr1l,w,c
 14127  002CE4  6ED9               	movwf	fsr2l,c
 14128  002CE6  0EFF               	movlw	255
 14129  002CE8  20E2               	addwfc	fsr1h,w,c
 14130  002CEA  6EDA               	movwf	fsr2h,c
 14131  002CEC  506D               	movf	(btemp+11)^0,w,c
 14132  002CEE  12DF               	iorwf	indf2,f,c
 14133  002CF0                     
 14134                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14135  002CF0  0EEF               	movlw	-17
 14136  002CF2  CFE3 F062          	movff	plusw1,btemp
 14137  002CF6  0EF0               	movlw	-16
 14138  002CF8  CFE3 F063          	movff	plusw1,btemp+1
 14139  002CFC  0EF1               	movlw	-15
 14140  002CFE  CFE3 F064          	movff	plusw1,btemp+2
 14141  002D02  0EF2               	movlw	-14
 14142  002D04  CFE3 F065          	movff	plusw1,btemp+3
 14143  002D08  EF6F  F018         	goto	l1160
 14144  002D0C                     l3048:
 14145                           
 14146                           ;stkvar	___fldiv@bexp @ sp[(-13)+11]
 14147  002D0C  0EFE               	movlw	-2
 14148  002D0E  50E3               	movf	plusw1,w,c
 14149  002D10  A4D8               	btfss	status,2,c
 14150  002D12  EF8D  F016         	goto	u247_21
 14151  002D16  EF8F  F016         	goto	u247_20
 14152  002D1A                     u247_21:
 14153  002D1A  EF99  F016         	goto	l3056
 14154  002D1E                     u247_20:
 14155  002D1E  0E00               	movlw	0
 14156  002D20  6E62               	movwf	btemp^0,c
 14157  002D22  0E00               	movlw	0
 14158  002D24  6E63               	movwf	(btemp+1)^0,c
 14159  002D26  0E00               	movlw	0
 14160  002D28  6E64               	movwf	(btemp+2)^0,c
 14161  002D2A  0E00               	movlw	0
 14162  002D2C  6E65               	movwf	(btemp+3)^0,c
 14163  002D2E  EF6F  F018         	goto	l1160
 14164  002D32                     l3056:
 14165                           
 14166                           ;stkvar	___fldiv@bexp @ sp[(-13)+11]
 14167  002D32  0EFE               	movlw	-2
 14168  002D34  50E3               	movf	plusw1,w,c
 14169  002D36  6E6C               	movwf	(btemp+10)^0,c
 14170  002D38  6A6D               	clrf	(btemp+11)^0,c
 14171                           
 14172                           ;stkvar	___fldiv@aexp @ sp[(-13)+10]
 14173  002D3A  0EFD               	movlw	-3
 14174  002D3C  50E3               	movf	plusw1,w,c
 14175  002D3E  5E6C               	subwf	(btemp+10)^0,f,c
 14176  002D40  0E00               	movlw	0
 14177  002D42  5A6D               	subwfb	(btemp+11)^0,f,c
 14178  002D44  0E7F               	movlw	127
 14179  002D46  266C               	addwf	(btemp+10)^0,f,c
 14180  002D48  0E00               	movlw	0
 14181  002D4A  226D               	addwfc	(btemp+11)^0,f,c
 14182                           
 14183                           ;stkvar	___fldiv@new_exp @ sp[(-13)+8]
 14184  002D4C  0EFB               	movlw	-5
 14185  002D4E  C06C  FFE3         	movff	btemp+10,plusw1
 14186  002D52  0EFC               	movlw	-4
 14187  002D54  C06D  FFE3         	movff	btemp+11,plusw1
 14188  002D58                     
 14189                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14190  002D58  0EEF               	movlw	-17
 14191  002D5A  CFE3 F06A          	movff	plusw1,btemp+8
 14192  002D5E  0EF0               	movlw	-16
 14193  002D60  CFE3 F06B          	movff	plusw1,btemp+9
 14194  002D64  0EF1               	movlw	-15
 14195  002D66  CFE3 F06C          	movff	plusw1,btemp+10
 14196  002D6A  0EF2               	movlw	-14
 14197  002D6C  CFE3 F06D          	movff	plusw1,btemp+11
 14198                           
 14199                           ;stkvar	___fldiv@rem @ sp[(-13)+4]
 14200  002D70  0EF7               	movlw	-9
 14201  002D72  C06A  FFE3         	movff	btemp+8,plusw1
 14202  002D76  0EF8               	movlw	-8
 14203  002D78  C06B  FFE3         	movff	btemp+9,plusw1
 14204  002D7C  0EF9               	movlw	-7
 14205  002D7E  C06C  FFE3         	movff	btemp+10,plusw1
 14206  002D82  0EFA               	movlw	-6
 14207  002D84  C06D  FFE3         	movff	btemp+11,plusw1
 14208  002D88                     
 14209                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14210  002D88  0EEF               	movlw	-17
 14211  002D8A  6AE3               	clrf	plusw1,c
 14212  002D8C  0EF0               	movlw	-16
 14213  002D8E  6AE3               	clrf	plusw1,c
 14214  002D90  0EF1               	movlw	-15
 14215  002D92  6AE3               	clrf	plusw1,c
 14216  002D94  0EF2               	movlw	-14
 14217  002D96  6AE3               	clrf	plusw1,c
 14218  002D98                     
 14219                           ;stkvar	___fldiv@grs @ sp[(-13)+0]
 14220  002D98  0EF3               	movlw	-13
 14221  002D9A  6AE3               	clrf	plusw1,c
 14222  002D9C  0EF4               	movlw	-12
 14223  002D9E  6AE3               	clrf	plusw1,c
 14224  002DA0  0EF5               	movlw	-11
 14225  002DA2  6AE3               	clrf	plusw1,c
 14226  002DA4  0EF6               	movlw	-10
 14227  002DA6  6AE3               	clrf	plusw1,c
 14228  002DA8                     
 14229                           ;stkvar	___fldiv@aexp @ sp[(-13)+10]
 14230  002DA8  0EFD               	movlw	-3
 14231  002DAA  6AE3               	clrf	plusw1,c
 14232  002DAC  EF37  F017         	goto	l3084
 14233  002DB0                     l3066:
 14234                           
 14235                           ;stkvar	___fldiv@aexp @ sp[(-13)+10]
 14236  002DB0  0EFD               	movlw	-3
 14237  002DB2  50E3               	movf	plusw1,w,c
 14238  002DB4  B4D8               	btfsc	status,2,c
 14239  002DB6  EFDF  F016         	goto	u248_21
 14240  002DBA  EFE1  F016         	goto	u248_20
 14241  002DBE                     u248_21:
 14242  002DBE  EF06  F017         	goto	l3076
 14243  002DC2                     u248_20:
 14244  002DC2                     
 14245                           ;stkvar	___fldiv@rem @ sp[(-13)+4]
 14246  002DC2  90D8               	bcf	status,0,c
 14247  002DC4  0EF7               	movlw	-9
 14248  002DC6  36E3               	rlcf	plusw1,f,c
 14249  002DC8  0EF8               	movlw	-8
 14250  002DCA  36E3               	rlcf	plusw1,f,c
 14251  002DCC  0EF9               	movlw	-7
 14252  002DCE  36E3               	rlcf	plusw1,f,c
 14253  002DD0  0EFA               	movlw	-6
 14254  002DD2  36E3               	rlcf	plusw1,f,c
 14255                           
 14256                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14257  002DD4  90D8               	bcf	status,0,c
 14258  002DD6  0EEF               	movlw	-17
 14259  002DD8  36E3               	rlcf	plusw1,f,c
 14260  002DDA  0EF0               	movlw	-16
 14261  002DDC  36E3               	rlcf	plusw1,f,c
 14262  002DDE  0EF1               	movlw	-15
 14263  002DE0  36E3               	rlcf	plusw1,f,c
 14264  002DE2  0EF2               	movlw	-14
 14265  002DE4  36E3               	rlcf	plusw1,f,c
 14266  002DE6                     
 14267                           ;stkvar	___fldiv@grs @ sp[(-13)+0]
 14268  002DE6  0EF6               	movlw	-10
 14269  002DE8  AEE3               	btfss	plusw1,7,c
 14270  002DEA  EFF9  F016         	goto	u249_21
 14271  002DEE  EFFB  F016         	goto	u249_20
 14272  002DF2                     u249_21:
 14273  002DF2  EFFD  F016         	goto	l3074
 14274  002DF6                     u249_20:
 14275  002DF6                     
 14276                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14277  002DF6  0EEF               	movlw	-17
 14278  002DF8  80E3               	bsf	plusw1,0,c
 14279  002DFA                     l3074:
 14280                           
 14281                           ;stkvar	___fldiv@grs @ sp[(-13)+0]
 14282  002DFA  90D8               	bcf	status,0,c
 14283  002DFC  0EF3               	movlw	-13
 14284  002DFE  36E3               	rlcf	plusw1,f,c
 14285  002E00  0EF4               	movlw	-12
 14286  002E02  36E3               	rlcf	plusw1,f,c
 14287  002E04  0EF5               	movlw	-11
 14288  002E06  36E3               	rlcf	plusw1,f,c
 14289  002E08  0EF6               	movlw	-10
 14290  002E0A  36E3               	rlcf	plusw1,f,c
 14291  002E0C                     l3076:
 14292                           
 14293                           ;stkvar	___fldiv@a @ sp[(-13)+-8]
 14294                           ;stkvar	___fldiv@rem @ sp[(-13)+4]
 14295  002E0C  50E1               	movf	fsr1l,w,c
 14296  002E0E  0FF7               	addlw	-9
 14297  002E10  6ED9               	movwf	fsr2l,c
 14298  002E12  50E2               	movf	fsr1h,w,c
 14299  002E14  6EDA               	movwf	fsr2h,c
 14300  002E16  0EFF               	movlw	255
 14301  002E18  22DA               	addwfc	fsr2h,f,c
 14302  002E1A  0EEB               	movlw	-21
 14303  002E1C  50E3               	movf	plusw1,w,c
 14304  002E1E  5CDE               	subwf	postinc2,w,c
 14305  002E20  0EEC               	movlw	-20
 14306  002E22  50E3               	movf	plusw1,w,c
 14307  002E24  58DE               	subwfb	postinc2,w,c
 14308  002E26  0EED               	movlw	-19
 14309  002E28  50E3               	movf	plusw1,w,c
 14310  002E2A  58DE               	subwfb	postinc2,w,c
 14311  002E2C  0EEE               	movlw	-18
 14312  002E2E  50E3               	movf	plusw1,w,c
 14313  002E30  58DE               	subwfb	postinc2,w,c
 14314  002E32  A0D8               	btfss	status,0,c
 14315  002E34  EF1E  F017         	goto	u250_21
 14316  002E38  EF20  F017         	goto	u250_20
 14317  002E3C                     u250_21:
 14318  002E3C  EF35  F017         	goto	l3082
 14319  002E40                     u250_20:
 14320  002E40                     
 14321                           ;stkvar	___fldiv@grs @ sp[(-13)+0]
 14322  002E40  0EF6               	movlw	-10
 14323  002E42  8CE3               	bsf	plusw1,6,c
 14324  002E44                     
 14325                           ;stkvar	___fldiv@a @ sp[(-13)+-8]
 14326                           ;stkvar	___fldiv@rem @ sp[(-13)+4]
 14327  002E44  50E1               	movf	fsr1l,w,c
 14328  002E46  0FF7               	addlw	-9
 14329  002E48  6ED9               	movwf	fsr2l,c
 14330  002E4A  50E2               	movf	fsr1h,w,c
 14331  002E4C  6EDA               	movwf	fsr2h,c
 14332  002E4E  0EFF               	movlw	255
 14333  002E50  22DA               	addwfc	fsr2h,f,c
 14334  002E52  0EEB               	movlw	-21
 14335  002E54  50E3               	movf	plusw1,w,c
 14336  002E56  5EDE               	subwf	postinc2,f,c
 14337  002E58  0EEC               	movlw	-20
 14338  002E5A  50E3               	movf	plusw1,w,c
 14339  002E5C  5ADE               	subwfb	postinc2,f,c
 14340  002E5E  0EED               	movlw	-19
 14341  002E60  50E3               	movf	plusw1,w,c
 14342  002E62  5ADE               	subwfb	postinc2,f,c
 14343  002E64  0EEE               	movlw	-18
 14344  002E66  50E3               	movf	plusw1,w,c
 14345  002E68  5ADE               	subwfb	postinc2,f,c
 14346  002E6A                     l3082:
 14347                           
 14348                           ;stkvar	___fldiv@aexp @ sp[(-13)+10]
 14349  002E6A  0EFD               	movlw	-3
 14350  002E6C  2AE3               	incf	plusw1,f,c
 14351  002E6E                     l3084:
 14352                           
 14353                           ;stkvar	___fldiv@aexp @ sp[(-13)+10]
 14354  002E6E  0EFD               	movlw	-3
 14355  002E70  CFE3 F062          	movff	plusw1,btemp
 14356  002E74  0E19               	movlw	25
 14357  002E76  6462               	cpfsgt	btemp^0,c
 14358  002E78  EF40  F017         	goto	u251_21
 14359  002E7C  EF42  F017         	goto	u251_20
 14360  002E80                     u251_21:
 14361  002E80  EFD8  F016         	goto	l3066
 14362  002E84                     u251_20:
 14363  002E84                     
 14364                           ;stkvar	___fldiv@rem @ sp[(-13)+4]
 14365  002E84  0EF7               	movlw	-9
 14366  002E86  50E3               	movf	plusw1,w,c
 14367  002E88  E10F               	bnz	u252_20
 14368  002E8A  0EF8               	movlw	-8
 14369  002E8C  50E3               	movf	plusw1,w,c
 14370  002E8E  E10C               	bnz	u252_20
 14371  002E90  0EF9               	movlw	-7
 14372  002E92  50E3               	movf	plusw1,w,c
 14373  002E94  E109               	bnz	u252_20
 14374  002E96  0EFA               	movlw	-6
 14375  002E98  50E3               	movf	plusw1,w,c
 14376  002E9A  B4D8               	btfsc	status,2,c
 14377  002E9C  EF52  F017         	goto	u252_21
 14378  002EA0  EF54  F017         	goto	u252_20
 14379  002EA4                     u252_21:
 14380  002EA4  EF7E  F017         	goto	l3100
 14381  002EA8                     u252_20:
 14382  002EA8                     
 14383                           ;stkvar	___fldiv@grs @ sp[(-13)+0]
 14384  002EA8  0EF3               	movlw	-13
 14385  002EAA  80E3               	bsf	plusw1,0,c
 14386  002EAC  EF7E  F017         	goto	l3100
 14387  002EB0                     l3090:
 14388                           
 14389                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14390  002EB0  90D8               	bcf	status,0,c
 14391  002EB2  0EEF               	movlw	-17
 14392  002EB4  36E3               	rlcf	plusw1,f,c
 14393  002EB6  0EF0               	movlw	-16
 14394  002EB8  36E3               	rlcf	plusw1,f,c
 14395  002EBA  0EF1               	movlw	-15
 14396  002EBC  36E3               	rlcf	plusw1,f,c
 14397  002EBE  0EF2               	movlw	-14
 14398  002EC0  36E3               	rlcf	plusw1,f,c
 14399  002EC2                     
 14400                           ;stkvar	___fldiv@grs @ sp[(-13)+0]
 14401  002EC2  0EF6               	movlw	-10
 14402  002EC4  AEE3               	btfss	plusw1,7,c
 14403  002EC6  EF67  F017         	goto	u253_21
 14404  002ECA  EF69  F017         	goto	u253_20
 14405  002ECE                     u253_21:
 14406  002ECE  EF6B  F017         	goto	l3096
 14407  002ED2                     u253_20:
 14408  002ED2                     
 14409                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14410  002ED2  0EEF               	movlw	-17
 14411  002ED4  80E3               	bsf	plusw1,0,c
 14412  002ED6                     l3096:
 14413                           
 14414                           ;stkvar	___fldiv@grs @ sp[(-13)+0]
 14415  002ED6  90D8               	bcf	status,0,c
 14416  002ED8  0EF3               	movlw	-13
 14417  002EDA  36E3               	rlcf	plusw1,f,c
 14418  002EDC  0EF4               	movlw	-12
 14419  002EDE  36E3               	rlcf	plusw1,f,c
 14420  002EE0  0EF5               	movlw	-11
 14421  002EE2  36E3               	rlcf	plusw1,f,c
 14422  002EE4  0EF6               	movlw	-10
 14423  002EE6  36E3               	rlcf	plusw1,f,c
 14424  002EE8                     
 14425                           ;stkvar	___fldiv@new_exp @ sp[(-13)+8]
 14426  002EE8  50E1               	movf	fsr1l,w,c
 14427  002EEA  0FFB               	addlw	-5
 14428  002EEC  6ED9               	movwf	fsr2l,c
 14429  002EEE  50E2               	movf	fsr1h,w,c
 14430  002EF0  6EDA               	movwf	fsr2h,c
 14431  002EF2  0EFF               	movlw	255
 14432  002EF4  22DA               	addwfc	fsr2h,f,c
 14433  002EF6  06DE               	decf	postinc2,f,c
 14434  002EF8  0E00               	movlw	0
 14435  002EFA  5ADD               	subwfb	postdec2,f,c
 14436  002EFC                     l3100:
 14437                           
 14438                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14439  002EFC  0EF1               	movlw	-15
 14440  002EFE  AEE3               	btfss	plusw1,7,c
 14441  002F00  EF84  F017         	goto	u254_21
 14442  002F04  EF86  F017         	goto	u254_20
 14443  002F08                     u254_21:
 14444  002F08  EF58  F017         	goto	l3090
 14445  002F0C                     u254_20:
 14446  002F0C                     
 14447                           ;stkvar	___fldiv@aexp @ sp[(-13)+10]
 14448  002F0C  0EFD               	movlw	-3
 14449  002F0E  6AE3               	clrf	plusw1,c
 14450  002F10                     
 14451                           ;stkvar	___fldiv@grs @ sp[(-13)+0]
 14452  002F10  0EF6               	movlw	-10
 14453  002F12  AEE3               	btfss	plusw1,7,c
 14454  002F14  EF8E  F017         	goto	u255_21
 14455  002F18  EF90  F017         	goto	u255_20
 14456  002F1C                     u255_21:
 14457  002F1C  EFBD  F017         	goto	l3114
 14458  002F20                     u255_20:
 14459  002F20                     
 14460                           ;stkvar	___fldiv@grs @ sp[(-13)+0]
 14461  002F20  50E1               	movf	fsr1l,w,c
 14462  002F22  0FF3               	addlw	-13
 14463  002F24  6ED9               	movwf	fsr2l,c
 14464  002F26  50E2               	movf	fsr1h,w,c
 14465  002F28  6EDA               	movwf	fsr2h,c
 14466  002F2A  0EFF               	movlw	255
 14467  002F2C  22DA               	addwfc	fsr2h,f,c
 14468  002F2E  0EFF               	movlw	255
 14469  002F30  14DE               	andwf	postinc2,w,c
 14470  002F32  6E6A               	movwf	(btemp+8)^0,c
 14471  002F34  0EFF               	movlw	255
 14472  002F36  14DE               	andwf	postinc2,w,c
 14473  002F38  6E6B               	movwf	(btemp+9)^0,c
 14474  002F3A  0EFF               	movlw	255
 14475  002F3C  14DE               	andwf	postinc2,w,c
 14476  002F3E  6E6C               	movwf	(btemp+10)^0,c
 14477  002F40  0E7F               	movlw	127
 14478  002F42  14DE               	andwf	postinc2,w,c
 14479  002F44  6E6D               	movwf	(btemp+11)^0,c
 14480  002F46  506A               	movf	(btemp+8)^0,w,c
 14481  002F48  106B               	iorwf	(btemp+9)^0,w,c
 14482  002F4A  106C               	iorwf	(btemp+10)^0,w,c
 14483  002F4C  106D               	iorwf	(btemp+11)^0,w,c
 14484  002F4E  B4D8               	btfsc	status,2,c
 14485  002F50  EFAC  F017         	goto	u256_21
 14486  002F54  EFAE  F017         	goto	u256_20
 14487  002F58                     u256_21:
 14488  002F58  EFB3  F017         	goto	l3110
 14489  002F5C                     u256_20:
 14490  002F5C                     l3108:
 14491                           
 14492                           ;stkvar	___fldiv@aexp @ sp[(-13)+10]
 14493  002F5C  0EFD               	movlw	-3
 14494  002F5E  6AE3               	clrf	plusw1,c
 14495  002F60  2AE3               	incf	plusw1,f,c
 14496  002F62  EFBD  F017         	goto	l3114
 14497  002F66                     l3110:
 14498                           
 14499                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14500  002F66  0EEF               	movlw	-17
 14501  002F68  A0E3               	btfss	plusw1,0,c
 14502  002F6A  EFB9  F017         	goto	u257_21
 14503  002F6E  EFBB  F017         	goto	u257_20
 14504  002F72                     u257_21:
 14505  002F72  EFBD  F017         	goto	l3114
 14506  002F76                     u257_20:
 14507  002F76  EFAE  F017         	goto	l3108
 14508  002F7A                     l3114:
 14509                           
 14510                           ;stkvar	___fldiv@aexp @ sp[(-13)+10]
 14511  002F7A  0EFD               	movlw	-3
 14512  002F7C  50E3               	movf	plusw1,w,c
 14513  002F7E  B4D8               	btfsc	status,2,c
 14514  002F80  EFC4  F017         	goto	u258_21
 14515  002F84  EFC6  F017         	goto	u258_20
 14516  002F88                     u258_21:
 14517  002F88  EF01  F018         	goto	l3124
 14518  002F8C                     u258_20:
 14519  002F8C                     
 14520                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14521  002F8C  50E1               	movf	fsr1l,w,c
 14522  002F8E  0FEF               	addlw	-17
 14523  002F90  6ED9               	movwf	fsr2l,c
 14524  002F92  50E2               	movf	fsr1h,w,c
 14525  002F94  6EDA               	movwf	fsr2h,c
 14526  002F96  0EFF               	movlw	255
 14527  002F98  22DA               	addwfc	fsr2h,f,c
 14528  002F9A  2ADE               	incf	postinc2,f,c
 14529  002F9C  0E00               	movlw	0
 14530  002F9E  22DE               	addwfc	postinc2,f,c
 14531  002FA0  22DE               	addwfc	postinc2,f,c
 14532  002FA2  22DE               	addwfc	postinc2,f,c
 14533  002FA4                     
 14534                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14535  002FA4  0EF2               	movlw	-14
 14536  002FA6  A0E3               	btfss	plusw1,0,c
 14537  002FA8  EFD8  F017         	goto	u259_21
 14538  002FAC  EFDA  F017         	goto	u259_20
 14539  002FB0                     u259_21:
 14540  002FB0  EF01  F018         	goto	l3124
 14541  002FB4                     u259_20:
 14542  002FB4  0E01               	movlw	1
 14543  002FB6  6E6D               	movwf	(btemp+11)^0,c
 14544                           
 14545                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14546  002FB8  50E1               	movf	fsr1l,w,c
 14547  002FBA  0FEF               	addlw	-17
 14548  002FBC  6ED9               	movwf	fsr2l,c
 14549  002FBE  50E2               	movf	fsr1h,w,c
 14550  002FC0  6EDA               	movwf	fsr2h,c
 14551  002FC2  0EFF               	movlw	255
 14552  002FC4  22DA               	addwfc	fsr2h,f,c
 14553  002FC6  286D               	incf	(btemp+11)^0,w,c
 14554  002FC8  52DE               	movf	postinc2,f,c
 14555  002FCA  EFEF  F017         	goto	u260_20
 14556  002FCE                     u260_25:
 14557  002FCE  52DE               	movf	postinc2,f,c
 14558  002FD0  90D8               	bcf	status,0,c
 14559  002FD2  BEDC               	btfsc	preinc2,7,c
 14560  002FD4  80D8               	bsf	status,0,c
 14561  002FD6  32DD               	rrcf	postdec2,f,c
 14562  002FD8  32DD               	rrcf	postdec2,f,c
 14563  002FDA  32DD               	rrcf	postdec2,f,c
 14564  002FDC  32DE               	rrcf	postinc2,f,c
 14565  002FDE                     u260_20:
 14566  002FDE  2EE8               	decfsz	wreg,f,c
 14567  002FE0  EFE7  F017         	goto	u260_25
 14568  002FE4                     
 14569                           ;stkvar	___fldiv@new_exp @ sp[(-13)+8]
 14570  002FE4  0EFB               	movlw	-5
 14571  002FE6  50E3               	movf	plusw1,w,c
 14572  002FE8  0F01               	addlw	1
 14573  002FEA  6E62               	movwf	btemp^0,c
 14574  002FEC  0EFB               	movlw	-5
 14575  002FEE  C062  FFE3         	movff	btemp,plusw1
 14576  002FF2  6A62               	clrf	btemp^0,c
 14577  002FF4  0EFC               	movlw	-4
 14578  002FF6  50E3               	movf	plusw1,w,c
 14579  002FF8  2062               	addwfc	btemp^0,w,c
 14580  002FFA  6E62               	movwf	btemp^0,c
 14581  002FFC  0EFC               	movlw	-4
 14582  002FFE  C062  FFE3         	movff	btemp,plusw1
 14583  003002                     l3124:
 14584                           
 14585                           ;stkvar	___fldiv@new_exp @ sp[(-13)+8]
 14586  003002  0EFC               	movlw	-4
 14587  003004  BEE3               	btfsc	plusw1,7,c
 14588  003006  EF0F  F018         	goto	u261_21
 14589  00300A  0EFC               	movlw	-4
 14590  00300C  50E3               	movf	plusw1,w,c
 14591  00300E  E109               	bnz	u261_20
 14592  003010  0EFB               	movlw	-5
 14593  003012  28E3               	incf	plusw1,w,c
 14594  003014  A0D8               	btfss	status,0,c
 14595  003016  EF0F  F018         	goto	u261_21
 14596  00301A  EF11  F018         	goto	u261_20
 14597  00301E                     u261_21:
 14598  00301E  EF23  F018         	goto	l3130
 14599  003022                     u261_20:
 14600  003022  0EFF               	movlw	255
 14601  003024  6E6C               	movwf	(btemp+10)^0,c
 14602  003026  0E00               	movlw	0
 14603  003028  6E6D               	movwf	(btemp+11)^0,c
 14604                           
 14605                           ;stkvar	___fldiv@new_exp @ sp[(-13)+8]
 14606  00302A  0EFB               	movlw	-5
 14607  00302C  C06C  FFE3         	movff	btemp+10,plusw1
 14608  003030  0EFC               	movlw	-4
 14609  003032  C06D  FFE3         	movff	btemp+11,plusw1
 14610  003036                     
 14611                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14612  003036  0EEF               	movlw	-17
 14613  003038  6AE3               	clrf	plusw1,c
 14614  00303A  0EF0               	movlw	-16
 14615  00303C  6AE3               	clrf	plusw1,c
 14616  00303E  0EF1               	movlw	-15
 14617  003040  6AE3               	clrf	plusw1,c
 14618  003042  0EF2               	movlw	-14
 14619  003044  6AE3               	clrf	plusw1,c
 14620  003046                     l3130:
 14621                           
 14622                           ;stkvar	___fldiv@new_exp @ sp[(-13)+8]
 14623  003046  0EFC               	movlw	-4
 14624  003048  BEE3               	btfsc	plusw1,7,c
 14625  00304A  EF33  F018         	goto	u262_20
 14626  00304E  0EFC               	movlw	-4
 14627  003050  50E3               	movf	plusw1,w,c
 14628  003052  E107               	bnz	u262_21
 14629  003054  0EFB               	movlw	-5
 14630  003056  04E3               	decf	plusw1,w,c
 14631  003058  B0D8               	btfsc	status,0,c
 14632  00305A  EF31  F018         	goto	u262_21
 14633  00305E  EF33  F018         	goto	u262_20
 14634  003062                     u262_21:
 14635  003062  EF41  F018         	goto	l3136
 14636  003066                     u262_20:
 14637  003066                     
 14638                           ;stkvar	___fldiv@new_exp @ sp[(-13)+8]
 14639  003066  0EFB               	movlw	-5
 14640  003068  6AE3               	clrf	plusw1,c
 14641  00306A  0EFC               	movlw	-4
 14642  00306C  6AE3               	clrf	plusw1,c
 14643                           
 14644                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14645  00306E  0EEF               	movlw	-17
 14646  003070  6AE3               	clrf	plusw1,c
 14647  003072  0EF0               	movlw	-16
 14648  003074  6AE3               	clrf	plusw1,c
 14649  003076  0EF1               	movlw	-15
 14650  003078  6AE3               	clrf	plusw1,c
 14651  00307A  0EF2               	movlw	-14
 14652  00307C  6AE3               	clrf	plusw1,c
 14653  00307E                     
 14654                           ;stkvar	___fldiv@sign @ sp[(-13)+12]
 14655  00307E  0EFF               	movlw	-1
 14656  003080  6AE3               	clrf	plusw1,c
 14657  003082                     l3136:
 14658                           
 14659                           ;stkvar	___fldiv@new_exp @ sp[(-13)+8]
 14660                           ;stkvar	___fldiv@bexp @ sp[(-13)+11]
 14661  003082  0EFB               	movlw	-5
 14662  003084  CFE3 F062          	movff	plusw1,btemp
 14663  003088  0EFE               	movlw	-2
 14664  00308A  C062  FFE3         	movff	btemp,plusw1
 14665  00308E                     
 14666                           ;stkvar	___fldiv@bexp @ sp[(-13)+11]
 14667  00308E  0EFE               	movlw	-2
 14668  003090  A0E3               	btfss	plusw1,0,c
 14669  003092  EF4D  F018         	goto	u263_21
 14670  003096  EF4F  F018         	goto	u263_20
 14671  00309A                     u263_21:
 14672  00309A  EF59  F018         	goto	l3142
 14673  00309E                     u263_20:
 14674  00309E                     
 14675                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14676  00309E  0EF1               	movlw	241
 14677  0030A0  24E1               	addwf	fsr1l,w,c
 14678  0030A2  6ED9               	movwf	fsr2l,c
 14679  0030A4  0EFF               	movlw	255
 14680  0030A6  20E2               	addwfc	fsr1h,w,c
 14681  0030A8  6EDA               	movwf	fsr2h,c
 14682  0030AA  0E00               	movlw	0
 14683  0030AC  8EDB               	bsf	plusw2,7,c
 14684  0030AE  EF61  F018         	goto	l3144
 14685  0030B2                     l3142:
 14686                           
 14687                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14688  0030B2  0EF1               	movlw	241
 14689  0030B4  24E1               	addwf	fsr1l,w,c
 14690  0030B6  6ED9               	movwf	fsr2l,c
 14691  0030B8  0EFF               	movlw	255
 14692  0030BA  20E2               	addwfc	fsr1h,w,c
 14693  0030BC  6EDA               	movwf	fsr2h,c
 14694  0030BE  0E7F               	movlw	127
 14695  0030C0  16DF               	andwf	indf2,f,c
 14696  0030C2                     l3144:
 14697                           
 14698                           ;stkvar	___fldiv@b @ sp[(-13)+-4]
 14699  0030C2  0EF2               	movlw	242
 14700  0030C4  24E1               	addwf	fsr1l,w,c
 14701  0030C6  6ED9               	movwf	fsr2l,c
 14702  0030C8  0EFF               	movlw	255
 14703  0030CA  20E2               	addwfc	fsr1h,w,c
 14704  0030CC  6EDA               	movwf	fsr2h,c
 14705                           
 14706                           ;stkvar	___fldiv@bexp @ sp[(-13)+11]
 14707  0030CE  0EFE               	movlw	-2
 14708  0030D0  CFE3 F06D          	movff	plusw1,btemp+11
 14709  0030D4  90D8               	bcf	status,0,c
 14710  0030D6  306D               	rrcf	(btemp+11)^0,w,c
 14711  0030D8  6EDF               	movwf	indf2,c
 14712  0030DA  EF6D  F016         	goto	l3042
 14713  0030DE                     l1160:
 14714                           
 14715                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 14716  0030DE  0EEB               	movlw	235
 14717  0030E0  26E1               	addwf	fsr1l,f,c
 14718  0030E2  0EFF               	movlw	255
 14719  0030E4  22E2               	addwfc	fsr1h,f,c
 14720  0030E6  0012               	return		;funcret
 14721  0030E8                     __end_of___fldiv:
 14722                           	opt callstack 0
 14723                           
 14724 ;; *************** function _MsDelay *****************
 14725 ;; Defined at:
 14726 ;;		line 6 in file "delay.c"
 14727 ;; Parameters:    Size  Location     Type
 14728 ;;  itime           2  [STACK] unsigned int 
 14729 ;; Auto vars:     Size  Location     Type
 14730 ;;  j               2  [STACK] unsigned int 
 14731 ;;  i               2  [STACK] unsigned int 
 14732 ;; Return value:  Size  Location     Type
 14733 ;;                  1  [STACK] void 
 14734 ;; Registers used:
 14735 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14736 ;; Tracked objects:
 14737 ;;		On entry : 0/0
 14738 ;;		On exit  : 0/0
 14739 ;;		Unchanged: 0/0
 14740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14741 ;;      Params:         0       0       0       0       0       0       0
 14742 ;;      Locals:         0       0       0       0       0       0       0
 14743 ;;      Temps:          0       0       0       0       0       0       0
 14744 ;;      Totals:         0       0       0       0       0       0       0
 14745 ;;Total ram usage:        0 bytes
 14746 ;; Hardware stack levels used:    1
 14747 ;; Hardware stack levels required when called:    4
 14748 ;; This function calls:
 14749 ;;		Nothing
 14750 ;; This function is called by:
 14751 ;;		_task_lcd
 14752 ;; This function uses a reentrant model
 14753 ;;
 14754                           
 14755                           	psect	text43
 14756  005C56                     __ptext43:
 14757                           	opt callstack 0
 14758  005C56                     _MsDelay:
 14759                           	opt callstack 0
 14760                           
 14761                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14762  005C56  52E6               	movf	postinc1,f,c
 14763  005C58  52E6               	movf	postinc1,f,c
 14764  005C5A  52E6               	movf	postinc1,f,c
 14765  005C5C  52E6               	movf	postinc1,f,c
 14766  005C5E                     
 14767                           ;delay.c: 7: unsigned int i;;delay.c: 8: unsigned int j;;delay.c: 9: for (i = 0; i < iti
      +                          me; i++) {
 14768                           ;stkvar	MsDelay@i @ sp[(-4)+2]
 14769  005C5E  0EFE               	movlw	-2
 14770  005C60  6AE3               	clrf	plusw1,c
 14771  005C62  0EFF               	movlw	-1
 14772  005C64  6AE3               	clrf	plusw1,c
 14773  005C66  EF66  F02E         	goto	l2652
 14774  005C6A                     l2642:
 14775                           
 14776                           ;delay.c: 10: for (j = 0; j < 165; j++) {
 14777                           ;stkvar	MsDelay@j @ sp[(-4)+0]
 14778  005C6A  0EFC               	movlw	-4
 14779  005C6C  6AE3               	clrf	plusw1,c
 14780  005C6E  0EFD               	movlw	-3
 14781  005C70  6AE3               	clrf	plusw1,c
 14782  005C72                     l2648:
 14783                           
 14784                           ;stkvar	MsDelay@j @ sp[(-4)+0]
 14785  005C72  0EFC               	movlw	-4
 14786  005C74  50E3               	movf	plusw1,w,c
 14787  005C76  0F01               	addlw	1
 14788  005C78  6E62               	movwf	btemp^0,c
 14789  005C7A  0EFC               	movlw	-4
 14790  005C7C  C062  FFE3         	movff	btemp,plusw1
 14791  005C80  6A62               	clrf	btemp^0,c
 14792  005C82  0EFD               	movlw	-3
 14793  005C84  50E3               	movf	plusw1,w,c
 14794  005C86  2062               	addwfc	btemp^0,w,c
 14795  005C88  6E62               	movwf	btemp^0,c
 14796  005C8A  0EFD               	movlw	-3
 14797  005C8C  C062  FFE3         	movff	btemp,plusw1
 14798                           
 14799                           ;stkvar	MsDelay@j @ sp[(-4)+0]
 14800  005C90  0EFD               	movlw	-3
 14801  005C92  50E3               	movf	plusw1,w,c
 14802  005C94  E10C               	bnz	u183_20
 14803  005C96  0EFC               	movlw	-4
 14804  005C98  CFE3 F062          	movff	plusw1,btemp
 14805  005C9C  0EA5               	movlw	165
 14806  005C9E  5E62               	subwf	btemp^0,f,c
 14807  005CA0  A0D8               	btfss	status,0,c
 14808  005CA2  EF55  F02E         	goto	u183_21
 14809  005CA6  EF57  F02E         	goto	u183_20
 14810  005CAA                     u183_21:
 14811  005CAA  EF39  F02E         	goto	l2648
 14812  005CAE                     u183_20:
 14813  005CAE                     
 14814                           ;stkvar	MsDelay@i @ sp[(-4)+2]
 14815  005CAE  0EFE               	movlw	-2
 14816  005CB0  50E3               	movf	plusw1,w,c
 14817  005CB2  0F01               	addlw	1
 14818  005CB4  6E62               	movwf	btemp^0,c
 14819  005CB6  0EFE               	movlw	-2
 14820  005CB8  C062  FFE3         	movff	btemp,plusw1
 14821  005CBC  6A62               	clrf	btemp^0,c
 14822  005CBE  0EFF               	movlw	-1
 14823  005CC0  50E3               	movf	plusw1,w,c
 14824  005CC2  2062               	addwfc	btemp^0,w,c
 14825  005CC4  6E62               	movwf	btemp^0,c
 14826  005CC6  0EFF               	movlw	-1
 14827  005CC8  C062  FFE3         	movff	btemp,plusw1
 14828  005CCC                     l2652:
 14829                           
 14830                           ;stkvar	MsDelay@itime @ sp[(-4)+-2]
 14831  005CCC  0EFA               	movlw	-6
 14832  005CCE  CFE3 F06C          	movff	plusw1,btemp+10
 14833  005CD2  0EFB               	movlw	-5
 14834  005CD4  CFE3 F06D          	movff	plusw1,btemp+11
 14835                           
 14836                           ;stkvar	MsDelay@i @ sp[(-4)+2]
 14837  005CD8  0EFE               	movlw	-2
 14838  005CDA  CFE3 F06A          	movff	plusw1,btemp+8
 14839  005CDE  0EFF               	movlw	-1
 14840  005CE0  CFE3 F06B          	movff	plusw1,btemp+9
 14841  005CE4  506C               	movf	(btemp+10)^0,w,c
 14842  005CE6  5C6A               	subwf	(btemp+8)^0,w,c
 14843  005CE8  506D               	movf	(btemp+11)^0,w,c
 14844  005CEA  586B               	subwfb	(btemp+9)^0,w,c
 14845  005CEC  A0D8               	btfss	status,0,c
 14846  005CEE  EF7B  F02E         	goto	u184_21
 14847  005CF2  EF7D  F02E         	goto	u184_20
 14848  005CF6                     u184_21:
 14849  005CF6  EF35  F02E         	goto	l2642
 14850  005CFA                     u184_20:
 14851  005CFA                     
 14852                           ; _MsDelay: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14853  005CFA  0EFA               	movlw	250
 14854  005CFC  26E1               	addwf	fsr1l,f,c
 14855  005CFE  0EFF               	movlw	255
 14856  005D00  22E2               	addwfc	fsr1h,f,c
 14857  005D02  0012               	return		;funcret
 14858  005D04                     __end_of_MsDelay:
 14859                           	opt callstack 0
 14860                           
 14861 ;; *************** function _LerADC *****************
 14862 ;; Defined at:
 14863 ;;		line 29 in file "adc.h"
 14864 ;; Parameters:    Size  Location     Type
 14865 ;;		None
 14866 ;; Auto vars:     Size  Location     Type
 14867 ;;  temp            2  [STACK] unsigned int 
 14868 ;; Return value:  Size  Location     Type
 14869 ;;                  2  [STACK] unsigned int 
 14870 ;; Registers used:
 14871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14872 ;; Tracked objects:
 14873 ;;		On entry : 0/0
 14874 ;;		On exit  : 0/0
 14875 ;;		Unchanged: 0/0
 14876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14877 ;;      Params:         0       0       0       0       0       0       0
 14878 ;;      Locals:         0       0       0       0       0       0       0
 14879 ;;      Temps:          0       0       0       0       0       0       0
 14880 ;;      Totals:         0       0       0       0       0       0       0
 14881 ;;Total ram usage:        0 bytes
 14882 ;; Hardware stack levels used:    1
 14883 ;; Hardware stack levels required when called:    4
 14884 ;; This function calls:
 14885 ;;		Nothing
 14886 ;; This function is called by:
 14887 ;;		_task_lcd
 14888 ;; This function uses a reentrant model
 14889 ;;
 14890                           
 14891                           	psect	text44
 14892  00628E                     __ptext44:
 14893                           	opt callstack 0
 14894  00628E                     _LerADC:
 14895                           	opt callstack 0
 14896                           
 14897                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14898  00628E  52E6               	movf	postinc1,f,c
 14899  006290  52E6               	movf	postinc1,f,c
 14900  006292                     
 14901                           ;adc.h: 30: unsigned int temp;;adc.h: 32: ADCON0bits.GO = 1;
 14902  006292  82C2               	bsf	194,1,c	;volatile
 14903  006294                     l267:
 14904  006294  B2C2               	btfsc	194,1,c	;volatile
 14905  006296  EF4F  F031         	goto	u180_21
 14906  00629A  EF51  F031         	goto	u180_20
 14907  00629E                     u180_21:
 14908  00629E  EF4A  F031         	goto	l267
 14909  0062A2                     u180_20:
 14910  0062A2                     
 14911                           ;adc.h: 34: temp = ADRESH;
 14912  0062A2  50C4               	movf	196,w,c	;volatile
 14913  0062A4  6E6C               	movwf	(btemp+10)^0,c
 14914  0062A6  6A6D               	clrf	(btemp+11)^0,c
 14915                           
 14916                           ;stkvar	LerADC@temp @ sp[(-2)+0]
 14917  0062A8  0EFE               	movlw	-2
 14918  0062AA  C06C  FFE3         	movff	btemp+10,plusw1
 14919  0062AE  0EFF               	movlw	-1
 14920  0062B0  C06D  FFE3         	movff	btemp+11,plusw1
 14921  0062B4                     
 14922                           ;adc.h: 35: temp = ((temp << 8)| ADRESL );
 14923                           ;stkvar	LerADC@temp @ sp[(-2)+0]
 14924  0062B4  0EFE               	movlw	-2
 14925  0062B6  CFE3 F06C          	movff	plusw1,btemp+10
 14926  0062BA  0EFF               	movlw	-1
 14927  0062BC  CFE3 F06D          	movff	plusw1,btemp+11
 14928  0062C0  C06C  F06D         	movff	btemp+10,btemp+11
 14929  0062C4  6A6C               	clrf	(btemp+10)^0,c
 14930  0062C6  50C3               	movf	195,w,c	;volatile
 14931  0062C8  126C               	iorwf	(btemp+10)^0,f,c
 14932  0062CA  0E00               	movlw	0
 14933  0062CC  126D               	iorwf	(btemp+11)^0,f,c
 14934                           
 14935                           ;stkvar	LerADC@temp @ sp[(-2)+0]
 14936  0062CE  0EFE               	movlw	-2
 14937  0062D0  C06C  FFE3         	movff	btemp+10,plusw1
 14938  0062D4  0EFF               	movlw	-1
 14939  0062D6  C06D  FFE3         	movff	btemp+11,plusw1
 14940  0062DA                     
 14941                           ;adc.h: 37: return temp;
 14942                           ;stkvar	LerADC@temp @ sp[(-2)+0]
 14943  0062DA  0EFE               	movlw	-2
 14944  0062DC  CFE3 F062          	movff	plusw1,btemp
 14945  0062E0  0EFF               	movlw	-1
 14946  0062E2  CFE3 F063          	movff	plusw1,btemp+1
 14947  0062E6                     
 14948                           ; _LerADC: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsiz
      +                          e = 0, vargsize = 0
 14949  0062E6  52E5               	movf	postdec1,f,c
 14950  0062E8  52E5               	movf	postdec1,f,c
 14951  0062EA  0012               	return		;funcret
 14952  0062EC                     __end_of_LerADC:
 14953                           	opt callstack 0
 14954                           
 14955 ;; *************** function _Lcd_Write_String *****************
 14956 ;; Defined at:
 14957 ;;		line 97 in file "lcd.h"
 14958 ;; Parameters:    Size  Location     Type
 14959 ;;  a               2  [STACK] PTR unsigned char 
 14960 ;;		 -> task_lcd@s(16), STR_1(10), 
 14961 ;; Auto vars:     Size  Location     Type
 14962 ;;  i               2  [STACK] int 
 14963 ;; Return value:  Size  Location     Type
 14964 ;;                  1  [STACK] void 
 14965 ;; Registers used:
 14966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 14967 ;; Tracked objects:
 14968 ;;		On entry : 0/0
 14969 ;;		On exit  : 0/0
 14970 ;;		Unchanged: 0/0
 14971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14972 ;;      Params:         0       0       0       0       0       0       0
 14973 ;;      Locals:         0       0       0       0       0       0       0
 14974 ;;      Temps:          0       0       0       0       0       0       0
 14975 ;;      Totals:         0       0       0       0       0       0       0
 14976 ;;Total ram usage:        0 bytes
 14977 ;; Hardware stack levels used:    1
 14978 ;; Hardware stack levels required when called:    6
 14979 ;; This function calls:
 14980 ;;		_Lcd_Write_Char
 14981 ;; This function is called by:
 14982 ;;		_task_lcd
 14983 ;; This function uses a reentrant model
 14984 ;;
 14985                           
 14986                           	psect	text45
 14987  005AE4                     __ptext45:
 14988                           	opt callstack 0
 14989  005AE4                     _Lcd_Write_String:
 14990                           	opt callstack 0
 14991                           
 14992                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14993  005AE4  52E6               	movf	postinc1,f,c
 14994  005AE6  52E6               	movf	postinc1,f,c
 14995  005AE8                     
 14996                           ;lcd.h: 99: int i;;lcd.h: 100: for(i=0;a[i]!='\0';i++)
 14997                           ;stkvar	Lcd_Write_String@i @ sp[(-2)+0]
 14998  005AE8  0EFE               	movlw	-2
 14999  005AEA  6AE3               	clrf	plusw1,c
 15000  005AEC  0EFF               	movlw	-1
 15001  005AEE  6AE3               	clrf	plusw1,c
 15002  005AF0  EFA8  F02D         	goto	l3626
 15003  005AF4                     l3622:
 15004                           
 15005                           ;lcd.h: 101: Lcd_Write_Char(a[i]);
 15006                           ;stkvar	Lcd_Write_String@i @ sp[(-2)+0]
 15007                           ;stkvar	Lcd_Write_String@a @ sp[(-2)+-2]
 15008  005AF4  0EFC               	movlw	-4
 15009  005AF6  CFE3 F06C          	movff	plusw1,btemp+10
 15010  005AFA  0EFD               	movlw	-3
 15011  005AFC  CFE3 F06D          	movff	plusw1,btemp+11
 15012  005B00  0EFE               	movlw	-2
 15013  005B02  50E3               	movf	plusw1,w,c
 15014  005B04  266C               	addwf	(btemp+10)^0,f,c
 15015  005B06  0EFF               	movlw	-1
 15016  005B08  50E3               	movf	plusw1,w,c
 15017  005B0A  226D               	addwfc	(btemp+11)^0,f,c
 15018  005B0C  C06C  FFF6         	movff	btemp+10,tblptrl
 15019  005B10  C06D  FFF7         	movff	btemp+11,tblptrh
 15020  005B14  6AF8               	clrf	tblptru,c
 15021  005B16  0E05               	movlw	(high __ramtop+-1)
 15022  005B18  64F7               	cpfsgt	tblptrh,c
 15023  005B1A  D003               	bra	u313_27
 15024  005B1C  0008               	tblrd		*
 15025  005B1E  50F5               	movf	tablat,w,c
 15026  005B20  D005               	bra	u313_20
 15027  005B22                     u313_27:
 15028  005B22  CFF6 FFE9          	movff	tblptrl,fsr0l
 15029  005B26  CFF7 FFEA          	movff	tblptrh,fsr0h
 15030  005B2A  50EF               	movf	indf0,w,c
 15031  005B2C                     u313_20:
 15032  005B2C  6EE6               	movwf	postinc1,c
 15033  005B2E  EC17  F031         	call	_Lcd_Write_Char	;wreg free
 15034  005B32                     
 15035                           ;stkvar	Lcd_Write_String@i @ sp[(-2)+0]
 15036  005B32  0EFE               	movlw	-2
 15037  005B34  50E3               	movf	plusw1,w,c
 15038  005B36  0F01               	addlw	1
 15039  005B38  6E62               	movwf	btemp^0,c
 15040  005B3A  0EFE               	movlw	-2
 15041  005B3C  C062  FFE3         	movff	btemp,plusw1
 15042  005B40  6A62               	clrf	btemp^0,c
 15043  005B42  0EFF               	movlw	-1
 15044  005B44  50E3               	movf	plusw1,w,c
 15045  005B46  2062               	addwfc	btemp^0,w,c
 15046  005B48  6E62               	movwf	btemp^0,c
 15047  005B4A  0EFF               	movlw	-1
 15048  005B4C  C062  FFE3         	movff	btemp,plusw1
 15049  005B50                     l3626:
 15050                           
 15051                           ;stkvar	Lcd_Write_String@i @ sp[(-2)+0]
 15052                           ;stkvar	Lcd_Write_String@a @ sp[(-2)+-2]
 15053  005B50  0EFC               	movlw	-4
 15054  005B52  CFE3 F06C          	movff	plusw1,btemp+10
 15055  005B56  0EFD               	movlw	-3
 15056  005B58  CFE3 F06D          	movff	plusw1,btemp+11
 15057  005B5C  0EFE               	movlw	-2
 15058  005B5E  50E3               	movf	plusw1,w,c
 15059  005B60  266C               	addwf	(btemp+10)^0,f,c
 15060  005B62  0EFF               	movlw	-1
 15061  005B64  50E3               	movf	plusw1,w,c
 15062  005B66  226D               	addwfc	(btemp+11)^0,f,c
 15063  005B68  C06C  FFF6         	movff	btemp+10,tblptrl
 15064  005B6C  C06D  FFF7         	movff	btemp+11,tblptrh
 15065  005B70  6AF8               	clrf	tblptru,c
 15066  005B72  0E05               	movlw	(high __ramtop+-1)
 15067  005B74  64F7               	cpfsgt	tblptrh,c
 15068  005B76  D003               	bra	u314_27
 15069  005B78  0008               	tblrd		*
 15070  005B7A  50F5               	movf	tablat,w,c
 15071  005B7C  D005               	bra	u314_20
 15072  005B7E                     u314_27:
 15073  005B7E  CFF6 FFE9          	movff	tblptrl,fsr0l
 15074  005B82  CFF7 FFEA          	movff	tblptrh,fsr0h
 15075  005B86  50EF               	movf	indf0,w,c
 15076  005B88                     u314_20:
 15077  005B88  0900               	iorlw	0
 15078  005B8A  A4D8               	btfss	status,2,c
 15079  005B8C  EFCA  F02D         	goto	u315_21
 15080  005B90  EFCC  F02D         	goto	u315_20
 15081  005B94                     u315_21:
 15082  005B94  EF7A  F02D         	goto	l3622
 15083  005B98                     u315_20:
 15084  005B98                     
 15085                           ; _Lcd_Write_String: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 15086  005B98  52E5               	movf	postdec1,f,c
 15087  005B9A  52E5               	movf	postdec1,f,c
 15088  005B9C  52E5               	movf	postdec1,f,c
 15089  005B9E  52E5               	movf	postdec1,f,c
 15090  005BA0  0012               	return		;funcret
 15091  005BA2                     __end_of_Lcd_Write_String:
 15092                           	opt callstack 0
 15093                           
 15094 ;; *************** function _Lcd_Write_Char *****************
 15095 ;; Defined at:
 15096 ;;		line 81 in file "lcd.h"
 15097 ;; Parameters:    Size  Location     Type
 15098 ;;  a               1  [STACK] unsigned char 
 15099 ;; Auto vars:     Size  Location     Type
 15100 ;;  y               1  [STACK] unsigned char 
 15101 ;;  temp            1  [STACK] unsigned char 
 15102 ;; Return value:  Size  Location     Type
 15103 ;;                  1  [STACK] void 
 15104 ;; Registers used:
 15105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 15106 ;; Tracked objects:
 15107 ;;		On entry : 0/0
 15108 ;;		On exit  : 0/0
 15109 ;;		Unchanged: 0/0
 15110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15111 ;;      Params:         0       0       0       0       0       0       0
 15112 ;;      Locals:         0       0       0       0       0       0       0
 15113 ;;      Temps:          0       0       0       0       0       0       0
 15114 ;;      Totals:         0       0       0       0       0       0       0
 15115 ;;Total ram usage:        0 bytes
 15116 ;; Hardware stack levels used:    1
 15117 ;; Hardware stack levels required when called:    5
 15118 ;; This function calls:
 15119 ;;		_Lcd_Port
 15120 ;; This function is called by:
 15121 ;;		_Lcd_Write_String
 15122 ;; This function uses a reentrant model
 15123 ;;
 15124                           
 15125                           	psect	text46
 15126  00622E                     __ptext46:
 15127                           	opt callstack 0
 15128  00622E                     _Lcd_Write_Char:
 15129                           	opt callstack 0
 15130                           
 15131                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15132  00622E  52E6               	movf	postinc1,f,c
 15133  006230  52E6               	movf	postinc1,f,c
 15134  006232                     
 15135                           ;lcd.h: 83: char temp,y;;lcd.h: 84: temp = a&0x0F;
 15136                           ;stkvar	Lcd_Write_Char@a @ sp[(-2)+-1]
 15137  006232  0EFD               	movlw	-3
 15138  006234  CFE3 F06D          	movff	plusw1,btemp+11
 15139  006238  0E0F               	movlw	15
 15140  00623A  166D               	andwf	(btemp+11)^0,f,c
 15141                           
 15142                           ;stkvar	Lcd_Write_Char@temp @ sp[(-2)+1]
 15143  00623C  0EFF               	movlw	-1
 15144  00623E  C06D  FFE3         	movff	btemp+11,plusw1
 15145                           
 15146                           ;lcd.h: 85: y = a&0xF0;
 15147                           ;stkvar	Lcd_Write_Char@a @ sp[(-2)+-1]
 15148  006242  0EFD               	movlw	-3
 15149  006244  CFE3 F06D          	movff	plusw1,btemp+11
 15150  006248  0EF0               	movlw	240
 15151  00624A  166D               	andwf	(btemp+11)^0,f,c
 15152                           
 15153                           ;stkvar	Lcd_Write_Char@y @ sp[(-2)+0]
 15154  00624C  0EFE               	movlw	-2
 15155  00624E  C06D  FFE3         	movff	btemp+11,plusw1
 15156  006252                     
 15157                           ;lcd.h: 86: RB6 = 1;
 15158  006252  8C81               	bsf	3969,6,c	;volatile
 15159                           
 15160                           ;lcd.h: 87: Lcd_Port(y>>4);
 15161                           ;stkvar	Lcd_Write_Char@y @ sp[(-2)+0]
 15162  006254  0EFE               	movlw	-2
 15163  006256  CFE3 F06D          	movff	plusw1,btemp+11
 15164  00625A  386D               	swapf	(btemp+11)^0,w,c
 15165  00625C  0B0F               	andlw	15
 15166  00625E  6EE6               	movwf	postinc1,c
 15167  006260  EC81  F030         	call	_Lcd_Port	;wreg free
 15168  006264                     
 15169                           ;lcd.h: 88: RB5 = 1;
 15170  006264  8A81               	bsf	3969,5,c	;volatile
 15171  006266                     
 15172                           ;lcd.h: 89: _delay((unsigned long)((40)*(4000000/4000000.0)));
 15173  006266  0E0D               	movlw	13
 15174  006268                     u346_27:
 15175  006268  2EE8               	decfsz	wreg,f,c
 15176  00626A  D7FE               	bra	u346_27
 15177  00626C  F000               	nop	
 15178  00626E                     
 15179                           ;lcd.h: 90: RB5 = 0;
 15180  00626E  9A81               	bcf	3969,5,c	;volatile
 15181  006270                     
 15182                           ;lcd.h: 91: Lcd_Port(temp);
 15183                           ;stkvar	Lcd_Write_Char@temp @ sp[(-2)+1]
 15184  006270  0EFF               	movlw	-1
 15185  006272  50E3               	movf	plusw1,w,c
 15186  006274  6EE6               	movwf	postinc1,c
 15187  006276  EC81  F030         	call	_Lcd_Port	;wreg free
 15188  00627A                     
 15189                           ;lcd.h: 92: RB5 = 1;
 15190  00627A  8A81               	bsf	3969,5,c	;volatile
 15191  00627C                     
 15192                           ;lcd.h: 93: _delay((unsigned long)((40)*(4000000/4000000.0)));
 15193  00627C  0E0D               	movlw	13
 15194  00627E                     u347_27:
 15195  00627E  2EE8               	decfsz	wreg,f,c
 15196  006280  D7FE               	bra	u347_27
 15197  006282  F000               	nop	
 15198  006284                     
 15199                           ;lcd.h: 94: RB5 = 0;
 15200  006284  9A81               	bcf	3969,5,c	;volatile
 15201  006286                     
 15202                           ; _Lcd_Write_Char: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 15203  006286  52E5               	movf	postdec1,f,c
 15204  006288  52E5               	movf	postdec1,f,c
 15205  00628A  52E5               	movf	postdec1,f,c
 15206  00628C  0012               	return		;funcret
 15207  00628E                     __end_of_Lcd_Write_Char:
 15208                           	opt callstack 0
 15209                           
 15210 ;; *************** function _Lcd_Set_Cursor *****************
 15211 ;; Defined at:
 15212 ;;		line 41 in file "lcd.h"
 15213 ;; Parameters:    Size  Location     Type
 15214 ;;  a               1  [STACK] unsigned char 
 15215 ;;  b               1  [STACK] unsigned char 
 15216 ;; Auto vars:     Size  Location     Type
 15217 ;;  temp            1  [STACK] unsigned char 
 15218 ;;  y               1  [STACK] unsigned char 
 15219 ;;  z               1  [STACK] unsigned char 
 15220 ;; Return value:  Size  Location     Type
 15221 ;;                  1  [STACK] void 
 15222 ;; Registers used:
 15223 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 15224 ;; Tracked objects:
 15225 ;;		On entry : 0/0
 15226 ;;		On exit  : 0/0
 15227 ;;		Unchanged: 0/0
 15228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15229 ;;      Params:         0       0       0       0       0       0       0
 15230 ;;      Locals:         0       0       0       0       0       0       0
 15231 ;;      Temps:          0       0       0       0       0       0       0
 15232 ;;      Totals:         0       0       0       0       0       0       0
 15233 ;;Total ram usage:        0 bytes
 15234 ;; Hardware stack levels used:    1
 15235 ;; Hardware stack levels required when called:    6
 15236 ;; This function calls:
 15237 ;;		_Lcd_Cmd
 15238 ;; This function is called by:
 15239 ;;		_task_lcd
 15240 ;; This function uses a reentrant model
 15241 ;;
 15242                           
 15243                           	psect	text47
 15244  005E46                     __ptext47:
 15245                           	opt callstack 0
 15246  005E46                     _Lcd_Set_Cursor:
 15247                           	opt callstack 0
 15248                           
 15249                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15250  005E46  52E6               	movf	postinc1,f,c
 15251  005E48  52E6               	movf	postinc1,f,c
 15252  005E4A  52E6               	movf	postinc1,f,c
 15253  005E4C                     
 15254                           ;lcd.h: 43: char temp,z,y;;lcd.h: 44: if(a == 1)
 15255                           ;stkvar	Lcd_Set_Cursor@a @ sp[(-3)+-1]
 15256  005E4C  0EFC               	movlw	-4
 15257  005E4E  04E3               	decf	plusw1,w,c
 15258  005E50  A4D8               	btfss	status,2,c
 15259  005E52  EF2D  F02F         	goto	u311_21
 15260  005E56  EF2F  F02F         	goto	u311_20
 15261  005E5A                     u311_21:
 15262  005E5A  EF55  F02F         	goto	l3608
 15263  005E5E                     u311_20:
 15264  005E5E                     
 15265                           ;lcd.h: 45: {;lcd.h: 46: temp = 0x80 + b - 1;
 15266  005E5E  0E7F               	movlw	127
 15267  005E60  6E6D               	movwf	(btemp+11)^0,c
 15268                           
 15269                           ;stkvar	Lcd_Set_Cursor@b @ sp[(-3)+-2]
 15270  005E62  0EFB               	movlw	-5
 15271  005E64  50E3               	movf	plusw1,w,c
 15272  005E66  246D               	addwf	(btemp+11)^0,w,c
 15273  005E68  6E6C               	movwf	(btemp+10)^0,c
 15274                           
 15275                           ;stkvar	Lcd_Set_Cursor@temp @ sp[(-3)+0]
 15276  005E6A  0EFD               	movlw	-3
 15277  005E6C  C06C  FFE3         	movff	btemp+10,plusw1
 15278  005E70                     l3600:
 15279                           
 15280                           ;lcd.h: 47: z = temp>>4;
 15281                           ;stkvar	Lcd_Set_Cursor@temp @ sp[(-3)+0]
 15282  005E70  0EFD               	movlw	-3
 15283  005E72  CFE3 F06D          	movff	plusw1,btemp+11
 15284  005E76  3A6D               	swapf	(btemp+11)^0,f,c
 15285  005E78  0E0F               	movlw	15
 15286  005E7A  166D               	andwf	(btemp+11)^0,f,c
 15287                           
 15288                           ;stkvar	Lcd_Set_Cursor@z @ sp[(-3)+2]
 15289  005E7C  0EFF               	movlw	-1
 15290  005E7E  C06D  FFE3         	movff	btemp+11,plusw1
 15291  005E82                     
 15292                           ;lcd.h: 48: y = temp & 0x0F;
 15293                           ;stkvar	Lcd_Set_Cursor@temp @ sp[(-3)+0]
 15294  005E82  0EFD               	movlw	-3
 15295  005E84  CFE3 F06D          	movff	plusw1,btemp+11
 15296  005E88  0E0F               	movlw	15
 15297  005E8A  166D               	andwf	(btemp+11)^0,f,c
 15298                           
 15299                           ;stkvar	Lcd_Set_Cursor@y @ sp[(-3)+1]
 15300  005E8C  0EFE               	movlw	-2
 15301  005E8E  C06D  FFE3         	movff	btemp+11,plusw1
 15302  005E92                     
 15303                           ;lcd.h: 49: Lcd_Cmd(z);
 15304                           ;stkvar	Lcd_Set_Cursor@z @ sp[(-3)+2]
 15305  005E92  0EFF               	movlw	-1
 15306  005E94  50E3               	movf	plusw1,w,c
 15307  005E96  6EE6               	movwf	postinc1,c
 15308  005E98  ECE5  F032         	call	_Lcd_Cmd	;wreg free
 15309  005E9C                     
 15310                           ;lcd.h: 50: Lcd_Cmd(y);
 15311                           ;stkvar	Lcd_Set_Cursor@y @ sp[(-3)+1]
 15312  005E9C  0EFE               	movlw	-2
 15313  005E9E  50E3               	movf	plusw1,w,c
 15314  005EA0  6EE6               	movwf	postinc1,c
 15315  005EA2  ECE5  F032         	call	_Lcd_Cmd	;wreg free
 15316                           
 15317                           ;lcd.h: 51: }
 15318  005EA6  EF6C  F02F         	goto	l243
 15319  005EAA                     l3608:
 15320                           
 15321                           ;lcd.h: 52: else if(a == 2)
 15322                           ;stkvar	Lcd_Set_Cursor@a @ sp[(-3)+-1]
 15323  005EAA  0EFC               	movlw	-4
 15324  005EAC  CFE3 F062          	movff	plusw1,btemp
 15325  005EB0  0E02               	movlw	2
 15326  005EB2  1862               	xorwf	btemp^0,w,c
 15327  005EB4  A4D8               	btfss	status,2,c
 15328  005EB6  EF5F  F02F         	goto	u312_21
 15329  005EBA  EF61  F02F         	goto	u312_20
 15330  005EBE                     u312_21:
 15331  005EBE  EF6C  F02F         	goto	l243
 15332  005EC2                     u312_20:
 15333  005EC2                     
 15334                           ;lcd.h: 53: {;lcd.h: 54: temp = 0xC0 + b - 1;
 15335  005EC2  0EBF               	movlw	191
 15336  005EC4  6E6D               	movwf	(btemp+11)^0,c
 15337                           
 15338                           ;stkvar	Lcd_Set_Cursor@b @ sp[(-3)+-2]
 15339  005EC6  0EFB               	movlw	-5
 15340  005EC8  50E3               	movf	plusw1,w,c
 15341  005ECA  246D               	addwf	(btemp+11)^0,w,c
 15342  005ECC  6E6C               	movwf	(btemp+10)^0,c
 15343                           
 15344                           ;stkvar	Lcd_Set_Cursor@temp @ sp[(-3)+0]
 15345  005ECE  0EFD               	movlw	-3
 15346  005ED0  C06C  FFE3         	movff	btemp+10,plusw1
 15347  005ED4  EF38  F02F         	goto	l3600
 15348  005ED8                     l243:
 15349                           
 15350                           ; _Lcd_Set_Cursor: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
 15351  005ED8  0EFB               	movlw	251
 15352  005EDA  26E1               	addwf	fsr1l,f,c
 15353  005EDC  0EFF               	movlw	255
 15354  005EDE  22E2               	addwfc	fsr1h,f,c
 15355  005EE0  0012               	return		;funcret
 15356  005EE2                     __end_of_Lcd_Set_Cursor:
 15357                           	opt callstack 0
 15358                           
 15359 ;; *************** function _Lcd_Clear *****************
 15360 ;; Defined at:
 15361 ;;		line 35 in file "lcd.h"
 15362 ;; Parameters:    Size  Location     Type
 15363 ;;		None
 15364 ;; Auto vars:     Size  Location     Type
 15365 ;;		None
 15366 ;; Return value:  Size  Location     Type
 15367 ;;                  2  [STACK] int 
 15368 ;; Registers used:
 15369 ;;		wreg, fsr1l, fsr1h, status,2, btemp
 15370 ;; Tracked objects:
 15371 ;;		On entry : 0/0
 15372 ;;		On exit  : 0/0
 15373 ;;		Unchanged: 0/0
 15374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15375 ;;      Params:         0       0       0       0       0       0       0
 15376 ;;      Locals:         0       0       0       0       0       0       0
 15377 ;;      Temps:          0       0       0       0       0       0       0
 15378 ;;      Totals:         0       0       0       0       0       0       0
 15379 ;;Total ram usage:        0 bytes
 15380 ;; Hardware stack levels used:    1
 15381 ;; Hardware stack levels required when called:    6
 15382 ;; This function calls:
 15383 ;;		_Lcd_Cmd
 15384 ;; This function is called by:
 15385 ;;		_task_lcd
 15386 ;; This function uses a reentrant model
 15387 ;;
 15388                           
 15389                           	psect	text48
 15390  006612                     __ptext48:
 15391                           	opt callstack 0
 15392  006612                     _Lcd_Clear:
 15393                           	opt callstack 18
 15394  006612                     
 15395                           ;lcd.h: 37: Lcd_Cmd(0);
 15396  006612  0E00               	movlw	0
 15397  006614  6EE6               	movwf	postinc1,c
 15398  006616  ECE5  F032         	call	_Lcd_Cmd	;wreg free
 15399                           
 15400                           ;lcd.h: 38: Lcd_Cmd(1);
 15401  00661A  0E01               	movlw	1
 15402  00661C  6EE6               	movwf	postinc1,c
 15403  00661E  ECE5  F032         	call	_Lcd_Cmd	;wreg free
 15404  006622                     
 15405                           ; _Lcd_Clear: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 15406  006622  0012               	return		;funcret
 15407  006624                     __end_of_Lcd_Clear:
 15408                           	opt callstack 0
 15409                           
 15410 ;; *************** function _task_um *****************
 15411 ;; Defined at:
 15412 ;;		line 59 in file "user_tasks.c"
 15413 ;; Parameters:    Size  Location     Type
 15414 ;;		None
 15415 ;; Auto vars:     Size  Location     Type
 15416 ;;  dado            1    0        unsigned char 
 15417 ;; Return value:  Size  Location     Type
 15418 ;;                  1  [STACK] void 
 15419 ;; Registers used:
 15420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
 15421 ;; Tracked objects:
 15422 ;;		On entry : 0/0
 15423 ;;		On exit  : 0/0
 15424 ;;		Unchanged: 0/0
 15425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15426 ;;      Params:         0       0       0       0       0       0       0
 15427 ;;      Locals:         0       0       0       0       0       0       0
 15428 ;;      Temps:          0       0       0       0       0       0       0
 15429 ;;      Totals:         0       0       0       0       0       0       0
 15430 ;;Total ram usage:        0 bytes
 15431 ;; Hardware stack levels used:    1
 15432 ;; Hardware stack levels required when called:    8
 15433 ;; This function calls:
 15434 ;;		_sem_post
 15435 ;;		_sem_wait
 15436 ;; This function is called by:
 15437 ;;		_main
 15438 ;; This function uses a reentrant model
 15439 ;;
 15440                           
 15441                           	psect	text49
 15442  006528                     __ptext49:
 15443                           	opt callstack 0
 15444  006528                     _task_um:
 15445                           	opt callstack 17
 15446  006528                     l290:
 15447  006528                     
 15448                           ;user_tasks.c: 65: sem_wait(&sem2);
 15449  006528  0E17               	movlw	low _sem2
 15450  00652A  6EE6               	movwf	postinc1,c
 15451  00652C  0E00               	movlw	high _sem2
 15452  00652E  6EE6               	movwf	postinc1,c
 15453  006530  EC32  F02B         	call	_sem_wait	;wreg free
 15454  006534                     
 15455                           ;user_tasks.c: 68: PORTDbits.RD0 = ~PORTDbits.RD0;
 15456  006534  B083               	btfsc	131,0,c	;volatile
 15457  006536  EF9F  F032         	goto	u283_21
 15458  00653A  EFA2  F032         	goto	u283_20
 15459  00653E                     u283_21:
 15460  00653E  0E01               	movlw	1
 15461  006540  EFA3  F032         	goto	u283_26
 15462  006544                     u283_20:
 15463  006544  0E00               	movlw	0
 15464  006546                     u283_26:
 15465  006546  0AFF               	xorlw	255
 15466  006548  6E6D               	movwf	(btemp+11)^0,c
 15467  00654A  5083               	movf	131,w,c	;volatile
 15468  00654C  186D               	xorwf	(btemp+11)^0,w,c
 15469  00654E  0BFE               	andlw	-2
 15470  006550  186D               	xorwf	(btemp+11)^0,w,c
 15471  006552  6E83               	movwf	131,c	;volatile
 15472  006554                     
 15473                           ;user_tasks.c: 71: sem_post(&sem2);
 15474  006554  0E17               	movlw	low _sem2
 15475  006556  6EE6               	movwf	postinc1,c
 15476  006558  0E00               	movlw	high _sem2
 15477  00655A  6EE6               	movwf	postinc1,c
 15478  00655C  EC3B  F028         	call	_sem_post	;wreg free
 15479  006560  EF94  F032         	goto	l290
 15480                           
 15481                           ; _task_um: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
 15482  006564  0012               	return		;funcret
 15483  006566                     __end_of_task_um:
 15484                           	opt callstack 0
 15485                           
 15486 ;; *************** function _task_dois *****************
 15487 ;; Defined at:
 15488 ;;		line 75 in file "user_tasks.c"
 15489 ;; Parameters:    Size  Location     Type
 15490 ;;		None
 15491 ;; Auto vars:     Size  Location     Type
 15492 ;;  dado            1    0        unsigned char 
 15493 ;; Return value:  Size  Location     Type
 15494 ;;                  1  [STACK] void 
 15495 ;; Registers used:
 15496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
 15497 ;; Tracked objects:
 15498 ;;		On entry : 0/0
 15499 ;;		On exit  : 0/0
 15500 ;;		Unchanged: 0/0
 15501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15502 ;;      Params:         0       0       0       0       0       0       0
 15503 ;;      Locals:         0       0       0       0       0       0       0
 15504 ;;      Temps:          0       0       0       0       0       0       0
 15505 ;;      Totals:         0       0       0       0       0       0       0
 15506 ;;Total ram usage:        0 bytes
 15507 ;; Hardware stack levels used:    1
 15508 ;; Hardware stack levels required when called:    8
 15509 ;; This function calls:
 15510 ;;		_sem_post
 15511 ;;		_sem_wait
 15512 ;; This function is called by:
 15513 ;;		_main
 15514 ;; This function uses a reentrant model
 15515 ;;
 15516                           
 15517                           	psect	text50
 15518  0064E8                     __ptext50:
 15519                           	opt callstack 0
 15520  0064E8                     _task_dois:
 15521                           	opt callstack 17
 15522  0064E8                     l296:
 15523  0064E8                     
 15524                           ;user_tasks.c: 81: sem_wait(&sem2);
 15525  0064E8  0E17               	movlw	low _sem2
 15526  0064EA  6EE6               	movwf	postinc1,c
 15527  0064EC  0E00               	movlw	high _sem2
 15528  0064EE  6EE6               	movwf	postinc1,c
 15529  0064F0  EC32  F02B         	call	_sem_wait	;wreg free
 15530  0064F4                     
 15531                           ;user_tasks.c: 82: PORTDbits.RD1 = ~PORTDbits.RD1;
 15532  0064F4  B283               	btfsc	131,1,c	;volatile
 15533  0064F6  EF7F  F032         	goto	u284_21
 15534  0064FA  EF82  F032         	goto	u284_20
 15535  0064FE                     u284_21:
 15536  0064FE  0E01               	movlw	1
 15537  006500  EF83  F032         	goto	u284_26
 15538  006504                     u284_20:
 15539  006504  0E00               	movlw	0
 15540  006506                     u284_26:
 15541  006506  0AFF               	xorlw	255
 15542  006508  6E6D               	movwf	(btemp+11)^0,c
 15543  00650A  466D               	rlncf	(btemp+11)^0,f,c
 15544  00650C  5083               	movf	131,w,c	;volatile
 15545  00650E  186D               	xorwf	(btemp+11)^0,w,c
 15546  006510  0BFD               	andlw	-3
 15547  006512  186D               	xorwf	(btemp+11)^0,w,c
 15548  006514  6E83               	movwf	131,c	;volatile
 15549  006516                     
 15550                           ;user_tasks.c: 85: sem_post(&sem2);
 15551  006516  0E17               	movlw	low _sem2
 15552  006518  6EE6               	movwf	postinc1,c
 15553  00651A  0E00               	movlw	high _sem2
 15554  00651C  6EE6               	movwf	postinc1,c
 15555  00651E  EC3B  F028         	call	_sem_post	;wreg free
 15556  006522  EF74  F032         	goto	l296
 15557                           
 15558                           ; _task_dois: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 15559  006526  0012               	return		;funcret
 15560  006528                     __end_of_task_dois:
 15561                           	opt callstack 0
 15562                           
 15563 ;; *************** function _task_tres *****************
 15564 ;; Defined at:
 15565 ;;		line 89 in file "user_tasks.c"
 15566 ;; Parameters:    Size  Location     Type
 15567 ;;		None
 15568 ;; Auto vars:     Size  Location     Type
 15569 ;;  dado            1    0        unsigned char 
 15570 ;; Return value:  Size  Location     Type
 15571 ;;                  1  [STACK] void 
 15572 ;; Registers used:
 15573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
 15574 ;; Tracked objects:
 15575 ;;		On entry : 0/0
 15576 ;;		On exit  : 0/0
 15577 ;;		Unchanged: 0/0
 15578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15579 ;;      Params:         0       0       0       0       0       0       0
 15580 ;;      Locals:         0       0       0       0       0       0       0
 15581 ;;      Temps:          0       0       0       0       0       0       0
 15582 ;;      Totals:         0       0       0       0       0       0       0
 15583 ;;Total ram usage:        0 bytes
 15584 ;; Hardware stack levels used:    1
 15585 ;; Hardware stack levels required when called:    8
 15586 ;; This function calls:
 15587 ;;		_sem_post
 15588 ;;		_sem_wait
 15589 ;; This function is called by:
 15590 ;;		_main
 15591 ;; This function uses a reentrant model
 15592 ;;
 15593                           
 15594                           	psect	text51
 15595  006466                     __ptext51:
 15596                           	opt callstack 0
 15597  006466                     _task_tres:
 15598                           	opt callstack 17
 15599  006466                     l302:
 15600  006466                     
 15601                           ;user_tasks.c: 95: sem_wait(&sem2);
 15602  006466  0E17               	movlw	low _sem2
 15603  006468  6EE6               	movwf	postinc1,c
 15604  00646A  0E00               	movlw	high _sem2
 15605  00646C  6EE6               	movwf	postinc1,c
 15606  00646E  EC32  F02B         	call	_sem_wait	;wreg free
 15607  006472                     
 15608                           ;user_tasks.c: 96: PORTDbits.RD2 = ~PORTDbits.RD2;
 15609  006472  B483               	btfsc	131,2,c	;volatile
 15610  006474  EF3E  F032         	goto	u285_21
 15611  006478  EF41  F032         	goto	u285_20
 15612  00647C                     u285_21:
 15613  00647C  0E01               	movlw	1
 15614  00647E  EF42  F032         	goto	u285_26
 15615  006482                     u285_20:
 15616  006482  0E00               	movlw	0
 15617  006484                     u285_26:
 15618  006484  0AFF               	xorlw	255
 15619  006486  6E6D               	movwf	(btemp+11)^0,c
 15620  006488  466D               	rlncf	(btemp+11)^0,f,c
 15621  00648A  466D               	rlncf	(btemp+11)^0,f,c
 15622  00648C  5083               	movf	131,w,c	;volatile
 15623  00648E  186D               	xorwf	(btemp+11)^0,w,c
 15624  006490  0BFB               	andlw	-5
 15625  006492  186D               	xorwf	(btemp+11)^0,w,c
 15626  006494  6E83               	movwf	131,c	;volatile
 15627  006496                     
 15628                           ;user_tasks.c: 99: sem_post(&sem1);
 15629  006496  0E29               	movlw	low _sem1
 15630  006498  6EE6               	movwf	postinc1,c
 15631  00649A  0E00               	movlw	high _sem1
 15632  00649C  6EE6               	movwf	postinc1,c
 15633  00649E  EC3B  F028         	call	_sem_post	;wreg free
 15634  0064A2  EF33  F032         	goto	l302
 15635                           
 15636                           ; _task_tres: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 15637  0064A6  0012               	return		;funcret
 15638  0064A8                     __end_of_task_tres:
 15639                           	opt callstack 0
 15640                           
 15641 ;; *************** function _task_idle *****************
 15642 ;; Defined at:
 15643 ;;		line 112 in file "kernel.c"
 15644 ;; Parameters:    Size  Location     Type
 15645 ;;		None
 15646 ;; Auto vars:     Size  Location     Type
 15647 ;;		None
 15648 ;; Return value:  Size  Location     Type
 15649 ;;                  1  [STACK] void 
 15650 ;; Registers used:
 15651 ;;		wreg, status,2, status,0, btemp+11
 15652 ;; Tracked objects:
 15653 ;;		On entry : 0/0
 15654 ;;		On exit  : 0/0
 15655 ;;		Unchanged: 0/0
 15656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15657 ;;      Params:         0       0       0       0       0       0       0
 15658 ;;      Locals:         0       0       0       0       0       0       0
 15659 ;;      Temps:          0       0       0       0       0       0       0
 15660 ;;      Totals:         0       0       0       0       0       0       0
 15661 ;;Total ram usage:        0 bytes
 15662 ;; Hardware stack levels used:    1
 15663 ;; Hardware stack levels required when called:    4
 15664 ;; This function calls:
 15665 ;;		Nothing
 15666 ;; This function is called by:
 15667 ;;		_os_config
 15668 ;; This function uses a reentrant model
 15669 ;;
 15670                           
 15671                           	psect	text52
 15672  00659C                     __ptext52:
 15673                           	opt callstack 0
 15674  00659C                     _task_idle:
 15675                           	opt callstack 21
 15676  00659C                     l105:
 15677  00659C                     
 15678                           ;kernel.c: 114: PORTDbits.RD3 = ~PORTDbits.RD3;
 15679  00659C  B683               	btfsc	131,3,c	;volatile
 15680  00659E  EFD3  F032         	goto	u273_21
 15681  0065A2  EFD6  F032         	goto	u273_20
 15682  0065A6                     u273_21:
 15683  0065A6  0E01               	movlw	1
 15684  0065A8  EFD7  F032         	goto	u273_26
 15685  0065AC                     u273_20:
 15686  0065AC  0E00               	movlw	0
 15687  0065AE                     u273_26:
 15688  0065AE  0AFF               	xorlw	255
 15689  0065B0  6E6D               	movwf	(btemp+11)^0,c
 15690  0065B2  466D               	rlncf	(btemp+11)^0,f,c
 15691  0065B4  466D               	rlncf	(btemp+11)^0,f,c
 15692  0065B6  466D               	rlncf	(btemp+11)^0,f,c
 15693  0065B8  5083               	movf	131,w,c	;volatile
 15694  0065BA  186D               	xorwf	(btemp+11)^0,w,c
 15695  0065BC  0BF7               	andlw	-9
 15696  0065BE  186D               	xorwf	(btemp+11)^0,w,c
 15697  0065C0  6E83               	movwf	131,c	;volatile
 15698  0065C2                     
 15699                           ;kernel.c: 115: __nop();
 15700  0065C2  F000               	nop	
 15701  0065C4  EFCE  F032         	goto	l105
 15702                           
 15703                           ; _task_idle: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 15704  0065C8  0012               	return		;funcret
 15705  0065CA                     __end_of_task_idle:
 15706                           	opt callstack 0
 15707                           
 15708 ;; *************** function _task_m1 *****************
 15709 ;; Defined at:
 15710 ;;		line 148 in file "user_tasks.c"
 15711 ;; Parameters:    Size  Location     Type
 15712 ;;		None
 15713 ;; Auto vars:     Size  Location     Type
 15714 ;;  dado            1   14[COMRAM] unsigned char 
 15715 ;; Return value:  Size  Location     Type
 15716 ;;                  1    wreg      void 
 15717 ;; Registers used:
 15718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
 15719 ;; Tracked objects:
 15720 ;;		On entry : 0/0
 15721 ;;		On exit  : 0/0
 15722 ;;		Unchanged: 0/0
 15723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15724 ;;      Params:         0       0       0       0       0       0       0
 15725 ;;      Locals:         1       0       0       0       0       0       0
 15726 ;;      Temps:          0       0       0       0       0       0       0
 15727 ;;      Totals:         1       0       0       0       0       0       0
 15728 ;;Total ram usage:        1 bytes
 15729 ;; Hardware stack levels used:    1
 15730 ;; Hardware stack levels required when called:    8
 15731 ;; This function calls:
 15732 ;;		_pipe_read
 15733 ;;		_sem_post
 15734 ;;		_sem_wait
 15735 ;; This function is called by:
 15736 ;;		Interrupt level 1
 15737 ;; This function uses a non-reentrant model
 15738 ;;
 15739                           
 15740                           	psect	text53
 15741  006166                     __ptext53:
 15742                           	opt callstack 0
 15743  006166                     _task_m1:
 15744                           	opt callstack 17
 15745  006166                     l317:
 15746  006166                     
 15747                           ;user_tasks.c: 151: sem_wait(&sem3);
 15748  006166  0E05               	movlw	low _sem3
 15749  006168  6EE6               	movwf	postinc1,c
 15750  00616A  0E00               	movlw	high _sem3
 15751  00616C  6EE6               	movwf	postinc1,c
 15752  00616E  EC32  F02B         	call	_sem_wait	;wreg free
 15753                           
 15754                           ;user_tasks.c: 153: pipe_read(&msg1, &dado);
 15755  006172  0E5D               	movlw	low task_m1@dado
 15756  006174  6EE6               	movwf	postinc1,c
 15757  006176  0E00               	movlw	high task_m1@dado
 15758  006178  6EE6               	movwf	postinc1,c
 15759  00617A  0E45               	movlw	low _msg1
 15760  00617C  6EE6               	movwf	postinc1,c
 15761  00617E  0E00               	movlw	high _msg1
 15762  006180  6EE6               	movwf	postinc1,c
 15763  006182  EC53  F023         	call	_pipe_read	;wreg free
 15764  006186                     
 15765                           ;user_tasks.c: 154: if (dado == '0' || dado == '2'){
 15766  006186  0E30               	movlw	48
 15767  006188  185D               	xorwf	task_m1@dado^0,w,c
 15768  00618A  B4D8               	btfsc	status,2,c
 15769  00618C  EFCA  F030         	goto	u291_21
 15770  006190  EFCC  F030         	goto	u291_20
 15771  006194                     u291_21:
 15772  006194  EFD5  F030         	goto	l320
 15773  006198                     u291_20:
 15774  006198  0E32               	movlw	50
 15775  00619A  185D               	xorwf	task_m1@dado^0,w,c
 15776  00619C  A4D8               	btfss	status,2,c
 15777  00619E  EFD3  F030         	goto	u292_21
 15778  0061A2  EFD5  F030         	goto	u292_20
 15779  0061A6                     u292_21:
 15780  0061A6  EFDC  F030         	goto	l318
 15781  0061AA                     u292_20:
 15782  0061AA                     l320:
 15783                           
 15784                           ;user_tasks.c: 155: PORTCbits.RC0 = 0;
 15785  0061AA  9082               	bcf	130,0,c	;volatile
 15786  0061AC                     
 15787                           ;user_tasks.c: 156: sem_post(&sem1);
 15788  0061AC  0E29               	movlw	low _sem1
 15789  0061AE  6EE6               	movwf	postinc1,c
 15790  0061B0  0E00               	movlw	high _sem1
 15791  0061B2  6EE6               	movwf	postinc1,c
 15792  0061B4  EC3B  F028         	call	_sem_post	;wreg free
 15793  0061B8                     l318:
 15794                           
 15795                           ;user_tasks.c: 157: };user_tasks.c: 158: sem_post(&sem3);
 15796  0061B8  0E05               	movlw	low _sem3
 15797  0061BA  6EE6               	movwf	postinc1,c
 15798  0061BC  0E00               	movlw	high _sem3
 15799  0061BE  6EE6               	movwf	postinc1,c
 15800  0061C0  EC3B  F028         	call	_sem_post	;wreg free
 15801  0061C4  EFB3  F030         	goto	l317
 15802  0061C8  0012               	return		;funcret
 15803  0061CA                     __end_of_task_m1:
 15804                           	opt callstack 0
 15805                           
 15806 ;; *************** function _pipe_read *****************
 15807 ;; Defined at:
 15808 ;;		line 17 in file "pipe.c"
 15809 ;; Parameters:    Size  Location     Type
 15810 ;;  p               2  [STACK] PTR struct pipe
 15811 ;;		 -> msg2(10), msg1(10), 
 15812 ;;  data            2  [STACK] PTR unsigned char 
 15813 ;;		 -> task_m2@dado(1), task_m1@dado(1), 
 15814 ;; Auto vars:     Size  Location     Type
 15815 ;;		None
 15816 ;; Return value:  Size  Location     Type
 15817 ;;                  1  [STACK] void 
 15818 ;; Registers used:
 15819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
 15820 ;; Tracked objects:
 15821 ;;		On entry : 0/0
 15822 ;;		On exit  : 0/0
 15823 ;;		Unchanged: 0/0
 15824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15825 ;;      Params:         0       0       0       0       0       0       0
 15826 ;;      Locals:         0       0       0       0       0       0       0
 15827 ;;      Temps:          0       0       0       0       0       0       0
 15828 ;;      Totals:         0       0       0       0       0       0       0
 15829 ;;Total ram usage:        0 bytes
 15830 ;; Hardware stack levels used:    1
 15831 ;; Hardware stack levels required when called:    7
 15832 ;; This function calls:
 15833 ;;		_dispatcher
 15834 ;; This function is called by:
 15835 ;;		_task_m1
 15836 ;;		_task_m2
 15837 ;; This function uses a reentrant model
 15838 ;;
 15839                           
 15840                           	psect	text54
 15841  0046A6                     __ptext54:
 15842                           	opt callstack 0
 15843  0046A6                     _pipe_read:
 15844                           	opt callstack 17
 15845  0046A6                     
 15846                           ;pipe.c: 19: INTCONbits.GIE = 0;;
 15847  0046A6  9EF2               	bcf	242,7,c	;volatile
 15848  0046A8                     
 15849                           ;pipe.c: 21: if (p->pipe_size > 0) {
 15850                           ;stkvar	pipe_read@p @ sp[(0)+-2]
 15851  0046A8  0EFE               	movlw	-2
 15852  0046AA  CFE3 F06C          	movff	plusw1,btemp+10
 15853  0046AE  0EFF               	movlw	-1
 15854  0046B0  CFE3 F06D          	movff	plusw1,btemp+11
 15855  0046B4  0E02               	movlw	2
 15856  0046B6  246C               	addwf	(btemp+10)^0,w,c
 15857  0046B8  6ED9               	movwf	fsr2l,c
 15858  0046BA  0E00               	movlw	0
 15859  0046BC  206D               	addwfc	(btemp+11)^0,w,c
 15860  0046BE  6EDA               	movwf	fsr2h,c
 15861  0046C0  50DE               	movf	postinc2,w,c
 15862  0046C2  10DE               	iorwf	postinc2,w,c
 15863  0046C4  B4D8               	btfsc	status,2,c
 15864  0046C6  EF67  F023         	goto	u238_21
 15865  0046CA  EF69  F023         	goto	u238_20
 15866  0046CE                     u238_21:
 15867  0046CE  EF25  F024         	goto	l2990
 15868  0046D2                     u238_20:
 15869  0046D2                     
 15870                           ;pipe.c: 22: *data = p->pipe_data[p->pipe_pos_read];
 15871                           ;stkvar	pipe_read@p @ sp[(0)+-2]
 15872  0046D2  0EFE               	movlw	-2
 15873  0046D4  CFE3 F06C          	movff	plusw1,btemp+10
 15874  0046D8  0EFF               	movlw	-1
 15875  0046DA  CFE3 F06D          	movff	plusw1,btemp+11
 15876  0046DE  0E04               	movlw	4
 15877  0046E0  246C               	addwf	(btemp+10)^0,w,c
 15878  0046E2  6ED9               	movwf	fsr2l,c
 15879  0046E4  0E00               	movlw	0
 15880  0046E6  206D               	addwfc	(btemp+11)^0,w,c
 15881  0046E8  6EDA               	movwf	fsr2h,c
 15882  0046EA  CFDE F06C          	movff	postinc2,btemp+10
 15883  0046EE  CFDD F06D          	movff	postdec2,btemp+11
 15884                           
 15885                           ;stkvar	pipe_read@p @ sp[(0)+-2]
 15886  0046F2  0EFE               	movlw	-2
 15887  0046F4  CFE3 F06A          	movff	plusw1,btemp+8
 15888  0046F8  0EFF               	movlw	-1
 15889  0046FA  CFE3 F06B          	movff	plusw1,btemp+9
 15890  0046FE  506C               	movf	(btemp+10)^0,w,c
 15891  004700  246A               	addwf	(btemp+8)^0,w,c
 15892  004702  6ED9               	movwf	fsr2l,c
 15893  004704  506D               	movf	(btemp+11)^0,w,c
 15894  004706  206B               	addwfc	(btemp+9)^0,w,c
 15895  004708  6EDA               	movwf	fsr2h,c
 15896                           
 15897                           ;stkvar	pipe_read@data @ sp[(0)+-4]
 15898  00470A  0EFC               	movlw	-4
 15899  00470C  CFE3 FFE9          	movff	plusw1,fsr0l
 15900  004710  0EFD               	movlw	-3
 15901  004712  CFE3 FFEA          	movff	plusw1,fsr0h
 15902  004716  CFDF FFEF          	movff	indf2,indf0
 15903  00471A                     
 15904                           ;pipe.c: 23: p->pipe_pos_read = (p->pipe_pos_read + 1) % 2;
 15905                           ;stkvar	pipe_read@p @ sp[(0)+-2]
 15906  00471A  0EFE               	movlw	-2
 15907  00471C  CFE3 F06C          	movff	plusw1,btemp+10
 15908  004720  0EFF               	movlw	-1
 15909  004722  CFE3 F06D          	movff	plusw1,btemp+11
 15910  004726  0E04               	movlw	4
 15911  004728  246C               	addwf	(btemp+10)^0,w,c
 15912  00472A  6ED9               	movwf	fsr2l,c
 15913  00472C  0E00               	movlw	0
 15914  00472E  206D               	addwfc	(btemp+11)^0,w,c
 15915  004730  6EDA               	movwf	fsr2h,c
 15916  004732  CFDE F06C          	movff	postinc2,btemp+10
 15917  004736  CFDD F06D          	movff	postdec2,btemp+11
 15918  00473A  0E01               	movlw	1
 15919  00473C  266C               	addwf	(btemp+10)^0,f,c
 15920  00473E  0E00               	movlw	0
 15921  004740  226D               	addwfc	(btemp+11)^0,f,c
 15922  004742  0E01               	movlw	1
 15923  004744  166C               	andwf	(btemp+10)^0,f,c
 15924  004746  0E00               	movlw	0
 15925  004748  166D               	andwf	(btemp+11)^0,f,c
 15926                           
 15927                           ;stkvar	pipe_read@p @ sp[(0)+-2]
 15928  00474A  0EFE               	movlw	-2
 15929  00474C  CFE3 F06A          	movff	plusw1,btemp+8
 15930  004750  0EFF               	movlw	-1
 15931  004752  CFE3 F06B          	movff	plusw1,btemp+9
 15932  004756  0E04               	movlw	4
 15933  004758  246A               	addwf	(btemp+8)^0,w,c
 15934  00475A  6ED9               	movwf	fsr2l,c
 15935  00475C  0E00               	movlw	0
 15936  00475E  206B               	addwfc	(btemp+9)^0,w,c
 15937  004760  6EDA               	movwf	fsr2h,c
 15938  004762  C06C  FFDE         	movff	btemp+10,postinc2
 15939  004766  C06D  FFDD         	movff	btemp+11,postdec2
 15940  00476A                     
 15941                           ;pipe.c: 24: p->pipe_size = p->pipe_size - 1;
 15942  00476A  0EFF               	movlw	255
 15943  00476C  6E6C               	movwf	(btemp+10)^0,c
 15944  00476E  0EFF               	movlw	255
 15945  004770  6E6D               	movwf	(btemp+11)^0,c
 15946                           
 15947                           ;stkvar	pipe_read@p @ sp[(0)+-2]
 15948  004772  0EFE               	movlw	-2
 15949  004774  CFE3 F06A          	movff	plusw1,btemp+8
 15950  004778  0EFF               	movlw	-1
 15951  00477A  CFE3 F06B          	movff	plusw1,btemp+9
 15952  00477E  0E02               	movlw	2
 15953  004780  246A               	addwf	(btemp+8)^0,w,c
 15954  004782  6ED9               	movwf	fsr2l,c
 15955  004784  0E00               	movlw	0
 15956  004786  206B               	addwfc	(btemp+9)^0,w,c
 15957  004788  6EDA               	movwf	fsr2h,c
 15958  00478A  CFDE F06A          	movff	postinc2,btemp+8
 15959  00478E  CFDD F06B          	movff	postdec2,btemp+9
 15960  004792  506C               	movf	(btemp+10)^0,w,c
 15961  004794  266A               	addwf	(btemp+8)^0,f,c
 15962  004796  506D               	movf	(btemp+11)^0,w,c
 15963  004798  226B               	addwfc	(btemp+9)^0,f,c
 15964                           
 15965                           ;stkvar	pipe_read@p @ sp[(0)+-2]
 15966  00479A  0EFE               	movlw	-2
 15967  00479C  CFE3 F06C          	movff	plusw1,btemp+10
 15968  0047A0  0EFF               	movlw	-1
 15969  0047A2  CFE3 F06D          	movff	plusw1,btemp+11
 15970  0047A6  0E02               	movlw	2
 15971  0047A8  246C               	addwf	(btemp+10)^0,w,c
 15972  0047AA  6ED9               	movwf	fsr2l,c
 15973  0047AC  0E00               	movlw	0
 15974  0047AE  206D               	addwfc	(btemp+11)^0,w,c
 15975  0047B0  6EDA               	movwf	fsr2h,c
 15976  0047B2  C06A  FFDE         	movff	btemp+8,postinc2
 15977  0047B6  C06B  FFDD         	movff	btemp+9,postdec2
 15978  0047BA                     
 15979                           ;pipe.c: 26: if (p->pipe_task_bloqued > 0) {
 15980                           ;stkvar	pipe_read@p @ sp[(0)+-2]
 15981  0047BA  0EFE               	movlw	-2
 15982  0047BC  CFE3 F06C          	movff	plusw1,btemp+10
 15983  0047C0  0EFF               	movlw	-1
 15984  0047C2  CFE3 F06D          	movff	plusw1,btemp+11
 15985  0047C6  0E08               	movlw	8
 15986  0047C8  246C               	addwf	(btemp+10)^0,w,c
 15987  0047CA  6ED9               	movwf	fsr2l,c
 15988  0047CC  0E00               	movlw	0
 15989  0047CE  206D               	addwfc	(btemp+11)^0,w,c
 15990  0047D0  6EDA               	movwf	fsr2h,c
 15991  0047D2  50DE               	movf	postinc2,w,c
 15992  0047D4  10DE               	iorwf	postinc2,w,c
 15993  0047D6  B4D8               	btfsc	status,2,c
 15994  0047D8  EFF0  F023         	goto	u239_21
 15995  0047DC  EFF2  F023         	goto	u239_20
 15996  0047E0                     u239_21:
 15997  0047E0  EF3B  F024         	goto	l2994
 15998  0047E4                     u239_20:
 15999  0047E4                     
 16000                           ;pipe.c: 27: f_aptos.APTOS[p->pipe_task_bloqued].task_state = READY;
 16001                           ;stkvar	pipe_read@p @ sp[(0)+-2]
 16002  0047E4  0EFE               	movlw	-2
 16003  0047E6  CFE3 F06C          	movff	plusw1,btemp+10
 16004  0047EA  0EFF               	movlw	-1
 16005  0047EC  CFE3 F06D          	movff	plusw1,btemp+11
 16006  0047F0  0E08               	movlw	8
 16007  0047F2  246C               	addwf	(btemp+10)^0,w,c
 16008  0047F4  6ED9               	movwf	fsr2l,c
 16009  0047F6  0E00               	movlw	0
 16010  0047F8  206D               	addwfc	(btemp+11)^0,w,c
 16011  0047FA  6EDA               	movwf	fsr2h,c
 16012  0047FC  CFDE F06C          	movff	postinc2,btemp+10
 16013  004800  CFDD F06D          	movff	postdec2,btemp+11
 16014  004804  0E71               	movlw	113
 16015  004806  026C               	mulwf	(btemp+10)^0,c
 16016  004808  CFF3 F06A          	movff	prodl,btemp+8
 16017  00480C  CFF4 F06B          	movff	prodh,btemp+9
 16018  004810  026D               	mulwf	(btemp+11)^0,c
 16019  004812  50F3               	movf	prodl,w,c
 16020  004814  266B               	addwf	(btemp+9)^0,f,c
 16021  004816  0EA6               	movlw	low (_f_aptos+4)
 16022  004818  246A               	addwf	(btemp+8)^0,w,c
 16023  00481A  6ED9               	movwf	fsr2l,c
 16024  00481C  0E00               	movlw	high (_f_aptos+4)
 16025  00481E  206B               	addwfc	(btemp+9)^0,w,c
 16026  004820  6EDA               	movwf	fsr2h,c
 16027  004822  0E01               	movlw	1
 16028  004824  6EDF               	movwf	indf2,c
 16029  004826                     
 16030                           ;pipe.c: 28: p->pipe_task_bloqued = 0;
 16031                           ;stkvar	pipe_read@p @ sp[(0)+-2]
 16032  004826  0EFE               	movlw	-2
 16033  004828  CFE3 F06C          	movff	plusw1,btemp+10
 16034  00482C  0EFF               	movlw	-1
 16035  00482E  CFE3 F06D          	movff	plusw1,btemp+11
 16036  004832  0E08               	movlw	8
 16037  004834  246C               	addwf	(btemp+10)^0,w,c
 16038  004836  6ED9               	movwf	fsr2l,c
 16039  004838  0E00               	movlw	0
 16040  00483A  206D               	addwfc	(btemp+11)^0,w,c
 16041  00483C  6EDA               	movwf	fsr2h,c
 16042  00483E  0E00               	movlw	0
 16043  004840  6EDE               	movwf	postinc2,c
 16044  004842  0E00               	movlw	0
 16045  004844  6EDD               	movwf	postdec2,c
 16046  004846  EF3B  F024         	goto	l2994
 16047  00484A                     l2990:
 16048                           
 16049                           ;pipe.c: 34: else {;pipe.c: 35: p->pipe_task_bloqued = f_aptos.task_running;
 16050  00484A  EE23  F04A         	lfsr	2,_f_aptos+680
 16051                           
 16052                           ;stkvar	pipe_read@p @ sp[(0)+-2]
 16053  00484E  0EFE               	movlw	-2
 16054  004850  CFE3 F06C          	movff	plusw1,btemp+10
 16055  004854  0EFF               	movlw	-1
 16056  004856  CFE3 F06D          	movff	plusw1,btemp+11
 16057  00485A  0E08               	movlw	8
 16058  00485C  246C               	addwf	(btemp+10)^0,w,c
 16059  00485E  6EE9               	movwf	fsr0l,c
 16060  004860  0E00               	movlw	0
 16061  004862  206D               	addwfc	(btemp+11)^0,w,c
 16062  004864  6EEA               	movwf	fsr0h,c
 16063  004866  CFDE FFEE          	movff	postinc2,postinc0
 16064  00486A  CFDD FFED          	movff	postdec2,postdec0
 16065  00486E                     
 16066                           ;pipe.c: 36: dispatcher(WAITING);
 16067  00486E  0E03               	movlw	3
 16068  004870  6EE6               	movwf	postinc1,c
 16069  004872  EC74  F018         	call	_dispatcher	;wreg free
 16070  004876                     l2994:
 16071                           
 16072                           ;pipe.c: 37: };pipe.c: 39: INTCONbits.GIE = 1;;
 16073  004876  8EF2               	bsf	242,7,c	;volatile
 16074  004878                     
 16075                           ; _pipe_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
 16076  004878  52E5               	movf	postdec1,f,c
 16077  00487A  52E5               	movf	postdec1,f,c
 16078  00487C  52E5               	movf	postdec1,f,c
 16079  00487E  52E5               	movf	postdec1,f,c
 16080  004880  0012               	return		;funcret
 16081  004882                     __end_of_pipe_read:
 16082                           	opt callstack 0
 16083                           
 16084 ;; *************** function _task_m2 *****************
 16085 ;; Defined at:
 16086 ;;		line 163 in file "user_tasks.c"
 16087 ;; Parameters:    Size  Location     Type
 16088 ;;		None
 16089 ;; Auto vars:     Size  Location     Type
 16090 ;;  dado            1   15[COMRAM] unsigned char 
 16091 ;; Return value:  Size  Location     Type
 16092 ;;                  1    wreg      void 
 16093 ;; Registers used:
 16094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
 16095 ;; Tracked objects:
 16096 ;;		On entry : 0/0
 16097 ;;		On exit  : 0/0
 16098 ;;		Unchanged: 0/0
 16099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16100 ;;      Params:         0       0       0       0       0       0       0
 16101 ;;      Locals:         1       0       0       0       0       0       0
 16102 ;;      Temps:          0       0       0       0       0       0       0
 16103 ;;      Totals:         1       0       0       0       0       0       0
 16104 ;;Total ram usage:        1 bytes
 16105 ;; Hardware stack levels used:    1
 16106 ;; Hardware stack levels required when called:    8
 16107 ;; This function calls:
 16108 ;;		_pipe_read
 16109 ;;		_sem_post
 16110 ;;		_sem_wait
 16111 ;; This function is called by:
 16112 ;;		Interrupt level 1
 16113 ;; This function uses a non-reentrant model
 16114 ;;
 16115                           
 16116                           	psect	text55
 16117  0061CA                     __ptext55:
 16118                           	opt callstack 0
 16119  0061CA                     _task_m2:
 16120                           	opt callstack 17
 16121  0061CA                     l326:
 16122  0061CA                     
 16123                           ;user_tasks.c: 166: sem_wait(&sem3);
 16124  0061CA  0E05               	movlw	low _sem3
 16125  0061CC  6EE6               	movwf	postinc1,c
 16126  0061CE  0E00               	movlw	high _sem3
 16127  0061D0  6EE6               	movwf	postinc1,c
 16128  0061D2  EC32  F02B         	call	_sem_wait	;wreg free
 16129                           
 16130                           ;user_tasks.c: 168: pipe_read(&msg2, &dado);
 16131  0061D6  0E5E               	movlw	low task_m2@dado
 16132  0061D8  6EE6               	movwf	postinc1,c
 16133  0061DA  0E00               	movlw	high task_m2@dado
 16134  0061DC  6EE6               	movwf	postinc1,c
 16135  0061DE  0E3B               	movlw	low _msg2
 16136  0061E0  6EE6               	movwf	postinc1,c
 16137  0061E2  0E00               	movlw	high _msg2
 16138  0061E4  6EE6               	movwf	postinc1,c
 16139  0061E6  EC53  F023         	call	_pipe_read	;wreg free
 16140  0061EA                     
 16141                           ;user_tasks.c: 169: if (dado == '1' || dado == '2'){
 16142  0061EA  0E31               	movlw	49
 16143  0061EC  185E               	xorwf	task_m2@dado^0,w,c
 16144  0061EE  B4D8               	btfsc	status,2,c
 16145  0061F0  EFFC  F030         	goto	u293_21
 16146  0061F4  EFFE  F030         	goto	u293_20
 16147  0061F8                     u293_21:
 16148  0061F8  EF07  F031         	goto	l329
 16149  0061FC                     u293_20:
 16150  0061FC  0E32               	movlw	50
 16151  0061FE  185E               	xorwf	task_m2@dado^0,w,c
 16152  006200  A4D8               	btfss	status,2,c
 16153  006202  EF05  F031         	goto	u294_21
 16154  006206  EF07  F031         	goto	u294_20
 16155  00620A                     u294_21:
 16156  00620A  EF0E  F031         	goto	l327
 16157  00620E                     u294_20:
 16158  00620E                     l329:
 16159                           
 16160                           ;user_tasks.c: 170: PORTCbits.RC1 = 0;
 16161  00620E  9282               	bcf	130,1,c	;volatile
 16162  006210                     
 16163                           ;user_tasks.c: 171: sem_post(&sem1);
 16164  006210  0E29               	movlw	low _sem1
 16165  006212  6EE6               	movwf	postinc1,c
 16166  006214  0E00               	movlw	high _sem1
 16167  006216  6EE6               	movwf	postinc1,c
 16168  006218  EC3B  F028         	call	_sem_post	;wreg free
 16169  00621C                     l327:
 16170                           
 16171                           ;user_tasks.c: 172: };user_tasks.c: 173: sem_post(&sem3);
 16172  00621C  0E05               	movlw	low _sem3
 16173  00621E  6EE6               	movwf	postinc1,c
 16174  006220  0E00               	movlw	high _sem3
 16175  006222  6EE6               	movwf	postinc1,c
 16176  006224  EC3B  F028         	call	_sem_post	;wreg free
 16177  006228  EFE5  F030         	goto	l326
 16178  00622C  0012               	return		;funcret
 16179  00622E                     __end_of_task_m2:
 16180                           	opt callstack 0
 16181                           
 16182 ;; *************** function _timer_zero_int *****************
 16183 ;; Defined at:
 16184 ;;		line 23 in file "timer_0.c"
 16185 ;; Parameters:    Size  Location     Type
 16186 ;;		None
 16187 ;; Auto vars:     Size  Location     Type
 16188 ;;  i               2    0        int 
 16189 ;; Return value:  Size  Location     Type
 16190 ;;                  1    wreg      void 
 16191 ;; Registers used:
 16192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
 16193 ;; Tracked objects:
 16194 ;;		On entry : 0/0
 16195 ;;		On exit  : 0/0
 16196 ;;		Unchanged: 0/0
 16197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16198 ;;      Params:         0       0       0       0       0       0       0
 16199 ;;      Locals:         0       0       0       0       0       0       0
 16200 ;;      Temps:         14       0       0       0       0       0       0
 16201 ;;      Totals:        14       0       0       0       0       0       0
 16202 ;;Total ram usage:       14 bytes
 16203 ;; Hardware stack levels used:    1
 16204 ;; Hardware stack levels required when called:    3
 16205 ;; This function calls:
 16206 ;;		_dispatcher
 16207 ;; This function is called by:
 16208 ;;		Interrupt level 2
 16209 ;; This function uses a non-reentrant model
 16210 ;;
 16211                           
 16212                           	psect	intcode
 16213  000008                     __pintcode:
 16214                           	opt callstack 0
 16215  000008                     _timer_zero_int:
 16216                           	opt callstack 17
 16217                           
 16218                           ;incstack = 0
 16219  000008  EDD1  F02D         	call	int_func,f	;refresh shadow registers
 16220  00000C                     
 16221                           	psect	intcode_body
 16222  005BA2                     __pintcode_body:
 16223                           	opt callstack 17
 16224  005BA2                     int_func:
 16225                           	opt callstack 17
 16226  005BA2  0006               	pop		; remove dummy address from shadow register refresh
 16227  005BA4  CFE1 F04F          	movff	fsr1l,??_timer_zero_int
 16228  005BA8  CFE2 F050          	movff	fsr1h,??_timer_zero_int+1
 16229  005BAC  CFD9 F051          	movff	fsr2l,??_timer_zero_int+2
 16230  005BB0  CFDA F052          	movff	fsr2h,??_timer_zero_int+3
 16231  005BB4  CFF3 F053          	movff	prodl,??_timer_zero_int+4
 16232  005BB8  CFF4 F054          	movff	prodh,??_timer_zero_int+5
 16233  005BBC  C062  F055         	movff	btemp,??_timer_zero_int+6
 16234  005BC0  C063  F056         	movff	btemp+1,??_timer_zero_int+7
 16235  005BC4  C068  F057         	movff	btemp+6,??_timer_zero_int+8
 16236  005BC8  C069  F058         	movff	btemp+7,??_timer_zero_int+9
 16237  005BCC  C06A  F059         	movff	btemp+8,??_timer_zero_int+10
 16238  005BD0  C06B  F05A         	movff	btemp+9,??_timer_zero_int+11
 16239  005BD4  C06C  F05B         	movff	btemp+10,??_timer_zero_int+12
 16240  005BD8  C06D  F05C         	movff	btemp+11,??_timer_zero_int+13
 16241  005BDC  EE15  F088         	lfsr	1,___inthi_sp
 16242  005BE0                     
 16243                           ;timer_0.c: 25: int i;;timer_0.c: 26: INTCONbits.TMR0IF = 0;
 16244  005BE0  94F2               	bcf	242,2,c	;volatile
 16245  005BE2                     
 16246                           ;timer_0.c: 27: TMR0L = 252;
 16247  005BE2  0EFC               	movlw	252
 16248  005BE4  6ED6               	movwf	214,c	;volatile
 16249  005BE6                     
 16250                           ;timer_0.c: 43: quantum = quantum - 1;
 16251  005BE6  0EFF               	movlw	255
 16252  005BE8  246E               	addwf	_quantum^0,w,c
 16253  005BEA  6E6E               	movwf	_quantum^0,c
 16254  005BEC  0EFF               	movlw	255
 16255  005BEE  206F               	addwfc	(_quantum+1)^0,w,c
 16256  005BF0  6E6F               	movwf	(_quantum+1)^0,c
 16257  005BF2                     
 16258                           ;timer_0.c: 44: if (quantum <= 0) {
 16259  005BF2  BE6F               	btfsc	(_quantum+1)^0,7,c
 16260  005BF4  EF06  F02E         	goto	i2u282_40
 16261  005BF8  506F               	movf	(_quantum+1)^0,w,c
 16262  005BFA  E106               	bnz	i2u282_41
 16263  005BFC  046E               	decf	_quantum^0,w,c
 16264  005BFE  B0D8               	btfsc	status,0,c
 16265  005C00  EF04  F02E         	goto	i2u282_41
 16266  005C04  EF06  F02E         	goto	i2u282_40
 16267  005C08                     i2u282_41:
 16268  005C08  EF0E  F02E         	goto	i2l162
 16269  005C0C                     i2u282_40:
 16270  005C0C                     
 16271                           ;timer_0.c: 45: quantum = 8;
 16272  005C0C  0E00               	movlw	0
 16273  005C0E  6E6F               	movwf	(_quantum+1)^0,c
 16274  005C10  0E08               	movlw	8
 16275  005C12  6E6E               	movwf	_quantum^0,c
 16276  005C14                     
 16277                           ;timer_0.c: 46: dispatcher(READY);
 16278  005C14  0E01               	movlw	1
 16279  005C16  6EE6               	movwf	postinc1,c
 16280  005C18  EC74  F018         	call	_dispatcher	;wreg free
 16281  005C1C                     i2l162:
 16282  005C1C  C05C  F06D         	movff	??_timer_zero_int+13,btemp+11
 16283  005C20  C05B  F06C         	movff	??_timer_zero_int+12,btemp+10
 16284  005C24  C05A  F06B         	movff	??_timer_zero_int+11,btemp+9
 16285  005C28  C059  F06A         	movff	??_timer_zero_int+10,btemp+8
 16286  005C2C  C058  F069         	movff	??_timer_zero_int+9,btemp+7
 16287  005C30  C057  F068         	movff	??_timer_zero_int+8,btemp+6
 16288  005C34  C056  F063         	movff	??_timer_zero_int+7,btemp+1
 16289  005C38  C055  F062         	movff	??_timer_zero_int+6,btemp
 16290  005C3C  C054  FFF4         	movff	??_timer_zero_int+5,prodh
 16291  005C40  C053  FFF3         	movff	??_timer_zero_int+4,prodl
 16292  005C44  C052  FFDA         	movff	??_timer_zero_int+3,fsr2h
 16293  005C48  C051  FFD9         	movff	??_timer_zero_int+2,fsr2l
 16294  005C4C  C050  FFE2         	movff	??_timer_zero_int+1,fsr1h
 16295  005C50  C04F  FFE1         	movff	??_timer_zero_int,fsr1l
 16296  005C54  0011               	retfie		f
 16297  005C56                     __end_of_timer_zero_int:
 16298                           	opt callstack 0
 16299                           
 16300                           	psect	rparam
 16301  0000                     
 16302                           	psect	temp
 16303  000062                     btemp:
 16304                           	opt callstack 0
 16305  000062                     	ds	12
 16306  0000                     wtemp0	set	btemp
 16307  0000                     wtemp1	set	btemp+2
 16308  0000                     wtemp2	set	btemp+4
 16309  0000                     wtemp3	set	btemp+6
 16310  0000                     wtemp4	set	btemp+8
 16311  0000                     wtemp5	set	btemp+10
 16312  0000                     wtemp8	set	btemp+1
 16313  0000                     ttemp0	set	btemp
 16314  0000                     ttemp1	set	btemp+3
 16315  0000                     ttemp2	set	btemp+6
 16316  0000                     ttemp3	set	btemp+9
 16317  0000                     ttemp5	set	btemp+1
 16318  0000                     ttemp6	set	btemp+4
 16319  0000                     ttemp7	set	btemp+8
 16320  0000                     ltemp0	set	btemp
 16321  0000                     ltemp1	set	btemp+4
 16322  0000                     ltemp2	set	btemp+8
 16323  0000                     lltemp0	set	btemp
 16324                           tosu	equ	0xFFF
 16325                           tosh	equ	0xFFE
 16326                           tosl	equ	0xFFD
 16327                           stkptr	equ	0xFFC
 16328                           pclatu	equ	0xFFB
 16329                           pclath	equ	0xFFA
 16330                           pcl	equ	0xFF9
 16331                           tblptru	equ	0xFF8
 16332                           tblptrh	equ	0xFF7
 16333                           tblptrl	equ	0xFF6
 16334                           tablat	equ	0xFF5
 16335                           prodh	equ	0xFF4
 16336                           prodl	equ	0xFF3
 16337                           indf0	equ	0xFEF
 16338                           postinc0	equ	0xFEE
 16339                           postdec0	equ	0xFED
 16340                           preinc0	equ	0xFEC
 16341                           plusw0	equ	0xFEB
 16342                           fsr0h	equ	0xFEA
 16343                           fsr0l	equ	0xFE9
 16344                           wreg	equ	0xFE8
 16345                           indf1	equ	0xFE7
 16346                           postinc1	equ	0xFE6
 16347                           postdec1	equ	0xFE5
 16348                           preinc1	equ	0xFE4
 16349                           plusw1	equ	0xFE3
 16350                           fsr1h	equ	0xFE2
 16351                           fsr1l	equ	0xFE1
 16352                           bsr	equ	0xFE0
 16353                           indf2	equ	0xFDF
 16354                           postinc2	equ	0xFDE
 16355                           postdec2	equ	0xFDD
 16356                           preinc2	equ	0xFDC
 16357                           plusw2	equ	0xFDB
 16358                           fsr2h	equ	0xFDA
 16359                           fsr2l	equ	0xFD9
 16360                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    144
    Data        2
    BSS         1290
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          115     19      99
    BANK0           128     16      34
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> task_lcd@s(UNKNOWN), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    _SRAMmerge@pSegA	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    _SRAMmerge@pSegB	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMInitHeap@pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMalloc@temp	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMalloc@pHeap	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pipe_write@p	PTR struct pipe size(2) Largest target is 10
		 -> msg1(COMRAM[10]), 

    pipe_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> task_m2@dado(COMRAM[1]), task_m1@dado(COMRAM[1]), 

    pipe_read@p	PTR struct pipe size(2) Largest target is 10
		 -> msg2(COMRAM[10]), msg1(COMRAM[10]), 

    pipe_create@p	PTR struct pipe size(2) Largest target is 10
		 -> msg2(COMRAM[10]), msg1(COMRAM[10]), 

    sem_post@sem	PTR struct sem size(2) Largest target is 18
		 -> sem3(COMRAM[18]), sem2(COMRAM[18]), sem1(COMRAM[18]), 

    sem_wait@sem	PTR struct sem size(2) Largest target is 18
		 -> sem3(COMRAM[18]), sem2(COMRAM[18]), sem1(COMRAM[18]), 

    sem_create@sem	PTR struct sem size(2) Largest target is 18
		 -> sem4(BANK0[18]), sem3(COMRAM[18]), sem2(COMRAM[18]), sem1(COMRAM[18]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    buffer	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> task_lcd@s(UNKNOWN), STR_1(CODE[10]), 

    create_task@f	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), task_tres(), task_dois(), task_um(), 
		 -> task_lcd(), 

    S80tcb$task_ptr	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), task_tres(), task_dois(), task_um(), 
		 -> task_lcd(), 

    f_aptos.APTOS.task_ptr	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), task_tres(), task_dois(), task_um(), 
		 -> task_lcd(), 


Critical Paths under _main in COMRAM

    _SRAMalloc->__SRAMmerge

Critical Paths under _task_lcd in COMRAM

    None.

Critical Paths under _task_um in COMRAM

    None.

Critical Paths under _task_dois in COMRAM

    None.

Critical Paths under _task_tres in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _task_um in COMRAM

    None.

Critical Paths under _task_dois in COMRAM

    None.

Critical Paths under _task_tres in COMRAM

    None.

Critical Paths under _task_lcd in COMRAM

    None.

Critical Paths under _task_m1 in COMRAM

    None.

Critical Paths under _task_m2 in COMRAM

    None.

Critical Paths under _timer_zero_int in COMRAM

    None.

Critical Paths under _main in BANK0

    _user_tasks_config->_SRAMalloc
    _SRAMalloc->__SRAMmerge

Critical Paths under _task_lcd in BANK0

    None.

Critical Paths under _task_um in BANK0

    None.

Critical Paths under _task_dois in BANK0

    None.

Critical Paths under _task_tres in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _task_um in BANK0

    None.

Critical Paths under _task_dois in BANK0

    None.

Critical Paths under _task_tres in BANK0

    None.

Critical Paths under _task_lcd in BANK0

    None.

Critical Paths under _task_m1 in BANK0

    None.

Critical Paths under _task_m2 in BANK0

    None.

Critical Paths under _timer_zero_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _task_lcd in BANK1

    None.

Critical Paths under _task_um in BANK1

    None.

Critical Paths under _task_dois in BANK1

    None.

Critical Paths under _task_tres in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _task_um in BANK1

    None.

Critical Paths under _task_dois in BANK1

    None.

Critical Paths under _task_tres in BANK1

    None.

Critical Paths under _task_lcd in BANK1

    None.

Critical Paths under _task_m1 in BANK1

    None.

Critical Paths under _task_m2 in BANK1

    None.

Critical Paths under _timer_zero_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_lcd in BANK2

    None.

Critical Paths under _task_um in BANK2

    None.

Critical Paths under _task_dois in BANK2

    None.

Critical Paths under _task_tres in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _task_um in BANK2

    None.

Critical Paths under _task_dois in BANK2

    None.

Critical Paths under _task_tres in BANK2

    None.

Critical Paths under _task_lcd in BANK2

    None.

Critical Paths under _task_m1 in BANK2

    None.

Critical Paths under _task_m2 in BANK2

    None.

Critical Paths under _timer_zero_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _task_lcd in BANK3

    None.

Critical Paths under _task_um in BANK3

    None.

Critical Paths under _task_dois in BANK3

    None.

Critical Paths under _task_tres in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _task_um in BANK3

    None.

Critical Paths under _task_dois in BANK3

    None.

Critical Paths under _task_tres in BANK3

    None.

Critical Paths under _task_lcd in BANK3

    None.

Critical Paths under _task_m1 in BANK3

    None.

Critical Paths under _task_m2 in BANK3

    None.

Critical Paths under _timer_zero_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_lcd in BANK4

    None.

Critical Paths under _task_um in BANK4

    None.

Critical Paths under _task_dois in BANK4

    None.

Critical Paths under _task_tres in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _task_um in BANK4

    None.

Critical Paths under _task_dois in BANK4

    None.

Critical Paths under _task_tres in BANK4

    None.

Critical Paths under _task_lcd in BANK4

    None.

Critical Paths under _task_m1 in BANK4

    None.

Critical Paths under _task_m2 in BANK4

    None.

Critical Paths under _timer_zero_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_lcd in BANK5

    None.

Critical Paths under _task_um in BANK5

    None.

Critical Paths under _task_dois in BANK5

    None.

Critical Paths under _task_tres in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _task_um in BANK5

    None.

Critical Paths under _task_dois in BANK5

    None.

Critical Paths under _task_tres in BANK5

    None.

Critical Paths under _task_lcd in BANK5

    None.

Critical Paths under _task_m1 in BANK5

    None.

Critical Paths under _task_m2 in BANK5

    None.

Critical Paths under _timer_zero_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9161
                       _SRAMInitHeap
                        _create_task
                          _os_config
                           _start_OS
 ---------------------------------------------------------------------------------
 (1) _start_OS                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _os_config                                            0     0      0    5827
                        _conf_timer0
                        _create_task
                  _user_tasks_config
 ---------------------------------------------------------------------------------
 (2) _user_tasks_config                                    0     0      0    2651
                     _Inicializa_ADC
                           _Lcd_Init
                          _SRAMalloc
                        _pipe_create
                         _sem_create
 ---------------------------------------------------------------------------------
 (3) _sem_create                                           4     0      4     844
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _pipe_create                                          2     0      2     240
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _SRAMalloc                                           11     9      2    1369
                                              5 BANK0     11     9      2
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (4) __SRAMmerge                                           8     6      2     666
                                             16 COMRAM     3     1      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             1     1      0     198
                                             16 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (8) _Lcd_Cmd                                              1     0      1     110
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (9) _Lcd_Port                                             1     0      1      88
 ---------------------------------------------------------------------------------
 (3) _Inicializa_ADC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _create_task                                          8     2      6    3176
                                             16 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4    1733
 ---------------------------------------------------------------------------------
 (2) _conf_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SRAMInitHeap                                         4     4      0     158
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_lcd                                            27    27      0   20145
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _LerADC
                            _MsDelay
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                         _pipe_write
                           _sem_post
                           _sem_wait
                            _sprintf
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             37    29      8   13628
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (8) _scale                                                1     0      1    2316
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     349
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     1      1      45
 ---------------------------------------------------------------------------------
 (8) _fround                                               1     0      1    1694
                            ___flmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (9) ___lbmod                                              4     2      2     135
 ---------------------------------------------------------------------------------
 (9) ___lbdiv                                              4     2      2     135
 ---------------------------------------------------------------------------------
 (9) ___flmul                                             21    13      8    1304
 ---------------------------------------------------------------------------------
 (8) __tdiv_to_l_                                         14     6      8     217
 ---------------------------------------------------------------------------------
 (8) __div_to_l_                                          14     6      8     217
 ---------------------------------------------------------------------------------
 (8) ___xxtofl                                            10     5      5     232
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4    1733
 ---------------------------------------------------------------------------------
 (8) ___llmod                                              9     1      8     171
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     149
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     183
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    1415
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1341
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      41
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     296
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8     148
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1002
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2    1072
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _pipe_write                                           3     0      3     699
                         _dispatcher
 ---------------------------------------------------------------------------------
 (12) _dispatcher                                          1     0      1     453
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (13) _rr_scheduler                                        2     2      0     438
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     393
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             21    13      8     749
 ---------------------------------------------------------------------------------
 (7) _MsDelay                                              6     4      2      71
 ---------------------------------------------------------------------------------
 (7) _LerADC                                               2     2      0      30
 ---------------------------------------------------------------------------------
 (7) _Lcd_Write_String                                     4     2      2     292
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (8) _Lcd_Write_Char                                       3     2      1     178
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (7) _Lcd_Set_Cursor                                       5     3      2     404
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (8) _Lcd_Cmd                                              1     0      1     110
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (9) _Lcd_Port                                             1     0      1      88
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_um                                              1     1      0    2074
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1002
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2    1072
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (12) _dispatcher                                          1     0      1     453
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (13) _rr_scheduler                                        2     2      0     438
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     393
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_dois                                            1     1      0    2074
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1002
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2    1072
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (12) _dispatcher                                          1     0      1     453
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (13) _rr_scheduler                                        2     2      0     438
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     393
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_tres                                            1     1      0    2074
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1002
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2    1072
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (12) _dispatcher                                          1     0      1     453
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (13) _rr_scheduler                                        2     2      0     438
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     393
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_um                                              1     1      0    2074
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1002
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2    1072
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (12) _dispatcher                                          1     0      1     453
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (13) _rr_scheduler                                        2     2      0     438
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     393
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_dois                                            1     1      0    2074
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1002
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2    1072
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (12) _dispatcher                                          1     0      1     453
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (13) _rr_scheduler                                        2     2      0     438
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     393
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_tres                                            1     1      0    2074
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1002
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2    1072
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (12) _dispatcher                                          1     0      1     453
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (13) _rr_scheduler                                        2     2      0     438
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     393
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_lcd                                            27    27      0   20145
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _LerADC
                            _MsDelay
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                         _pipe_write
                           _sem_post
                           _sem_wait
                            _sprintf
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             37    29      8   13628
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (8) _scale                                                1     0      1    2316
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     349
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     1      1      45
 ---------------------------------------------------------------------------------
 (8) _fround                                               1     0      1    1694
                            ___flmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (9) ___lbmod                                              4     2      2     135
 ---------------------------------------------------------------------------------
 (9) ___lbdiv                                              4     2      2     135
 ---------------------------------------------------------------------------------
 (9) ___flmul                                             21    13      8    1304
 ---------------------------------------------------------------------------------
 (8) __tdiv_to_l_                                         14     6      8     217
 ---------------------------------------------------------------------------------
 (8) __div_to_l_                                          14     6      8     217
 ---------------------------------------------------------------------------------
 (8) ___xxtofl                                            10     5      5     232
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4    1733
 ---------------------------------------------------------------------------------
 (8) ___llmod                                              9     1      8     171
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     149
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     183
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    1415
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1341
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      41
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     296
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8     148
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1002
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2    1072
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _pipe_write                                           3     0      3     699
                         _dispatcher
 ---------------------------------------------------------------------------------
 (12) _dispatcher                                          1     0      1     453
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (13) _rr_scheduler                                        2     2      0     438
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     393
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             21    13      8     749
 ---------------------------------------------------------------------------------
 (7) _MsDelay                                              6     4      2      71
 ---------------------------------------------------------------------------------
 (7) _LerADC                                               2     2      0      30
 ---------------------------------------------------------------------------------
 (7) _Lcd_Write_String                                     4     2      2     292
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (8) _Lcd_Write_Char                                       3     2      1     178
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (7) _Lcd_Set_Cursor                                       5     3      2     404
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (8) _Lcd_Cmd                                              1     0      1     110
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (9) _Lcd_Port                                             1     0      1      88
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_m1                                              1     1      0    2796
                                             14 COMRAM     1     1      0
                          _pipe_read
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1002
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2    1072
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _pipe_read                                            4     0      4     677
                         _dispatcher
 ---------------------------------------------------------------------------------
 (12) _dispatcher                                          1     0      1     453
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (13) _rr_scheduler                                        2     2      0     438
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     393
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _task_m2                                              1     1      0    2796
                                             15 COMRAM     1     1      0
                          _pipe_read
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             2     0      2    1002
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             2     0      2    1072
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (7) _pipe_read                                            4     0      4     677
                         _dispatcher
 ---------------------------------------------------------------------------------
 (12) _dispatcher                                          1     0      1     453
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (13) _rr_scheduler                                        2     2      0     438
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     393
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _timer_zero_int                                     16    16      0     453
                                              0 COMRAM    14    14      0
                         _dispatcher
 ---------------------------------------------------------------------------------
 (12) _dispatcher                                          1     0      1     453
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (13) _rr_scheduler                                        2     2      0     438
                            ___awmod
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     393
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SRAMInitHeap
   _create_task
     ___wmul
   _os_config
     _conf_timer0
     _create_task
       ___wmul
     _user_tasks_config
       _Inicializa_ADC
       _Lcd_Init
         _Lcd_Cmd
           _Lcd_Port
         _Lcd_Port
       _SRAMalloc
         __SRAMmerge
       _pipe_create
       _sem_create
   _start_OS

 _task_lcd (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _LerADC
   _MsDelay
   ___fldiv
   ___flge
   ___flmul
   ___xxtofl
   _pipe_write
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sprintf
     ___awdiv
     ___fladd
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
     ___fltol
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
       ___lbdiv
       ___lbmod
     _isdigit
     _scale
       ___awdiv
       ___awmod
       ___flmul

 _task_um (ROOT)
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod

 _task_dois (ROOT)
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod

 _task_tres (ROOT)
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod

 _task_idle (ROOT)

 _task_um (ROOT)
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod

 _task_dois (ROOT)
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod

 _task_tres (ROOT)
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod

 _task_lcd (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _LerADC
   _MsDelay
   ___fldiv
   ___flge
   ___flmul
   ___xxtofl
   _pipe_write
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sprintf
     ___awdiv
     ___fladd
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
     ___fltol
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
       ___lbdiv
       ___lbmod
     _isdigit
     _scale
       ___awdiv
       ___awmod
       ___flmul

 _task_m1 (ROOT)
   _pipe_read
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod

 _task_m2 (ROOT)
   _pipe_read
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod

 _timer_zero_int (ROOT)
   _dispatcher
     _rr_scheduler
       ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     4AA      17       77.8%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     10      22       5       26.6%
BITCOMRAM           73      0       0       0        0.0%
COMRAM              73     13      63       1       86.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       4       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      85      15        0.0%
DATA                 0      0     533       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 06 18:43:40 2019

                        l24 5848                          l28 5844                          l29 5844  
                        l70 4EF8                          l81 5F76                          l99 64E6  
              create_task@f 0096               SRAMalloc@temp 009B                 fp__task_lcd 000C  
                       l102 662A                         l120 3614                         l105 659C  
                       l302 6466                         l118 34AA                         l231 6162  
                       l223 6118                         l320 61AA                         l225 6130  
                       l234 65EA                         l410 5978                         l243 5ED8  
                       l227 6148                         l411 5A08                         l308 3A3E  
                       l156 6610                         l317 6166                         l237 6622  
                       l405 6100                         l229 6160                         l326 61CA  
                       l318 61B8                         l270 62E6                         l246 6098  
                       l327 621C                         l255 5B98                         l351 51BE  
                       l343 6464                         l264 65FE                         l329 620E  
                       l249 6286                         l425 5CFA                         l290 6528  
                       l371 4878                         l267 6294                         l347 5760  
                       l452 3A32                         l445 4450                         l541 17B6  
                       l365 633C                         l287 5E44                         l296 64E8  
                       l800 5304                         l377 4A48                         l553 1968  
                       l385 5560                         l810 3F98                         l394 555C  
                       l387 5492                         l556 6008                         l590 5432  
                       l486 0CC4                         l832 4C90                         l835 4D74  
                       l828 5926                         l862 4BEE                         l839 6418  
                       l919 469C                         l787 506C                         l990 5D9C  
                       l984 5ADA                         _BSR 000FE0                         _RB5 007C0D  
                       _RB6 007C0E                         _RD4 007C1C                         _RD5 007C1D  
                       _RD6 007C1E                         _RD7 007C1F                         _TOS 000FFD  
             create_task@id 0092                         wreg 000FE8              SRAMalloc@pHeap 00A0  
              fp__task_idle 000C                fp__task_dois 000C           SRAMInitHeap@pHeap 0092  
              fp__task_tres 000C           SRAMInitHeap@count 0094                __CFG_WDT$OFF 000000  
                      l1005 565A                        l2010 5D3E                        l2002 5D08  
                      l1115 225A                        l2012 5D60                        l2004 5D0E  
                      l2014 5D78                        l2006 5D12                        l2110 4412  
                      l1127 2060                        l1160 30DE                        l3000 2AFC  
                      l2040 5F6A                        l2200 45C4                        l2016 5D96  
                      l2008 5D2C                        l2104 4340                        l2120 364C  
                      l3010 2B66                        l3002 2B16                        l2034 5EE6  
                      l2202 45D2                        l2106 4356                        l2114 3618  
                      l3100 2EFC                        l3020 2BE8                        l3012 2B6A  
                      l3004 2B1A                        l2036 5EF2                        l1148 6592  
                      l2300 5316                        l1236 41F8                        l2220 465C  
                      l2212 461A                        l2204 45F0                        l2132 3808  
                      l2116 3628                        l2044 6600                        l3110 2F66  
                      l3102 2F0C                        l3030 2C52                        l3022 2C02  
                      l3006 2B2C                        l3014 2B7E                        l2038 5F30  
                      l2310 537A                        l2302 5326                        l2230 3D6C  
                      l2222 4672                        l2206 4600                        l2214 4642  
                      l1254 63D2                        l2150 3A08                        l2126 3758  
                      l2118 3636                        l2046 6608                        l3120 2FB4  
                      l3104 2F10                        l3040 2CC6                        l3032 2C56  
                      l3024 2C06                        l3016 2BA6                        l3008 2B3E  
                      l1600 1CE6                        l1520 19BA                        l2320 53FC  
                      l2312 538C                        l2304 534A                        l2240 3DC4  
                      l2224 4684                        l2160 63BE                        l2144 3958  
                      l2128 376E                        l2136 3836                        l3130 3046  
                      l3122 2FE4                        l3106 2F20                        l3114 2F7A  
                      l3050 2D1E                        l3042 2CDA                        l3026 2C18  
                      l3034 2C6A                        l3018 2BCC                        l1610 1D5E  
                      l1602 1D16                        l1530 1A24                        l1522 19D4  
                      l2314 53C0                        l2306 5354                        l2322 541A  
                      l2250 3E28                        l2242 3DC8                        l2234 3D7A  
                      l2162 63C4                        l2154 638E                        l2146 396E  
                      l2138 384C                        l3300 6466                        l3140 309E  
                      l3132 3066                        l3116 2F8C                        l3124 3002  
                      l3108 2F5C                        l3060 2D88                        l3052 2D1E  
                      l3044 2CF0                        l3036 2C92                        l3028 2C2A  
                      l2340 58E4                        l2332 584C                        l1700 211E  
                      l1612 1D70                        l1604 1D26                        l1620 1DB8  
                      l1540 1AA0                        l1532 1A28                        l1524 19D8  
                      l1516 1984                        l2420 4BD6                        l2412 4B7A  
                      l2404 4B38                        l2316 53E6                        l2308 536A  
                      l2260 3EB8                        l2252 3E46                        l2244 3DE6  
                      l2228 3D26                        l2180 4502                        l2172 44B2  
                      l1196 2AB4                        l2156 6392                        l3214 659C  
                      l3302 6472                        l3142 30B2                        l3134 307E  
                      l3126 3022                        l3118 2FA4                        l3070 2DE6  
                      l3062 2D98                        l3038 2CB6                        l2342 591E  
                      l2334 5888                        l2350 4C34                        l1702 2136  
                      l1710 218C                        l1630 1E10                        l1614 1D80  
                      l1606 1D36                        l1622 1DDA                        l1550 1AF0  
                      l1542 1AA4                        l1526 19EA                        l1534 1A3C  
                      l1518 199E                        l2326 6566                        l2414 4B90  
                      l2406 4B60                        l2318 53EA                        l2430 55A8  
                      l2262 3EBC                        l2254 3E4C                        l2246 3E08  
                      l2190 454C                        l2182 4506                        l2166 445C  
                      l2158 63A8                        l3216 65C2                        l3304 6496  
                      l3144 30C2                        l3136 3082                        l3128 3036  
                      l3080 2E44                        l3072 2DF6                        l3064 2DA8  
                      l3056 2D32                        l3048 2D0C                        l2344 5924  
                      l2336 5898                        l2360 4CF0                        l2352 4C44  
                      l1720 21D6                        l1712 219E                        l1704 2146  
                      l1640 1EA2                        l1632 1E58                        l1624 1DEA  
                      l1616 1D84                        l1608 1D46                        l1560 1B6A  
                      l1552 1B02                        l1544 1AC0                        l1536 1A64  
                      l1528 19FC                        l2328 656A                        l2416 4BA2  
                      l2432 55B8                        l2440 5642                        l2424 5564  
                      l2264 3ECE                        l2256 3E5E                        l2248 3E18  
                      l2192 4554                        l2184 450E                        l2168 44A4  
                      l1800 25C2                        l2096 4202                        l2602 6292  
                      l3138 308E                        l3090 2EB0                        l3082 2E6A  
                      l3074 2DFA                        l3066 2DB0                        l3058 2D58  
                      l2530 3156                        l2338 58D4                        l2370 4D72  
                      l2362 4D30                        l2354 4C80                        l1730 2232  
                      l1722 21E6                        l1714 21B0                        l1706 2176  
                      l1650 1F2A                        l1642 1EB2                        l1634 1E68  
                      l1626 1DFC                        l1618 1DB4                        l1570 1BB8  
                      l1562 1B8C                        l1554 1B2A                        l1546 1ADA  
                      l1538 1A7E                        l2418 4BB4                        l2434 55EC  
                      l2426 5588                        l2450 4012                        l2282 3F58  
                      l2274 3F16                        l2266 3EEC                        l2258 3E92  
                      l2194 4566                        l2186 451E                        l2178 44FE  
                      l1810 267A                        l1802 25E4                        l2098 4218  
                      l2290 5F80                        l2522 6624                        l2604 62A2  
                      l3092 2EC2                        l3068 2DC2                        l3076 2E0C  
                      l3084 2E6E                        l2540 3308                        l2532 3184  
                      l2524 30E8                        l2620 56FA                        l2612 5664  
                      l2364 4D34                        l2356 4CA0                        l2348 4BF8  
                      l1732 2242                        l1724 21FA                        l1716 21C0  
                      l1708 2188                        l1652 1F8A                        l1660 1FCA  
                      l1644 1EB6                        l1636 1E78                        l1580 1BFE  
                      l1572 1BC4                        l1564 1B9C                        l1556 1B2E  
                      l1548 1ADE                        l2436 5612                        l2428 5592  
                      l2460 4088                        l2452 4042                        l2444 3FAA  
                      l2284 3F6E                        l2268 3EFC                        l2276 3F3E  
                      l2196 4594                        l2188 452E                        l1820 273A  
                      l1812 2692                        l1804 260C                        l1740 22A2  
                      l1900 4F28                        l2700 0976                        l2292 5F98  
                      l3420 6102                        l2606 62B4                        l3094 2ED2  
                      l3086 2E84                        l3078 2E40                        l2550 335E  
                      l2542 330E                        l2534 31B2                        l2526 30EA  
                      l2630 5096                        l2622 5756                        l2614 5666  
                      l2366 4D38                        l2358 4CE0                        l2374 63D8  
                      l1726 220A                        l1718 21D2                        l1670 203A  
                      l1662 1FF0                        l1654 1F8E                        l1646 1EE6  
                      l1638 1E90                        l1590 1C70                        l1582 1C1A  
                      l1574 1BD0                        l1566 1BA0                        l1558 1B42  
                      l2390 4ADC                        l2382 4A54                        l2438 5624  
                      l2470 40F6                        l2462 409E                        l2454 4066  
                      l2446 3FBC                        l2286 3F80                        l2198 45C0  
                      l1830 281C                        l1822 2762                        l1814 26BA  
                      l1806 262E                        l1750 230C                        l1742 22BC  
                      l1910 4F6A                        l1902 4F38                        l2710 09F6  
                      l2702 0986                        l2294 5FCA                        l3430 6142  
                      l3422 6112                        l3360 61AC                        l3600 5E70  
                      l2608 62DA                        l2640 5C5E                        l3096 2ED6  
                      l3088 2EA8                        l2560 35CC                        l2552 339A  
                      l2544 331E                        l2536 31E0                        l2528 3126  
                      l2632 50CC                        l2624 575E                        l2616 5684  
                      l2368 4D6C                        l2376 63FC                        l1728 2222  
                      l1680 209C                        l1672 204C                        l1664 2014  
                      l1656 1F9C                        l1648 1EEE                        l1592 1C86  
                      l1584 1C2C                        l1576 1BDC                        l1568 1BAC  
                      l2392 4AE0                        l2384 4A9A                        l2480 416C  
                      l2472 4120                        l2464 40C8                        l2448 3FCC  
                      l1840 2886                        l1832 284E                        l1824 278E  
                      l1816 26E6                        l1808 2656                        l1760 2398  
                      l1752 2314                        l1744 22C0                        l1736 226C  
                      l1920 4FC4                        l1912 4F74                        l1904 4F44  
                      l2800 106A                        l2720 0AAC                        l2712 0A06  
                      l2296 5FFC                        l3432 614A                        l3424 611A  
                      l3440 602A                        l3362 61CA                        l3354 6166  
                      l3290 6534                        l3610 5EC2                        l3602 5E82  
                      l2650 5CAE                        l2642 5C6A                        l3098 2EE8  
                      l2562 35D2                        l2554 339C                        l2538 31E8  
                      l2546 3350                        l2634 5138                        l2626 5076  
                      l2618 56AC                        l2378 6400                        l1690 20D6  
                      l1682 20AE                        l1674 205C                        l1666 2026  
                      l1658 1FAE                        l1594 1CA2                        l1586 1C42  
                      l1578 1BE8                        l2394 4AFE                        l2490 41DC  
                      l2482 4170                        l2474 4136                        l2466 40CC  
                      l2458 407A                        l1850 28FA                        l1834 2860  
                      l1842 289A                        l1826 27D2                        l1818 270E  
                      l1770 23F0                        l1762 239C                        l1754 233C  
                      l1746 22D2                        l1738 2286                        l1922 4FF2  
                      l1914 4F92                        l1930 5042                        l1906 4F48  
                      l2810 10CE                        l2802 1082                        l2730 0B5A  
                      l2722 0ABA                        l2714 0A1A                        l2706 098E  
                      l3434 615A                        l3426 612A                        l3450 6060  
                      l3442 6032                        l3522 62EC                        l3364 61EA  
                      l3356 6186                        l3292 6554                        l3604 5E92  
                      l3620 5AE8                        l2652 5CCC                        l1940 51CC  
                      l2564 35E4                        l2556 33DC                        l2548 335C  
                      l2636 51B4                        l2628 5078                        l1692 20EE  
                      l1676 2070                        l1684 20B2                        l1588 1C5E  
                      l1596 1CB4                        l2396 4B0E                        l2388 4AA8  
                      l2492 41E0                        l2484 4182                        l2476 4146  
                      l2468 40E4                        l1860 2942                        l1852 2904  
                      l1844 28AA                        l1836 2870                        l1828 27F8  
                      l1780 2450                        l1772 2418                        l1764 23AE  
                      l1756 2362                        l1748 22E4                        l1932 5054  
                      l1924 5016                        l1916 4F96                        l1908 4F50  
                      l2900 168E                        l2820 1156                        l2812 10F0  
                      l2804 1096                        l2740 0BE6                        l2732 0B7C  
                      l2724 0AC2                        l2716 0A6E                        l2708 09D4  
                      l2660 0702                        l3700 3D04                        l3428 6132  
                      l3460 6088                        l3452 6068                        l3444 6042  
                      l3436 6012                        l3366 61FC                        l3358 6198  
                      l3294 64E8                        l3606 5E9C                        l3622 5AF4  
                      l1950 520A                        l1942 51DC                        l2566 3612  
                      l2558 34AC                        l2638 51BC                        l1694 20F8  
                      l1678 208A                        l1686 20C2                        l1598 1CB8  
                      l2398 4B1E                        l2486 41BA                        l2478 415C  
                      l1870 29EC                        l1862 2952                        l1846 28AE  
                      l1838 2874                        l1790 2514                        l1782 2472  
                      l1774 242A                        l1766 23C0                        l1758 237E  
                      l1934 5060                        l1926 501A                        l1918 4FA6  
                      l2910 16F8                        l2902 16A2                        l2830 11D0  
                      l2822 1166                        l2814 1100                        l2806 10A6  
                      l2750 0CEA                        l2742 0C26                        l2734 0B9E  
                      l2726 0AF6                        l2718 0A7E                        l2670 075A  
                      l2662 0724                        l2654 06AC                        l3462 6090  
                      l3454 6070                        l3446 604A                        l3438 601A  
                      l3710 5972                        l3702 5930                        l3368 6210  
                      l3296 64F4                        l3288 6528                        l3608 5EAA  
                      l3624 5B32                        l2648 5C72                        l1960 5260  
                      l1952 5224                        l1944 51E8                        l1688 20C6  
                      l2488 41CC                        l1880 2A4E                        l1872 2A0C  
                      l1864 2982                        l1848 28BE                        l1856 2918  
                      l1792 253A                        l1784 249A                        l1776 243C  
                      l1768 23E8                        l1928 5024                        l2920 17AE  
                      l2912 1728                        l2904 16BC                        l2832 11E0  
                      l2824 1184                        l2816 111E                        l2808 10BE  
                      l2760 0E06                        l2752 0D32                        l2744 0C5A  
                      l2736 0BAE                        l2728 0B46                        l2680 081C  
                      l2672 0780                        l2664 0738                        l2656 06D8  
                      l3800 4DA2                        l3464 65EE                        l3560 65CC  
                      l3456 6078                        l3448 6058                        l3720 5998  
                      l3704 594A                        l3298 6516                        l3570 6252  
                      l3626 5B50                        l1970 52EC                        l1962 528E  
                      l1954 522E                        l1946 51EE                        l1938 51C8  
                      l1698 210C                        l1882 2A5E                        l1874 2A1C  
                      l1858 292A                        l1866 29A0                        l1794 255C  
                      l1786 24CC                        l2930 1826                        l2922 17C6  
                      l2914 1750                        l2906 16D4                        l2850 130C  
                      l2834 1202                        l2842 12B0                        l2818 1132  
                      l2826 1198                        l2762 0E3A                        l2754 0D58  
                      l2746 0C72                        l2738 0BC2                        l2690 08B4  
                      l2682 083A                        l2674 07AE                        l2666 073C  
                      l2658 06F0                        l3466 65F0                        l3562 65D6  
                      l3458 6080                        l3730 59D2                        l3714 5986  
                      l3706 5956                        l3580 627A                        l3572 6264  
                      l1972 52F8                        l1964 52B2                        l1956 524C  
                      l1948 51FE                        l1884 2A6E                        l1876 2A24  
                      l1868 29C0                        l1796 2578                        l1788 24F8  
                      l1980 5A2E                        l1892 4F02                        l2940 18A8  
                      l2932 1836                        l2924 17DE                        l2916 1758  
                      l2908 16E8                        l2860 1390                        l2852 132C  
                      l2844 12CA                        l2836 125A                        l2828 11B8  
                      l2780 0F86                        l2772 0ECC                        l2764 0E54  
                      l2756 0D8C                        l2748 0CA6                        l2692 08C0  
                      l2676 07B6                        l2684 0868                        l3660 3A66  
                      l3804 4DB0                        l3468 65FC                        l3564 65D8  
                      l3732 59DA                        l3708 5962                        l3820 5DF8  
                      l3812 5DA6                        l3582 627C                        l3574 6266  
                      l1966 52BC                        l1958 5250                        l1878 2A30  
                      l1886 2A86                        l1798 259E                        l1990 5A88  
                      l1982 5A40                        l1894 4F06                        l2942 18C6  
                      l2934 1854                        l2926 17EE                        l2918 1782  
                      l2870 1488                        l2862 13A2                        l2854 1352  
                      l2846 12DA                        l2838 1298                        l2790 0FE0  
                      l2766 0E6A                        l2758 0DE0                        l2774 0EF8  
                      l2694 08E2                        l2686 0892                        l2678 07D8  
                      l2950 1918                        l3670 3B50                        l3662 3AF6  
                      l3654 3A3E                        l3806 4EE4                        l3566 65E8  
                      l3558 65CA                        l3734 59E6                        l3742 59FA  
                      l3726 59B0                        l3830 5E40                        l3822 5E0E  
                      l3814 5DBE                        l3584 6284                        l3576 626E  
                      l3568 6232                        l1968 52DA                        l2960 48B4  
                      l1888 2A9C                        l1992 5AA0                        l1984 5A44  
                      l1976 5A0E                        l1896 4F16                        l2944 18EC  
                      l2928 180C                        l2936 187E                        l2880 156A  
                      l2872 14C6                        l2864 13B2                        l2856 135C  
                      l2848 12F8                        l2792 0FE4                        l2776 0F26  
                      l2768 0E8C                        l2952 1958                        l2696 0926  
                      l2688 0896                        l3680 3C12                        l3672 3B5C  
                      l3664 3B34                        l3656 3A4A                        l3840 609A  
                      l3808 4EEE                        l3736 59F4                        l3728 59C6  
                      l3752 545E                        l3824 5E24                        l3816 5DCC  
                      l3832 64A8                        l3594 6612                        l3578 6270  
                      l2970 4A3E                        l2962 498A                        l1994 5AA4  
                      l1986 5A54                        l1978 5A24                        l1898 4F22  
                      l2946 1904                        l2938 1898                        l2890 15E4  
                      l2882 157A                        l2874 14DA                        l2866 13D0  
                      l2858 1368                        l2794 0FFC                        l2786 0F8C  
                      l2778 0F7E                        l2698 0944                        l3690 3CA6  
                      l3682 3C22                        l3674 3B92                        l3666 3B38  
                      l3658 3A56                        l3850 60D4                        l3842 60A4  
                      l3770 54E6                        l3754 5466                        l3746 5440  
                      l3826 5E30                        l3818 5DE2                        l3834 64C0  
                      l2980 471A                        l3596 5E4C                        l2964 49B4  
                      l2972 4A46                        l2956 4882                        l1996 5AB6  
                      l1988 5A66                        l2892 1608                        l2884 1598  
                      l2876 14F8                        l2868 1430                        l2796 103C  
                      l3692 3CB2                        l3684 3C2E                        l3676 3BAA  
                      l3668 3B44                        l3852 60E4                        l3844 60AA  
                      l3772 54F8                        l3780 5512                        l3764 54A0  
                      l3756 5474                        l3748 5452                        l3828 5E3C  
                      l3836 64DE                        l3860 576A                        l2982 476A  
                      l2990 484A                        l2974 46A6                        l3598 5E5E  
                      l2966 49F6                        l2958 4884                        l1998 5AD4  
                      l2894 1626                        l2886 15AC                        l2878 1550  
                      l2798 1056                        l3694 3CE6                        l3686 3C62  
                      l3678 3BDE                        l3854 60F0                        l3846 60C0  
                      l3782 5520                        l3774 5502                        l3766 54B2  
                      l3758 547E                        l3838 64E2                        l3870 57D8  
                      l3862 576E                        l2992 486E                        l2984 47BA  
                      l2976 46A8                        l2968 4A1A                        l2896 1650  
                      l2888 15CA                        l3696 3CF6                        l3688 3C96  
                      l3848 60CC                        l3784 552C                        l3768 54CE  
                      l3792 6422                        l2986 47E4                        l2994 4876  
                      l2978 46D2                        l2898 1660                        l3698 3D02  
                      l3786 5550                        l3794 6424                        l3874 580C  
                      l3866 57A4                        l3858 5766                        l2988 4826  
                      l2996 2AC6                        l3796 6462                        l2998 2AE0  
                      l3798 4D7E                        l3878 5840                        STR_1 0691  
                      STR_2 069B                        u3000 6112                        u3001 610E  
                      u3010 612A                        u3011 6126                        u3020 6142  
                      u3021 613E                        u3030 615A                        u3031 6156  
                      u3300 5452                        u3301 544E                        u3310 548E  
                      u3311 548A                        u3320 54A0                        u3400 5808  
                      u3321 549C                        u3401 5804                        u3250 5972  
                      u3330 54B2                        u3410 583C                        u3251 596E  
                      u3331 54AE                        u3411 5838                        u3260 5986  
                      u3340 54CE                        u3261 5982                        u3341 54CA  
            _Inicializa_ADC 65EE                        u3270 5994                        u3350 54F8  
                      u3271 5990                        u3351 54F4                        u3360 4DA2  
                      u3280 59AC                        u3361 4D9E                        u3281 59A8  
                      u3370 60C0                        u3290 59C6                        u3371 60BC  
                      u3427 6020                        u3291 59C2                        u3380 57A0  
                      u3437 6038                        u3381 579C                        u3390 57D4  
                      u3447 6050                        u3391 57D0                        u3457 65DE  
                      _TOSH 000FFE                        _TOSL 000FFD                        _WREG 000FE8  
                      _TOSU 000FFF                        _main 5766                        _msg1 0045  
                      _msg2 003B                        _sem1 0029                        _sem2 0017  
                      _sem3 0005                        _sem4 0080                        fsr0h 000FEA  
                      fsr1h 000FE2                        indf0 000FEF                        fsr2h 000FDA  
                      fsr0l 000FE9                        indf1 000FE7                        indf2 000FDF  
                      fsr1l 000FE1                        fsr2l 000FD9                        btemp 0062  
                      prodh 000FF4                        prodl 000FF3                        start 000C  
           SRAMalloc@nBytes 009F             __end_of_Lcd_Cmd 65EE                ___param_bank 000000  
           __end_of_MsDelay 5D04             SRAMalloc@segLen 009D             __end_of___fladd 2264  
                     ?_main 004F             __end_of___fldiv 30E8             __end_of___awdiv 5076  
           __end_of___lbdiv 5AE4             __end_of___flneg 6422             __end_of___awmod 530E  
           __end_of___lbmod 5DA6             __end_of___flmul 2ABE             __end_of___flsub 659C  
           __end_of___fltol 4BF8             __end_of___lldiv 543C             __end_of___llmod 5664  
                     i2l162 5C1C                       u20_20 1ADA                       u20_21 1AD6  
                     u21_20 1AF0                       u21_21 1AEC                       u30_20 1DAE  
                     u22_20 1B02                       u22_21 1AFE                       u30_25 1D9E  
                     u31_20 1DDA                       u23_20 1B8C                       u31_21 1DD6  
                     u23_21 1B88                       u40_20 2014                       u32_20 1DEA  
                     u24_20 1B9C                       u16_20 19D4                       u40_21 2010  
                     u32_21 1DE6                       u24_21 1B98                       u16_21 19D0  
                     u41_20 2026                       u33_20 1DFC                       u25_20 1CE6  
                     u17_20 19EA                       u41_21 2022                       u33_21 1DF8  
                     u25_21 1CE2                       u17_21 19E6                       _TMR0L 000FD6  
                     u50_20 2146                       u42_20 205C                       u34_20 1E68  
                     u26_20 1D0E                       u18_20 19FC                       u50_21 2142  
                     u42_21 2058                       u34_21 1E64                       u26_21 1D06  
                     u18_21 19F8                       u51_20 2170                       u43_20 2070  
                     u35_20 1E78                       u19_20 1AA0                       u43_21 206C  
                     u35_21 1E74                       u19_21 1A9C                       u51_25 2160  
                     u52_20 2188                       u44_20 20AE                       u36_20 1EB2  
                     u28_20 1D46                       u27_28 1D10                       u60_20 22E4  
                     u52_21 2184                       u44_21 20AA                       u36_21 1EAE  
                     u28_21 1D42                       u60_21 22E0                       u53_20 219E  
                     u45_20 20C2                       u37_20 1EE0                       u29_20 1D80  
                     u61_20 2398                       u53_21 219A                       u45_21 20BE  
                     u29_21 1D7C                       u61_21 2394                       u37_25 1ED0  
                     u54_20 21B0                       u46_20 20D6                       u38_20 1F2A  
                     u70_20 28AA                       u62_20 23AE                       u54_21 21AC  
                     u46_21 20D2                       u38_21 1F26                       u70_21 28A6  
                     u62_21 23AA                       u55_20 21D2                       u47_20 20EE  
                     u39_20 1FAE                       u71_20 28BE                       u63_20 23C0  
                     u55_21 21CE                       u47_21 20EA                       u39_21 1FAA  
                     u71_21 28BA                       u63_21 23BC                       u56_20 21E6  
                     u48_20 2108                       u72_20 28FA                       u64_20 242A  
                     u80_20 4F16                       u56_21 21E2                       u48_21 2104  
                     u72_21 28F6                       u64_21 2426                       u80_21 4F12  
                     u57_20 2232                       u49_20 211E                       u73_20 2914  
                     u65_20 243C                       u81_20 4F38                       u57_21 222E  
                     u49_21 211A                       u73_21 2910                       u65_21 2438  
                     u81_21 4F34     __size_of_Lcd_Set_Cursor 009C                       u90_20 5260  
                     u74_20 292A                       u58_20 22BC                       u82_20 4F6A  
                     u90_21 525C                       u74_21 2926                       u58_21 22B8  
                     u82_21 4F66                       u66_25 25AE                       u91_20 528E  
                     u75_20 2952                       u59_20 22D2                       u83_20 4FA6  
                     u91_21 528A                       u75_21 294E                       u59_21 22CE  
                     u83_21 4FA2                       u67_25 2666                       u92_20 52DA  
                     u76_20 297C                       u84_20 4FF2                       u92_21 52D6  
                     u84_21 4FEE                       u76_25 296C                       u68_25 2808  
                     u93_20 52EC                       u77_20 29C0                       u69_20 2870  
                     u85_20 5042                       u93_21 52E8                       u77_21 29BC  
                     u69_21 286C                       u85_21 503E                       u78_20 2A0C  
                     u94_20 5A24                       u86_20 5054                       u78_21 2A08  
                     u94_21 5A20                       u86_21 5050                       u87_20 51DC  
                     u79_20 2A5E                       u95_20 5A54                       u87_21 51D8  
                     u79_21 2A5A                       u95_21 5A50                       u88_20 51FE  
                     u96_20 5A88                       u88_21 51FA                       u96_21 5A84  
                     u89_20 5224                       u97_20 5AD4                       u89_21 5220  
                     u97_21 5AD0                       u98_20 5D60                       u98_21 5D5C  
                     u99_20 5D96                       u99_21 5D92                  __SRAMmerge 5930  
    __end_of_Inicializa_ADC 6600             __end_of_dpowers 0691                       _scale 3618  
           __end_of_isdigit 63D8          __size_of_SRAMalloc 0126             __end_of_task_m1 61CA  
           __end_of_task_m2 622E             __end_of_task_um 6566                       tablat 000FF5  
                     ltemp0 0062                       ltemp1 0066                       ltemp2 006A  
                     plusw1 000FE3                       plusw2 000FDB                       ttemp0 0062  
                     ttemp1 0065                       ttemp2 0068                       ttemp3 006B  
                     ttemp5 0063                       ttemp6 0066                       ttemp7 006A  
                     status 000FD8                       wtemp0 0062                       wtemp1 0064  
                     wtemp2 0066                       wtemp3 0068                       wtemp4 006A  
                     wtemp5 006C                       wtemp8 0063             __end_of_sprintf 197C  
          __end_of_Lcd_Init 609A            __end_of_Lcd_Port 6166             __initialization 633E  
              __end_of_main 584C                      ??_main 0062          __size_of_Lcd_Clear 0012  
             __activetblptr 000002        __size_of__tdiv_to_l_ 0252                ?_pipe_create 005F  
           ?_Inicializa_ADC 004F                      _ADCON0 000FC2                      _ADCON1 000FC1  
                    _ADCON2 000FC0                      _ADRESH 000FC4                      _ADRESL 000FC3  
          ??_timer_zero_int 004F                      u101_20 5F6A                      u101_21 5F66  
                    u102_20 4218                      u110_20 63BE                      u102_21 4214  
                    u110_21 63BA                      u111_20 4482                      u103_20 4356  
                    u103_21 4352                      u111_25 447A                      u120_20 4658  
                    u112_20 44A4                      u104_20 3628                      u200_20 0D8C  
                    u120_21 4654                      u112_21 44A0                      u104_21 3624  
                    u200_21 0D88                      u121_20 4684                      u113_20 44D8  
                    u105_20 364C                      u201_20 0DE0                      u121_21 4680  
                    u105_21 3648                      u201_21 0DDC                      u113_25 44D0  
                    u201_25 0DD2                      u130_20 3F3A                      u122_20 3D4E  
                    u114_20 44FA                      u106_20 376E                      u210_20 1152  
                    u202_20 0E06                      u130_21 3F36                      u114_21 44F6  
                    u106_21 376A                      u210_21 114E                      u202_21 0E02  
                    u122_25 3D44                      u131_20 3F54                      u123_20 3D6C  
                    u115_20 4594                      u107_20 384C                      u211_20 11B8  
                    u203_20 0E3A                      u131_21 3F50                      u123_21 3D68  
                    u115_21 4590                      u107_21 3848                      u211_21 11B4  
                    u203_21 0E36                      u140_20 4C34                      u132_20 3F80  
                    u124_20 3DA2                      u116_20 45F0                      u108_20 396E  
                    u220_20 1608                      u212_20 11D0                      u204_20 0FDC  
                    u140_21 4C30                      u132_21 3F7C                      u116_21 45EC  
                    u108_21 396A                      u220_21 1604                      u212_21 11CC  
                    u204_21 0FD8                      u124_25 3D98                      u141_20 4C80  
                    u133_20 534A                      u125_20 3DC0                      u117_20 4600  
                    u109_20 63A8                      u221_20 1650                      u213_20 12C6  
                    u205_20 0FFC                      u141_21 4C7C                      u133_21 5346  
                    u125_21 3DBC                      u117_21 45FC                      u109_21 63A4  
                    u221_21 164C                      u213_21 12C2                      u205_21 0FF8  
                    i2l3280 5C0C                      i2l3272 5BE0                      u142_20 4CA0  
                    u150_20 4B34                      u134_20 537A                      u126_20 3E92  
                    u118_20 4616                      u230_20 1826                      u222_20 168E  
                    u214_20 132C                      u206_20 1056                      u142_21 4C9C  
                    u150_21 4B30                      u134_21 5376                      u126_21 3E8E  
                    u118_21 4612                      u230_21 1822                      u222_21 168A  
                    u214_21 1328                      u206_21 1052                      i2l3282 5C14  
                    i2l3274 5BE2                      i2l3276 5BE6                      i2l3278 5BF2  
                    u311_20 5E5E                      u143_20 4CF0                      u151_20 4B5C  
                    u135_20 53C0                      u127_20 3EEC                      u119_20 463E  
                    u231_20 187A                      u223_20 16BC                      u215_20 1352  
                    u207_20 1082                      u311_21 5E5A                      u143_21 4CEC  
                    u151_21 4B58                      u135_21 53BC                      u127_21 3EE8  
                    u119_21 463A                      u231_21 1876                      u223_21 16B8  
                    u215_21 134E                      u207_21 107E                      u312_20 5EC2  
                    u240_20 2B16                      u144_20 4D6C                      u152_20 4B76  
                    u136_20 541A                      u160_20 3FBC                      u128_20 3EFC  
                    u232_20 1898                      u224_20 16D4                      u216_20 13A2  
                    u208_20 10A6                      u320_20 3BDE                      u312_21 5EBE  
                    u240_21 2B12                      u144_21 4D68                      u152_21 4B72  
                    u136_21 5416                      u160_21 3FB8                      u128_21 3EF8  
                    u232_21 1894                      u224_21 16D0                      u216_21 139E  
                    u208_21 10A2                      u320_21 3BDA                      u313_20 5B2C  
                    u241_20 2B2C                      u137_20 5888                      u145_20 63FC  
                    u153_20 4BA2                      u161_20 3FCC                      u129_20 3F12  
                    u233_20 18EC                      u225_20 16F8                      u217_20 1566  
                    u209_20 10BE                      u321_20 3C12                      u241_21 2B28  
                    u137_21 5884                      u145_21 63F8                      u153_21 4B9E  
                    u161_21 3FC8                      u129_21 3F0E                      u233_21 18E8  
                    u225_21 16F4                      u217_21 1562                      u209_21 10BA  
                    u321_21 3C0E                      u313_27 5B22                      u314_20 5B88  
                    u250_20 2E40                      u242_20 2B3E                      u138_20 58D4  
                    u154_20 4BB4                      u146_20 4A7C                      u162_20 4066  
                    u234_20 1904                      u226_20 1728                      u218_20 15C6  
                    u322_20 3C62                      u250_21 2E3C                      u242_21 2B3A  
                    u138_21 58D0                      u154_21 4BB0                      u162_21 4062  
                    u234_21 1900                      u226_21 1724                      u218_21 15C2  
                    u322_21 3C5E                      u146_25 4A72                      u314_27 5B7E  
                    u315_20 5B98                      u251_20 2E84                      u243_20 2C02  
                    u171_20 3126                      u139_20 591E                      u155_20 4BD6  
                    u147_20 4A9A                      u163_20 40C4                      u235_20 1958  
                    u227_20 1782                      u219_20 15E4                      u323_20 3C96  
                    u315_21 5B94                      u251_21 2E80                      u243_21 2BFE  
                    u171_21 3122                      u139_21 591A                      u147_21 4A96  
                    u163_21 40C0                      u235_21 1954                      u227_21 177E  
                    u219_21 15E0                      u323_21 3C92                      u180_20 62A2  
                    u260_20 2FDE                      u252_20 2EA8                      u244_20 2C18  
                    u172_20 331E                      u236_20 48B4                      u148_20 4AD0  
                    u156_20 5588                      u164_20 411C                      u228_20 17C6  
                    u324_20 3CE6                      u180_21 629E                      u252_21 2EA4  
                    u244_21 2C14                      u172_21 331A                      u236_21 48B0  
                    u156_21 5584                      u164_21 4118                      u228_21 17C2  
                    u324_21 3CE2                      u260_25 2FCE                      u148_25 4AC6  
                    u261_20 3022                      u253_20 2ED2                      u245_20 2C2A  
                    u173_20 339A                      u237_20 49B4                      u181_20 56AC  
                    u149_20 4B1E                      u157_20 55B8                      u165_20 4146  
                    u229_20 17DE                      u261_21 301E                      u253_21 2ECE  
                    u245_21 2C26                      u173_21 3396                      u237_21 49B0  
                    u181_21 56A8                      u149_21 4B1A                      u157_21 55B4  
                    u165_21 4142                      u229_21 17DA                      u238_20 46D2  
                    u262_20 3066                      u254_20 2F0C                      u246_20 2CB6  
                    u174_20 35E4                      u182_20 50CC                      u158_20 55EC  
                    u166_20 415C                      u190_20 09F6                      u238_21 46CE  
                    u262_21 3062                      u254_21 2F08                      u246_21 2CB2  
                    u174_21 35E0                      u182_21 50C8                      u158_21 55E8  
                    u166_21 4158                      u190_21 09F2                      u239_20 47E4  
                    u183_20 5CAE                      u263_20 309E                      u255_20 2F20  
                    u247_20 2D1E                      u159_20 5642                      u167_20 416C  
                    u191_20 0A06                      u239_21 47E0                      u183_21 5CAA  
                    u263_21 309A                      u255_21 2F1C                      u247_21 2D1A  
                    u159_21 563E                      u167_21 4168                      u191_21 0A02  
                    u184_20 5CFA                      u256_20 2F5C                      u248_20 2DC2  
                    u168_20 41CC                      u192_20 0A7E                      u184_21 5CF6  
                    u256_21 2F58                      u248_21 2DBE                      u168_21 41C8  
                    u192_21 0A7A                      u273_20 65AC                      u257_20 2F76  
                    u249_20 2DF6                      u169_20 41DC                      u193_20 0AF6  
                    u185_20 06F0                      u273_21 65A6                      u257_21 2F72  
                    u249_21 2DF2                      u169_21 41D8                      u193_21 0AF2  
                    u185_21 06EC                      u273_26 65AE                      u258_20 2F8C  
                    u194_20 0B26                      u186_20 07AE                      u258_21 2F88  
                    u186_21 07AA                      u194_25 0B1C                      u346_27 6268  
                    u291_20 6198                      u283_20 6544                      u259_20 2FB4  
                    u195_20 0BAE                      u187_20 0868                      u291_21 6194  
                    u283_21 653E                      u259_21 2FB0                      u195_21 0BAA  
                    u187_21 0864                      u283_26 6546                      u347_27 627E  
                    u292_20 61AA                      u284_20 6504                      u196_20 0C5A  
                    u188_20 0892                      u292_21 61A6                      u284_21 64FE  
                    u196_21 0C56                      u188_21 088E                      u284_26 6506  
                    u293_20 61FC                      u285_20 6482                      u197_20 0CA6  
                    u189_20 0972                      u293_21 61F8                      u285_21 647C  
                    u197_21 0CA2                      u189_21 096E                      u285_26 6484  
                    u294_20 620E                      u198_20 0CEA                      u294_21 620A  
                    u198_21 0CE6                      u199_20 0D58                      u199_21 0D54  
   __size_of_Lcd_Write_Char 0060                      _STATUS 000FD8                      _STKPTR 000FFC  
          __end_of___xxtofl 4202                      _LerADC 628E        __size_of_create_task 017C  
          __end_of__powers_ 0635                      ___flge 4BF8                      ___fleq 584C  
      __size_of_conf_timer0 0012                      ___wmul 5F7C                      _buffer 0001  
         __end_of_SRAMalloc 5562                      _fround 4202                      clear_0 635E  
                    clear_1 6370                      clear_2 637C            create_task@prior 0094  
          __end_of_sem_wait 5766            __end_of_sem_post 51C4            __end_of_task_lcd 3D1E  
              __pdataCOMRAM 006E                      lltemp0 0062                __mediumconst 0000  
                 ??_task_m1 005D                   ??_task_m2 005E                      preinc2 000FDC  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
               ?__SRAMmerge 005F            __end_of_start_OS 662C                  __accesstop 0080  
   __end_of__initialization 6382             __CFG_PBADEN$OFF 000000           __end_of_Lcd_Clear 6624  
             ___rparam_used 000001              __pcstackCOMRAM 004F                  ___inthi_sp 0588  
             __end_of_scale 3A36             __SRAMmerge@uSum 0092              _Lcd_Set_Cursor 5E46  
                __div_to_l_ 3D1E                   ?_Lcd_Init 004F                  __pbssBANK0 0080  
             __uDynamicHeap 034C         __size_of__SRAMmerge 00DA          __size_of_pipe_read 01DC  
        __size_of_os_config 0040   __size_of_Lcd_Write_String 00BE      __end_of_Lcd_Set_Cursor 5EE2  
        __size_of_task_idle 002E          __size_of_task_dois 0040          __size_of_task_tres 0042  
                ??_Lcd_Init 005F                  _dispatcher 30E8        __size_of_pipe_create 0052  
               task_m1@dado 005D                 task_m2@dado 005E              _Lcd_Write_Char 622E  
                   _Lcd_Cmd 65CA                     _MsDelay 5C56             __size_of_LerADC 005E  
         __end_of__npowers_ 0669                     __Hparam 0000                     __Lparam 0000  
           __size_of___flge 0186             __size_of___fleq 00E4                     ___fladd 197C  
                   ___fldiv 2ABE                     ___awdiv 4EFA                     ___lbdiv 5A0A  
                   ___flneg 63D8                     ___awmod 51C4                     ___lbmod 5D04  
                   ___flmul 2264                     ___flsub 6566                     ___fltol 4A50  
                   ___lldiv 530E             __size_of___wmul 0096                     ___llmod 5562  
                 ?_start_OS 004F                __psmallconst 0600                     _f_aptos 00A2  
                   __pcinit 633E             __size_of_fround 0252                     __ramtop 0600  
             ?_SRAMInitHeap 004F                     __ptext0 5766                     __ptext1 6624  
                   __ptext2 64A8                     __ptext3 5DA6                     __ptext4 6422  
                   __ptext5 62EC                     __ptext6 543C                     __ptext7 5930  
                   __ptext8 6012                     __ptext9 65CA                   _T0CONbits 000FD5  
          ??_Inicializa_ADC 005F                     _dpowers 0669                     _isdigit 638C  
                   _task_m1 6166                     _task_m2 61CA                     _task_um 6528  
                   _quantum 006E                     _sprintf 06A4      __end_of_Lcd_Write_Char 628E  
            __pintcode_body 5BA2        end_of_initialization 6382           __end_of_pipe_read 4882  
         __end_of_os_config 64E8                  _sem_create 6422           __end_of_task_idle 65CA  
         __end_of_task_dois 6528               __Lmediumconst 0000                     int_func 5BA2  
         __end_of_task_tres 64A8                  _pipe_write 4882               sem_create@sem 0092  
                   postdec0 000FED                     postdec1 000FE5                     postdec2 000FDD  
                   postinc0 000FEE                     postinc1 000FE6                     postinc2 000FDE  
                ??_start_OS 005F              ??_SRAMInitHeap 005F                   _PORTCbits 000F82  
                 _PORTDbits 000F83                   _SRAMalloc 543C                  _stack_size 0003  
                 _TRISAbits 000F92                   _TRISBbits 000F93                   _TRISCbits 000F94  
                 _TRISDbits 000F95                ??__SRAMmerge 0061                  fp__task_um 000C  
             ??_create_task 005F               ??_conf_timer0 005F         __size_of__div_to_l_ 0284  
            __end_of_LerADC 62EC                   _Lcd_Clear 6612              __end_of___flge 4D7E  
            __end_of___fleq 5930          __end_of__SRAMmerge 5A0A              __end_of___wmul 6012  
          _Lcd_Write_String 5AE4               __pidataCOMRAM 662C              __end_of_fround 4454  
                ?_SRAMalloc 0097           _user_tasks_config 5DA6         start_initialization 633E  
        SRAMalloc@segHeader 009E            __SRAMmerge@pSegA 005F            __SRAMmerge@pSegB 0093  
       __end_of__tdiv_to_l_ 46A6            __SRAMmerge@uSegA 0095            __SRAMmerge@uSegB 0096  
        ?_user_tasks_config 004F           __size_of_Lcd_Init 0088           __size_of_Lcd_Port 0064  
               ?_sem_create 0092         ??_user_tasks_config 0062        sem_create@init_value 0094  
   __size_of_timer_zero_int 5C4E         __end_of_create_task 4EFA         __size_of_dispatcher 0530  
       __end_of_conf_timer0 6612   __end_of_user_tasks_config 5E46                 __pbssBIGRAM 00A2  
               __pbssCOMRAM 0001               __pcstackBANK0 0092           __size_of___xxtofl 0260  
      __end_of_SRAMInitHeap 6102                   __pintcode 0008           __size_of_sem_wait 0102  
         __size_of_sem_post 014E           __size_of_task_lcd 02E8                   __npowers_ 0635  
               __tdiv_to_l_ 4454           __size_of_start_OS 0008         __size_of_sem_create 0044  
               __smallconst 0600                 ??_SRAMalloc 0099         __size_of_pipe_write 01CE  
             ??_pipe_create 0061                    ?_task_m1 004F                    ?_task_m2 004F  
      __end_of_rr_scheduler 5F7C              __size_of_scale 041E                 _create_task 4D7E  
                 _pipe_read 46A6                   _os_config 64A8                pipe_create@p 005F  
               _conf_timer0 6600                   _task_idle 659C                   _task_dois 64E8  
        __end_of__div_to_l_ 3FA2                    i2u282_40 5C0C                    i2u282_41 5C08  
                 _task_tres 6466  __size_of_user_tasks_config 00A0                  _ADCON0bits 000FC2  
                  _Lcd_Init 6012                    _Lcd_Port 6102         __end_of_pipe_create 633E  
  __end_of_Lcd_Write_String 5BA2            __size_of_Lcd_Cmd 0024            __size_of_MsDelay 00AE  
                ?_os_config 004F                    __Hrparam 0000              _timer_zero_int 0008  
                  __Lrparam 0000          __end_of_dispatcher 3618            __size_of___fladd 08E8  
          __size_of___fldiv 062A            __size_of___awdiv 017C            __size_of___lbdiv 00DA  
          __size_of___flneg 004A            __size_of___awmod 014A            __size_of___lbmod 00A2  
          __size_of___flmul 085A            __size_of___flsub 0036            __size_of___fltol 01A8  
          __size_of___lldiv 012E            __size_of___llmod 0102                    ___xxtofl 3FA2  
          __size_of_isdigit 004C            __size_of_task_m1 0064            __size_of_task_m2 0064  
     __size_of_SRAMInitHeap 0068                    __ptext10 6102                    __ptext11 65EE  
                  __ptext20 638C                    __ptext12 4D7E                    __ptext21 4202  
                  __ptext13 5F7C                    __ptext30 4A50                    __ptext22 5D04  
                  __ptext14 6600                    __ptext31 6566                    __ptext23 5A0A  
                  __ptext15 609A                    __ptext40 5EE2                    __ptext32 197C  
                  __ptext24 2264                    __ptext16 3A36                    __ptext41 51C4  
                  __ptext33 63D8                    __ptext25 4454                    __ptext17 06A4  
                  __ptext50 64E8                    __ptext42 2ABE                    __ptext34 4BF8  
                  __ptext26 3D1E                    __ptext18 3618                    __ptext51 6466  
                  __ptext43 5C56                    __ptext35 584C                    __ptext27 3FA2  
                  __ptext19 4EFA                    __ptext52 659C                    __ptext44 628E  
                  __ptext36 5664                    __ptext28 5562                    __ptext53 6166  
                  __ptext45 5AE4                    __ptext37 5076                    __ptext29 530E  
                  __ptext54 46A6                    __ptext46 622E                    __ptext38 4882  
                  __ptext55 61CA                    __ptext47 5E46                    __ptext39 30E8  
                  __ptext48 6612                    __ptext49 6528            __size_of_task_um 003E  
                  __powers_ 0601            __size_of_sprintf 12D8     __size_of_Inicializa_ADC 0012  
              ??_sem_create 005F               __size_of_main 00E6      __end_of_timer_zero_int 5C56  
                  _sem_wait 5664                    _sem_post 5076                    _task_lcd 3A36  
                  _start_OS 6624                _SRAMInitHeap 609A          __end_of_sem_create 6466  
     __size_of_rr_scheduler 009A                  _INTCONbits 000FF2          __end_of_pipe_write 4A50  
               _pipe_create 62EC                    intlevel1 0000                    intlevel2 0000  
           ?_timer_zero_int 004F                 ??_os_config 0062                _rr_scheduler 5EE2  
              ?_create_task 0092                ?_conf_timer0 004F  
