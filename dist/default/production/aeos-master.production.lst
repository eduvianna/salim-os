

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 09 18:25:33 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           ; Version 2.10
    46                           ; Generated 31/07/2019 GMT
    47                           ; 
    48                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4520 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80 ;;___wmul@product	offset	0
    81 ;;___wmul@multiplier	offset=-2 (param)
    82 ;;___wmul@multiplicand	offset=-4 (param)
    83 ;;seven_seg_set@first	offset	0
    84 ;;seven_seg_set@last	offset	2
    85 ;;seven_seg_set@number	offset=-2 (param)
    86 ;;update_ports@number	offset=-2 (param)
    87 ;;update_ports@display	offset=-4 (param)
    88 ;;___awdiv@quotient	offset	0
    89 ;;___awdiv@sign	offset	2
    90 ;;___awdiv@counter	offset	3
    91 ;;___awdiv@dividend	offset=-2 (param)
    92 ;;___awdiv@divisor	offset=-4 (param)
    93 ;;sem_wait@sem	offset=-2 (param)
    94 ;;sem_post@sem	offset=-2 (param)
    95 ;;dispatcher@state	offset=-1 (param)
    96 ;;rr_scheduler@next_task	offset	0
    97 ;;___awmod@sign	offset	0
    98 ;;___awmod@counter	offset	1
    99 ;;___awmod@dividend	offset=-2 (param)
   100 ;;___awmod@divisor	offset=-4 (param)
   101 ;;dispatcher@state	offset=-1 (param)
   102 ;;rr_scheduler@next_task	offset	0
   103 ;;___awmod@sign	offset	0
   104 ;;___awmod@counter	offset	1
   105 ;;___awmod@dividend	offset=-2 (param)
   106 ;;___awmod@divisor	offset=-4 (param)
   107                           
   108                           	psect	idataCOMRAM
   109  0016E2                     __pidataCOMRAM:
   110                           	opt callstack 0
   111                           
   112                           ;initializer for _BATTERY
   113  0016E2  0063               	dw	99
   114                           
   115                           ;initializer for _quantum
   116  0016E4  0008               	dw	8
   117  0000                     _TOS	set	4093
   118  0000                     _PORTC	set	3970
   119  0000                     _TRISC	set	3988
   120  0000                     _TRISBbits	set	3987
   121  0000                     _TRISDbits	set	3989
   122  0000                     _ADRESL	set	4035
   123  0000                     _ADRESH	set	4036
   124  0000                     _ADCON0bits	set	4034
   125  0000                     _ADCON2	set	4032
   126  0000                     _ADCON1	set	4033
   127  0000                     _ADCON0	set	4034
   128  0000                     _TRISAbits	set	3986
   129  0000                     _TMR0L	set	4054
   130  0000                     _STKPTR	set	4092
   131  0000                     _TOSL	set	4093
   132  0000                     _TOSH	set	4094
   133  0000                     _TOSU	set	4095
   134  0000                     _BSR	set	4064
   135  0000                     _STATUS	set	4056
   136  0000                     _WREG	set	4072
   137  0000                     _PORTDbits	set	3971
   138  0000                     _T0CONbits	set	4053
   139  0000                     _INTCONbits	set	4082
   140                           
   141                           ; #config settings
   142  0000                     
   143                           	psect	cinit
   144  00146C                     __pcinit:
   145                           	opt callstack 0
   146  00146C                     start_initialization:
   147                           	opt callstack 0
   148  00146C                     __initialization:
   149                           	opt callstack 0
   150                           
   151                           ; Initialize objects allocated to COMRAM (4 bytes)
   152                           ; load TBLPTR registers with __pidataCOMRAM
   153  00146C  0EE2               	movlw	low __pidataCOMRAM
   154  00146E  6EF6               	movwf	tblptrl,c
   155  001470  0E16               	movlw	high __pidataCOMRAM
   156  001472  6EF7               	movwf	tblptrh,c
   157  001474  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   158  001476  6EF8               	movwf	tblptru,c
   159  001478  EE00  F06E         	lfsr	0,__pdataCOMRAM
   160  00147C  EE20 F004          	lfsr	2,4
   161  001480                     copy_data0:
   162  001480  0009               	tblrd		*+
   163  001482  CFF5 FFEE          	movff	tablat,postinc0
   164  001486  50DD               	movf	postdec2,w,c
   165  001488  50D9               	movf	fsr2l,w,c
   166  00148A  E1FA               	bnz	copy_data0
   167                           
   168                           ; Clear objects allocated to BIGRAM (1307 bytes)
   169  00148C  EE00  F0BC         	lfsr	0,__pbssBIGRAM
   170  001490  EE25 F01B          	lfsr	2,1307
   171  001494                     clear_0:
   172  001494  6AEE               	clrf	postinc0,c
   173  001496  50DD               	movf	postdec2,w,c
   174  001498  50D9               	movf	fsr2l,w,c
   175  00149A  E1FC               	bnz	clear_0
   176  00149C  50DA               	movf	fsr2h,w,c
   177  00149E  E1FA               	bnz	clear_0
   178                           
   179                           ; Clear objects allocated to BANK0 (60 bytes)
   180  0014A0  EE00  F080         	lfsr	0,__pbssBANK0
   181  0014A4  0E3C               	movlw	60
   182  0014A6                     clear_1:
   183  0014A6  6AEE               	clrf	postinc0,c
   184  0014A8  06E8               	decf	wreg,f,c
   185  0014AA  E1FD               	bnz	clear_1
   186                           
   187                           ; Clear objects allocated to COMRAM (64 bytes)
   188  0014AC  EE00  F001         	lfsr	0,__pbssCOMRAM
   189  0014B0  0E40               	movlw	64
   190  0014B2                     clear_2:
   191  0014B2  6AEE               	clrf	postinc0,c
   192  0014B4  06E8               	decf	wreg,f,c
   193  0014B6  E1FD               	bnz	clear_2
   194  0014B8                     end_of_initialization:
   195                           	opt callstack 0
   196  0014B8                     __end_of__initialization:
   197                           	opt callstack 0
   198  0014B8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   199  0014BA  6EF8               	movwf	tblptru,c
   200  0014BC  0100               	movlb	0
   201  0014BE  EFC6  F006         	goto	_main	;jump to C main() function
   202                           
   203                           	psect	bssCOMRAM
   204  000001                     __pbssCOMRAM:
   205                           	opt callstack 0
   206  000001                     _buffer:
   207                           	opt callstack 0
   208  000001                     	ds	2
   209  000003                     _stack_size:
   210                           	opt callstack 0
   211  000003                     	ds	2
   212  000005                     _sem2:
   213                           	opt callstack 0
   214  000005                     	ds	20
   215  000019                     _sem1:
   216                           	opt callstack 0
   217  000019                     	ds	20
   218  00002D                     _msg2:
   219                           	opt callstack 0
   220  00002D                     	ds	10
   221  000037                     _msg1:
   222                           	opt callstack 0
   223  000037                     	ds	10
   224                           
   225                           	psect	dataCOMRAM
   226  00006E                     __pdataCOMRAM:
   227                           	opt callstack 0
   228  00006E                     _BATTERY:
   229                           	opt callstack 0
   230  00006E                     	ds	2
   231  000070                     _quantum:
   232                           	opt callstack 0
   233  000070                     	ds	2
   234                           
   235                           	psect	bssBANK0
   236  000080                     __pbssBANK0:
   237                           	opt callstack 0
   238  000080                     _sem5:
   239                           	opt callstack 0
   240  000080                     	ds	20
   241  000094                     _sem4:
   242                           	opt callstack 0
   243  000094                     	ds	20
   244  0000A8                     _sem3:
   245                           	opt callstack 0
   246  0000A8                     	ds	20
   247                           
   248                           	psect	bssBIGRAM
   249  0000BC                     __pbssBIGRAM:
   250                           	opt callstack 0
   251  0000BC                     _f_aptos:
   252                           	opt callstack 0
   253  0000BC                     	ds	795
   254  0003D7                     __uDynamicHeap:
   255                           	opt callstack 0
   256  0003D7                     	ds	512
   257                           
   258                           	psect	cstackCOMRAM
   259  000041                     __pcstackCOMRAM:
   260                           	opt callstack 0
   261  000041                     ??_timer_zero_int:
   262  000041                     
   263                           ; 2 bytes @ 0x0
   264  000041                     	ds	14
   265  00004F                     ?_create_task:
   266                           	opt callstack 0
   267  00004F                     create_task@id:
   268                           	opt callstack 0
   269  00004F                     sem_create@sem:
   270                           	opt callstack 0
   271  00004F                     pipe_create@p:
   272                           	opt callstack 0
   273  00004F                     SRAMInitHeap@pHeap:
   274                           	opt callstack 0
   275  00004F                     __SRAMmerge@pSegA:
   276                           	opt callstack 0
   277                           
   278                           ; 2 bytes @ 0xE
   279  00004F                     	ds	2
   280  000051                     ??__SRAMmerge:
   281  000051                     create_task@prior:
   282                           	opt callstack 0
   283  000051                     sem_create@init_value:
   284                           	opt callstack 0
   285  000051                     SRAMInitHeap@count:
   286                           	opt callstack 0
   287                           
   288                           ; 2 bytes @ 0x10
   289  000051                     	ds	1
   290  000052                     __SRAMmerge@pSegB:
   291                           	opt callstack 0
   292                           
   293                           ; 2 bytes @ 0x11
   294  000052                     	ds	1
   295  000053                     create_task@f:
   296                           	opt callstack 0
   297                           
   298                           ; 2 bytes @ 0x12
   299  000053                     	ds	1
   300  000054                     __SRAMmerge@uSum:
   301                           	opt callstack 0
   302                           
   303                           ; 1 bytes @ 0x13
   304  000054                     	ds	1
   305  000055                     ??_create_task:
   306  000055                     __SRAMmerge@uSegA:
   307                           	opt callstack 0
   308                           
   309                           ; 1 bytes @ 0x14
   310  000055                     	ds	1
   311  000056                     __SRAMmerge@uSegB:
   312                           	opt callstack 0
   313                           
   314                           ; 1 bytes @ 0x15
   315  000056                     	ds	1
   316  000057                     ?_SRAMalloc:
   317                           	opt callstack 0
   318                           
   319                           ; 2 bytes @ 0x16
   320  000057                     	ds	2
   321  000059                     ??_SRAMalloc:
   322                           
   323                           ; 1 bytes @ 0x18
   324  000059                     	ds	2
   325  00005B                     SRAMalloc@temp:
   326                           	opt callstack 0
   327                           
   328                           ; 2 bytes @ 0x1A
   329  00005B                     	ds	2
   330  00005D                     SRAMalloc@segLen:
   331                           	opt callstack 0
   332                           
   333                           ; 1 bytes @ 0x1C
   334  00005D                     	ds	1
   335  00005E                     SRAMalloc@segHeader:
   336                           	opt callstack 0
   337                           
   338                           ; 1 bytes @ 0x1D
   339  00005E                     	ds	1
   340  00005F                     SRAMalloc@nBytes:
   341                           	opt callstack 0
   342                           
   343                           ; 1 bytes @ 0x1E
   344  00005F                     	ds	1
   345  000060                     SRAMalloc@pHeap:
   346                           	opt callstack 0
   347                           
   348                           ; 2 bytes @ 0x1F
   349  000060                     	ds	2
   350  000062                     
   351                           ; 1 bytes @ 0x21
   352 ;;
   353 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   354 ;;
   355 ;; *************** function _main *****************
   356 ;; Defined at:
   357 ;;		line 20 in file "main.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;		None
   362 ;; Return value:  Size  Location     Type
   363 ;;                  2   24[None  ] int 
   364 ;; Registers used:
   365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh, cstack
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   371 ;;      Params:         0       0       0       0       0       0       0
   372 ;;      Locals:         0       0       0       0       0       0       0
   373 ;;      Temps:          0       0       0       0       0       0       0
   374 ;;      Totals:         0       0       0       0       0       0       0
   375 ;;Total ram usage:        0 bytes
   376 ;; Hardware stack levels required when called:   13
   377 ;; This function calls:
   378 ;;		_SRAMInitHeap
   379 ;;		_create_task
   380 ;;		_os_config
   381 ;;		_start_OS
   382 ;; This function is called by:
   383 ;;		Startup code after reset
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387                           	psect	text0
   388  000D8C                     __ptext0:
   389                           	opt callstack 0
   390  000D8C                     _main:
   391                           	opt callstack 18
   392  000D8C                     
   393                           ;main.c: 22: os_config();
   394  000D8C  EC14  F00B         	call	_os_config	;wreg free
   395  000D90                     
   396                           ;main.c: 24: SRAMInitHeap();
   397  000D90  ECD2  F009         	call	_SRAMInitHeap	;wreg free
   398  000D94                     
   399                           ;main.c: 27: if (create_task(1, 6, &task_disp) == 0) return 0;
   400  000D94  0E00               	movlw	0
   401  000D96  6E50               	movwf	(create_task@id+1)^0,c
   402  000D98  0E01               	movlw	1
   403  000D9A  6E4F               	movwf	create_task@id^0,c
   404  000D9C  0E00               	movlw	0
   405  000D9E  6E52               	movwf	(create_task@prior+1)^0,c
   406  000DA0  0E06               	movlw	6
   407  000DA2  6E51               	movwf	create_task@prior^0,c
   408  000DA4  0E94               	movlw	low _task_disp
   409  000DA6  6E53               	movwf	create_task@f^0,c
   410  000DA8  0E16               	movlw	high _task_disp
   411  000DAA  6E54               	movwf	(create_task@f+1)^0,c
   412  000DAC  EC2F  F004         	call	_create_task	;wreg free
   413  000DB0  504F               	movf	?_create_task^0,w,c
   414  000DB2  1050               	iorwf	(?_create_task+1)^0,w,c
   415  000DB4  A4D8               	btfss	status,2,c
   416  000DB6  EFDF  F006         	goto	u961
   417  000DBA  EFE1  F006         	goto	u960
   418  000DBE                     u961:
   419  000DBE  EFE3  F006         	goto	l2107
   420  000DC2                     u960:
   421  000DC2  EF4B  F007         	goto	l26
   422  000DC6                     l2107:
   423                           
   424                           ;main.c: 28: if (create_task(2, 5, &task_um) == 0) return 0;
   425  000DC6  0E00               	movlw	0
   426  000DC8  6E50               	movwf	(create_task@id+1)^0,c
   427  000DCA  0E02               	movlw	2
   428  000DCC  6E4F               	movwf	create_task@id^0,c
   429  000DCE  0E00               	movlw	0
   430  000DD0  6E52               	movwf	(create_task@prior+1)^0,c
   431  000DD2  0E05               	movlw	5
   432  000DD4  6E51               	movwf	create_task@prior^0,c
   433  000DD6  0EA2               	movlw	low _task_um
   434  000DD8  6E53               	movwf	create_task@f^0,c
   435  000DDA  0E15               	movlw	high _task_um
   436  000DDC  6E54               	movwf	(create_task@f+1)^0,c
   437  000DDE  EC2F  F004         	call	_create_task	;wreg free
   438  000DE2  504F               	movf	?_create_task^0,w,c
   439  000DE4  1050               	iorwf	(?_create_task+1)^0,w,c
   440  000DE6  A4D8               	btfss	status,2,c
   441  000DE8  EFF8  F006         	goto	u971
   442  000DEC  EFFA  F006         	goto	u970
   443  000DF0                     u971:
   444  000DF0  EFFC  F006         	goto	l2111
   445  000DF4                     u970:
   446  000DF4  EF4B  F007         	goto	l26
   447  000DF8                     l2111:
   448                           
   449                           ;main.c: 29: if (create_task(3, 4, &task_dois) == 0) return 0;
   450  000DF8  0E00               	movlw	0
   451  000DFA  6E50               	movwf	(create_task@id+1)^0,c
   452  000DFC  0E03               	movlw	3
   453  000DFE  6E4F               	movwf	create_task@id^0,c
   454  000E00  0E00               	movlw	0
   455  000E02  6E52               	movwf	(create_task@prior+1)^0,c
   456  000E04  0E04               	movlw	4
   457  000E06  6E51               	movwf	create_task@prior^0,c
   458  000E08  0E14               	movlw	low _task_dois
   459  000E0A  6E53               	movwf	create_task@f^0,c
   460  000E0C  0E15               	movlw	high _task_dois
   461  000E0E  6E54               	movwf	(create_task@f+1)^0,c
   462  000E10  EC2F  F004         	call	_create_task	;wreg free
   463  000E14  504F               	movf	?_create_task^0,w,c
   464  000E16  1050               	iorwf	(?_create_task+1)^0,w,c
   465  000E18  A4D8               	btfss	status,2,c
   466  000E1A  EF11  F007         	goto	u981
   467  000E1E  EF13  F007         	goto	u980
   468  000E22                     u981:
   469  000E22  EF15  F007         	goto	l2115
   470  000E26                     u980:
   471  000E26  EF4B  F007         	goto	l26
   472  000E2A                     l2115:
   473                           
   474                           ;main.c: 30: if (create_task(5, 2, &task_m1) == 0) return 0;
   475  000E2A  0E00               	movlw	0
   476  000E2C  6E50               	movwf	(create_task@id+1)^0,c
   477  000E2E  0E05               	movlw	5
   478  000E30  6E4F               	movwf	create_task@id^0,c
   479  000E32  0E00               	movlw	0
   480  000E34  6E52               	movwf	(create_task@prior+1)^0,c
   481  000E36  0E02               	movlw	2
   482  000E38  6E51               	movwf	create_task@prior^0,c
   483  000E3A  0E0A               	movlw	low _task_m1
   484  000E3C  6E53               	movwf	create_task@f^0,c
   485  000E3E  0E14               	movlw	high _task_m1
   486  000E40  6E54               	movwf	(create_task@f+1)^0,c
   487  000E42  EC2F  F004         	call	_create_task	;wreg free
   488  000E46  504F               	movf	?_create_task^0,w,c
   489  000E48  1050               	iorwf	(?_create_task+1)^0,w,c
   490  000E4A  A4D8               	btfss	status,2,c
   491  000E4C  EF2A  F007         	goto	u991
   492  000E50  EF2C  F007         	goto	u990
   493  000E54                     u991:
   494  000E54  EF2E  F007         	goto	l2119
   495  000E58                     u990:
   496  000E58  EF4B  F007         	goto	l26
   497  000E5C                     l2119:
   498                           
   499                           ;main.c: 31: if (create_task(6, 1, &task_m2) == 0) return 0;
   500  000E5C  0E00               	movlw	0
   501  000E5E  6E50               	movwf	(create_task@id+1)^0,c
   502  000E60  0E06               	movlw	6
   503  000E62  6E4F               	movwf	create_task@id^0,c
   504  000E64  0E00               	movlw	0
   505  000E66  6E52               	movwf	(create_task@prior+1)^0,c
   506  000E68  0E01               	movlw	1
   507  000E6A  6E51               	movwf	create_task@prior^0,c
   508  000E6C  0E5C               	movlw	low _task_m2
   509  000E6E  6E53               	movwf	create_task@f^0,c
   510  000E70  0E15               	movlw	high _task_m2
   511  000E72  6E54               	movwf	(create_task@f+1)^0,c
   512  000E74  EC2F  F004         	call	_create_task	;wreg free
   513  000E78  504F               	movf	?_create_task^0,w,c
   514  000E7A  1050               	iorwf	(?_create_task+1)^0,w,c
   515  000E7C  A4D8               	btfss	status,2,c
   516  000E7E  EF43  F007         	goto	u1001
   517  000E82  EF45  F007         	goto	u1000
   518  000E86                     u1001:
   519  000E86  EF47  F007         	goto	l2123
   520  000E8A                     u1000:
   521  000E8A  EF4B  F007         	goto	l26
   522  000E8E                     l2123:
   523                           
   524                           ;main.c: 36: start_OS();
   525  000E8E  EC6D  F00B         	call	_start_OS	;wreg free
   526  000E92                     l31:
   527  000E92  EF49  F007         	goto	l31
   528  000E96                     l26:
   529  000E96  EF06  F000         	goto	start
   530  000E9A                     __end_of_main:
   531                           	opt callstack 0
   532                           
   533 ;; *************** function _start_OS *****************
   534 ;; Defined at:
   535 ;;		line 105 in file "kernel.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;		None
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		None
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   549 ;;      Params:         0       0       0       0       0       0       0
   550 ;;      Locals:         0       0       0       0       0       0       0
   551 ;;      Temps:          0       0       0       0       0       0       0
   552 ;;      Totals:         0       0       0       0       0       0       0
   553 ;;Total ram usage:        0 bytes
   554 ;; Hardware stack levels used:    1
   555 ;; Hardware stack levels required when called:    9
   556 ;; This function calls:
   557 ;;		Nothing
   558 ;; This function is called by:
   559 ;;		_main
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           	psect	text1
   564  0016DA                     __ptext1:
   565                           	opt callstack 0
   566  0016DA                     _start_OS:
   567                           	opt callstack 21
   568  0016DA                     
   569                           ;kernel.c: 107: INTCONbits.GIE = 1;;
   570  0016DA  8EF2               	bsf	242,7,c	;volatile
   571                           
   572                           ;kernel.c: 108: INTCONbits.TMR0IE = 1;
   573  0016DC  8AF2               	bsf	242,5,c	;volatile
   574                           
   575                           ;kernel.c: 109: T0CONbits.TMR0ON = 1;
   576  0016DE  8ED5               	bsf	213,7,c	;volatile
   577  0016E0  0012               	return		;funcret
   578  0016E2                     __end_of_start_OS:
   579                           	opt callstack 0
   580                           
   581 ;; *************** function _os_config *****************
   582 ;; Defined at:
   583 ;;		line 92 in file "kernel.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;		None
   586 ;; Auto vars:     Size  Location     Type
   587 ;;		None
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh, cstack
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   597 ;;      Params:         0       0       0       0       0       0       0
   598 ;;      Locals:         0       0       0       0       0       0       0
   599 ;;      Temps:          0       0       0       0       0       0       0
   600 ;;      Totals:         0       0       0       0       0       0       0
   601 ;;Total ram usage:        0 bytes
   602 ;; Hardware stack levels used:    1
   603 ;; Hardware stack levels required when called:   12
   604 ;; This function calls:
   605 ;;		_conf_timer0
   606 ;;		_create_task
   607 ;;		_user_tasks_config
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text2
   614  001628                     __ptext2:
   615                           	opt callstack 0
   616  001628                     _os_config:
   617                           	opt callstack 18
   618  001628                     
   619                           ;kernel.c: 94: f_aptos.size = 0;
   620  001628  0E00               	movlw	0
   621  00162A  CFE8 F3D3          	movff	wreg,_f_aptos+791
   622  00162E  0E00               	movlw	0
   623  001630  CFE8 F3D4          	movff	wreg,_f_aptos+792
   624                           
   625                           ;kernel.c: 95: f_aptos.task_running = 0;
   626  001634  0E00               	movlw	0
   627  001636  CFE8 F3D5          	movff	wreg,_f_aptos+793
   628  00163A  0E00               	movlw	0
   629  00163C  CFE8 F3D6          	movff	wreg,_f_aptos+794
   630  001640                     
   631                           ;kernel.c: 98: create_task(0, 0, &task_idle);
   632  001640  0E00               	movlw	0
   633  001642  6E50               	movwf	(create_task@id+1)^0,c
   634  001644  0E00               	movlw	0
   635  001646  6E4F               	movwf	create_task@id^0,c
   636  001648  0E00               	movlw	0
   637  00164A  6E52               	movwf	(create_task@prior+1)^0,c
   638  00164C  0E00               	movlw	0
   639  00164E  6E51               	movwf	create_task@prior^0,c
   640  001650  0E66               	movlw	low _task_idle
   641  001652  6E53               	movwf	create_task@f^0,c
   642  001654  0E16               	movlw	high _task_idle
   643  001656  6E54               	movwf	(create_task@f+1)^0,c
   644  001658  EC2F  F004         	call	_create_task	;wreg free
   645  00165C                     
   646                           ;kernel.c: 100: conf_timer0();
   647  00165C  EC5F  F00B         	call	_conf_timer0	;wreg free
   648  001660                     
   649                           ;kernel.c: 102: user_tasks_config();
   650  001660  ECEB  F008         	call	_user_tasks_config	;wreg free
   651  001664  0012               	return		;funcret
   652  001666                     __end_of_os_config:
   653                           	opt callstack 0
   654                           
   655 ;; *************** function _user_tasks_config *****************
   656 ;; Defined at:
   657 ;;		line 24 in file "user_tasks.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   671 ;;      Params:         0       0       0       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0       0       0
   673 ;;      Temps:          0       0       0       0       0       0       0
   674 ;;      Totals:         0       0       0       0       0       0       0
   675 ;;Total ram usage:        0 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; Hardware stack levels required when called:   11
   678 ;; This function calls:
   679 ;;		_SRAMalloc
   680 ;;		_pipe_create
   681 ;;		_sem_create
   682 ;;		_seven_seg_init
   683 ;; This function is called by:
   684 ;;		_os_config
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           	psect	text3
   689  0011D6                     __ptext3:
   690                           	opt callstack 0
   691  0011D6                     _user_tasks_config:
   692                           	opt callstack 18
   693  0011D6                     
   694                           ;user_tasks.c: 27: TRISDbits.RD0 = 0;
   695  0011D6  9095               	bcf	149,0,c	;volatile
   696                           
   697                           ;user_tasks.c: 28: TRISDbits.RD4 = 0;
   698  0011D8  9895               	bcf	149,4,c	;volatile
   699                           
   700                           ;user_tasks.c: 29: TRISDbits.RD2 = 0;
   701  0011DA  9495               	bcf	149,2,c	;volatile
   702                           
   703                           ;user_tasks.c: 32: TRISDbits.RD6 = 0;
   704  0011DC  9C95               	bcf	149,6,c	;volatile
   705                           
   706                           ;user_tasks.c: 33: TRISDbits.RD7 = 0;
   707  0011DE  9E95               	bcf	149,7,c	;volatile
   708                           
   709                           ;user_tasks.c: 35: TRISDbits.RD3 = 0;
   710  0011E0  9695               	bcf	149,3,c	;volatile
   711                           
   712                           ;user_tasks.c: 36: TRISBbits.RB0 = 0;
   713  0011E2  9093               	bcf	147,0,c	;volatile
   714                           
   715                           ;user_tasks.c: 37: TRISBbits.RB1 = 0;
   716  0011E4  9293               	bcf	147,1,c	;volatile
   717                           
   718                           ;user_tasks.c: 40: TRISDbits.TRISD4 = 0;
   719  0011E6  9895               	bcf	149,4,c	;volatile
   720                           
   721                           ;user_tasks.c: 41: TRISDbits.TRISD5 = 0;
   722  0011E8  9A95               	bcf	149,5,c	;volatile
   723                           
   724                           ;user_tasks.c: 42: TRISDbits.TRISD6 = 0;
   725  0011EA  9C95               	bcf	149,6,c	;volatile
   726                           
   727                           ;user_tasks.c: 43: TRISDbits.TRISD7 = 0;
   728  0011EC  9E95               	bcf	149,7,c	;volatile
   729                           
   730                           ;user_tasks.c: 44: TRISBbits.TRISB5 = 0;
   731  0011EE  9A93               	bcf	147,5,c	;volatile
   732                           
   733                           ;user_tasks.c: 45: TRISBbits.TRISB6 = 1;
   734  0011F0  8C93               	bsf	147,6,c	;volatile
   735                           
   736                           ;user_tasks.c: 46: TRISBbits.TRISB7 = 1;
   737  0011F2  8E93               	bsf	147,7,c	;volatile
   738                           
   739                           ;user_tasks.c: 49: TRISBbits.TRISB0 = 0;
   740  0011F4  9093               	bcf	147,0,c	;volatile
   741                           
   742                           ;user_tasks.c: 50: TRISBbits.TRISB1 = 0;
   743  0011F6  9293               	bcf	147,1,c	;volatile
   744  0011F8                     
   745                           ;user_tasks.c: 53: seven_seg_init();
   746  0011F8  EC68  F00B         	call	_seven_seg_init	;wreg free
   747  0011FC                     
   748                           ;user_tasks.c: 55: buffer = SRAMalloc(10);
   749  0011FC  0E0A               	movlw	10
   750  0011FE  EC37  F006         	call	_SRAMalloc
   751  001202  C057  F001         	movff	?_SRAMalloc,_buffer
   752  001206  C058  F002         	movff	?_SRAMalloc+1,_buffer+1
   753  00120A                     
   754                           ;user_tasks.c: 57: sem_create(&sem1, 1);
   755  00120A  0E19               	movlw	low _sem1
   756  00120C  6E4F               	movwf	sem_create@sem^0,c
   757  00120E  0E00               	movlw	high _sem1
   758  001210  6E50               	movwf	(sem_create@sem+1)^0,c
   759  001212  0E00               	movlw	0
   760  001214  6E52               	movwf	(sem_create@init_value+1)^0,c
   761  001216  0E01               	movlw	1
   762  001218  6E51               	movwf	sem_create@init_value^0,c
   763  00121A  ECF3  F00A         	call	_sem_create	;wreg free
   764  00121E                     
   765                           ;user_tasks.c: 58: sem_create(&sem2, 0);
   766  00121E  0E05               	movlw	low _sem2
   767  001220  6E4F               	movwf	sem_create@sem^0,c
   768  001222  0E00               	movlw	high _sem2
   769  001224  6E50               	movwf	(sem_create@sem+1)^0,c
   770  001226  0E00               	movlw	0
   771  001228  6E52               	movwf	(sem_create@init_value+1)^0,c
   772  00122A  0E00               	movlw	0
   773  00122C  6E51               	movwf	sem_create@init_value^0,c
   774  00122E  ECF3  F00A         	call	_sem_create	;wreg free
   775  001232                     
   776                           ;user_tasks.c: 59: sem_create(&sem3, 0);
   777  001232  0EA8               	movlw	low _sem3
   778  001234  6E4F               	movwf	sem_create@sem^0,c
   779  001236  0E00               	movlw	high _sem3
   780  001238  6E50               	movwf	(sem_create@sem+1)^0,c
   781  00123A  0E00               	movlw	0
   782  00123C  6E52               	movwf	(sem_create@init_value+1)^0,c
   783  00123E  0E00               	movlw	0
   784  001240  6E51               	movwf	sem_create@init_value^0,c
   785  001242  ECF3  F00A         	call	_sem_create	;wreg free
   786  001246                     
   787                           ;user_tasks.c: 60: sem_create(&sem4, 0);
   788  001246  0E94               	movlw	low _sem4
   789  001248  6E4F               	movwf	sem_create@sem^0,c
   790  00124A  0E00               	movlw	high _sem4
   791  00124C  6E50               	movwf	(sem_create@sem+1)^0,c
   792  00124E  0E00               	movlw	0
   793  001250  6E52               	movwf	(sem_create@init_value+1)^0,c
   794  001252  0E00               	movlw	0
   795  001254  6E51               	movwf	sem_create@init_value^0,c
   796  001256  ECF3  F00A         	call	_sem_create	;wreg free
   797  00125A                     
   798                           ;user_tasks.c: 61: pipe_create(&msg1);
   799  00125A  0E37               	movlw	low _msg1
   800  00125C  6E4F               	movwf	pipe_create@p^0,c
   801  00125E  0E00               	movlw	high _msg1
   802  001260  6E50               	movwf	(pipe_create@p+1)^0,c
   803  001262  EC61  F00A         	call	_pipe_create	;wreg free
   804  001266                     
   805                           ;user_tasks.c: 62: pipe_create(&msg2);
   806  001266  0E2D               	movlw	low _msg2
   807  001268  6E4F               	movwf	pipe_create@p^0,c
   808  00126A  0E00               	movlw	high _msg2
   809  00126C  6E50               	movwf	(pipe_create@p+1)^0,c
   810  00126E  EC61  F00A         	call	_pipe_create	;wreg free
   811  001272  0012               	return		;funcret
   812  001274                     __end_of_user_tasks_config:
   813                           	opt callstack 0
   814                           
   815 ;; *************** function _seven_seg_init *****************
   816 ;; Defined at:
   817 ;;		line 9 in file "seven_seg.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, status,2
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   831 ;;      Params:         0       0       0       0       0       0       0
   832 ;;      Locals:         0       0       0       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0
   834 ;;      Totals:         0       0       0       0       0       0       0
   835 ;;Total ram usage:        0 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    9
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_user_tasks_config
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text4
   846  0016D0                     __ptext4:
   847                           	opt callstack 0
   848  0016D0                     _seven_seg_init:
   849                           	opt callstack 19
   850  0016D0                     
   851                           ;seven_seg.c: 11: TRISC = 0b00000000;
   852  0016D0  0E00               	movlw	0
   853  0016D2  6E94               	movwf	148,c	;volatile
   854                           
   855                           ;seven_seg.c: 12: PORTC = 0b00000000;
   856  0016D4  0E00               	movlw	0
   857  0016D6  6E82               	movwf	130,c	;volatile
   858  0016D8  0012               	return		;funcret
   859  0016DA                     __end_of_seven_seg_init:
   860                           	opt callstack 0
   861                           
   862 ;; *************** function _sem_create *****************
   863 ;; Defined at:
   864 ;;		line 10 in file "semaphore.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  sem             2   14[COMRAM] PTR struct sem
   867 ;;		 -> sem4(20), sem3(20), sem2(20), sem1(20), 
   868 ;;  init_value      2   16[COMRAM] int 
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   880 ;;      Params:         4       0       0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0       0       0
   883 ;;      Totals:         4       0       0       0       0       0       0
   884 ;;Total ram usage:        4 bytes
   885 ;; Hardware stack levels used:    1
   886 ;; Hardware stack levels required when called:    9
   887 ;; This function calls:
   888 ;;		Nothing
   889 ;; This function is called by:
   890 ;;		_user_tasks_config
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text5
   895  0015E6                     __ptext5:
   896                           	opt callstack 0
   897  0015E6                     _sem_create:
   898                           	opt callstack 19
   899  0015E6                     
   900                           ;semaphore.c: 12: INTCONbits.GIE = 0;;
   901  0015E6  9EF2               	bcf	242,7,c	;volatile
   902  0015E8                     
   903                           ;semaphore.c: 14: sem->contador = init_value;
   904  0015E8  EE20 F012          	lfsr	2,18
   905  0015EC  504F               	movf	sem_create@sem^0,w,c
   906  0015EE  26D9               	addwf	fsr2l,f,c
   907  0015F0  5050               	movf	(sem_create@sem+1)^0,w,c
   908  0015F2  22DA               	addwfc	fsr2h,f,c
   909  0015F4  C051  FFDE         	movff	sem_create@init_value,postinc2
   910  0015F8  C052  FFDD         	movff	sem_create@init_value+1,postdec2
   911                           
   912                           ;semaphore.c: 15: sem->bloqued_tasks = 0;
   913  0015FC  EE20 F00E          	lfsr	2,14
   914  001600  504F               	movf	sem_create@sem^0,w,c
   915  001602  26D9               	addwf	fsr2l,f,c
   916  001604  5050               	movf	(sem_create@sem+1)^0,w,c
   917  001606  22DA               	addwfc	fsr2h,f,c
   918  001608  0E00               	movlw	0
   919  00160A  6EDE               	movwf	postinc2,c
   920  00160C  0E00               	movlw	0
   921  00160E  6EDD               	movwf	postdec2,c
   922                           
   923                           ;semaphore.c: 16: sem->next_task_to_unblock = 0;
   924  001610  EE20 F010          	lfsr	2,16
   925  001614  504F               	movf	sem_create@sem^0,w,c
   926  001616  26D9               	addwf	fsr2l,f,c
   927  001618  5050               	movf	(sem_create@sem+1)^0,w,c
   928  00161A  22DA               	addwfc	fsr2h,f,c
   929  00161C  0E00               	movlw	0
   930  00161E  6EDE               	movwf	postinc2,c
   931  001620  0E00               	movlw	0
   932  001622  6EDD               	movwf	postdec2,c
   933  001624                     
   934                           ;semaphore.c: 18: INTCONbits.GIE = 1;;
   935  001624  8EF2               	bsf	242,7,c	;volatile
   936  001626  0012               	return		;funcret
   937  001628                     __end_of_sem_create:
   938                           	opt callstack 0
   939                           
   940 ;; *************** function _pipe_create *****************
   941 ;; Defined at:
   942 ;;		line 9 in file "pipe.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  p               2   14[COMRAM] PTR struct pipe
   945 ;;		 -> msg2(10), msg1(10), 
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   957 ;;      Params:         2       0       0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0       0       0
   959 ;;      Temps:          0       0       0       0       0       0       0
   960 ;;      Totals:         2       0       0       0       0       0       0
   961 ;;Total ram usage:        2 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; Hardware stack levels required when called:    9
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_user_tasks_config
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text6
   972  0014C2                     __ptext6:
   973                           	opt callstack 0
   974  0014C2                     _pipe_create:
   975                           	opt callstack 19
   976  0014C2                     
   977                           ;pipe.c: 11: p->pipe_size = 0;
   978  0014C2  EE20 F002          	lfsr	2,2
   979  0014C6  504F               	movf	pipe_create@p^0,w,c
   980  0014C8  26D9               	addwf	fsr2l,f,c
   981  0014CA  5050               	movf	(pipe_create@p+1)^0,w,c
   982  0014CC  22DA               	addwfc	fsr2h,f,c
   983  0014CE  0E00               	movlw	0
   984  0014D0  6EDE               	movwf	postinc2,c
   985  0014D2  0E00               	movlw	0
   986  0014D4  6EDD               	movwf	postdec2,c
   987                           
   988                           ;pipe.c: 12: p->pipe_pos_read = 0;
   989  0014D6  EE20 F004          	lfsr	2,4
   990  0014DA  504F               	movf	pipe_create@p^0,w,c
   991  0014DC  26D9               	addwf	fsr2l,f,c
   992  0014DE  5050               	movf	(pipe_create@p+1)^0,w,c
   993  0014E0  22DA               	addwfc	fsr2h,f,c
   994  0014E2  0E00               	movlw	0
   995  0014E4  6EDE               	movwf	postinc2,c
   996  0014E6  0E00               	movlw	0
   997  0014E8  6EDD               	movwf	postdec2,c
   998                           
   999                           ;pipe.c: 13: p->pipe_pos_write = 0;
  1000  0014EA  EE20 F006          	lfsr	2,6
  1001  0014EE  504F               	movf	pipe_create@p^0,w,c
  1002  0014F0  26D9               	addwf	fsr2l,f,c
  1003  0014F2  5050               	movf	(pipe_create@p+1)^0,w,c
  1004  0014F4  22DA               	addwfc	fsr2h,f,c
  1005  0014F6  0E00               	movlw	0
  1006  0014F8  6EDE               	movwf	postinc2,c
  1007  0014FA  0E00               	movlw	0
  1008  0014FC  6EDD               	movwf	postdec2,c
  1009                           
  1010                           ;pipe.c: 14: p->pipe_task_bloqued = 0;
  1011  0014FE  EE20 F008          	lfsr	2,8
  1012  001502  504F               	movf	pipe_create@p^0,w,c
  1013  001504  26D9               	addwf	fsr2l,f,c
  1014  001506  5050               	movf	(pipe_create@p+1)^0,w,c
  1015  001508  22DA               	addwfc	fsr2h,f,c
  1016  00150A  0E00               	movlw	0
  1017  00150C  6EDE               	movwf	postinc2,c
  1018  00150E  0E00               	movlw	0
  1019  001510  6EDD               	movwf	postdec2,c
  1020  001512  0012               	return		;funcret
  1021  001514                     __end_of_pipe_create:
  1022                           	opt callstack 0
  1023                           
  1024 ;; *************** function _SRAMalloc *****************
  1025 ;; Defined at:
  1026 ;;		line 191 in file "sralloc.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  nBytes          1    wreg     unsigned char 
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;  nBytes          1   30[COMRAM] unsigned char 
  1031 ;;  pHeap           2   31[COMRAM] PTR struct _SALLOC
  1032 ;;		 -> _uDynamicHeap(512), 
  1033 ;;  temp            2   26[COMRAM] PTR struct _SALLOC
  1034 ;;		 -> _uDynamicHeap(512), 
  1035 ;;  segHeader       1   29[COMRAM] struct _SALLOC
  1036 ;;  segLen          1   28[COMRAM] unsigned char 
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  2   22[COMRAM] PTR unsigned char 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1046 ;;      Params:         2       0       0       0       0       0       0
  1047 ;;      Locals:         7       0       0       0       0       0       0
  1048 ;;      Temps:          2       0       0       0       0       0       0
  1049 ;;      Totals:        11       0       0       0       0       0       0
  1050 ;;Total ram usage:       11 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; Hardware stack levels required when called:   10
  1053 ;; This function calls:
  1054 ;;		__SRAMmerge
  1055 ;; This function is called by:
  1056 ;;		_user_tasks_config
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text7
  1061  000C6E                     __ptext7:
  1062                           	opt callstack 0
  1063  000C6E                     _SRAMalloc:
  1064                           	opt callstack 18
  1065                           
  1066                           ;incstack = 0
  1067                           ;SRAMalloc@nBytes stored from wreg
  1068  000C6E  6E5F               	movwf	SRAMalloc@nBytes^0,c
  1069  000C70                     
  1070                           ;sralloc.c: 193: SALLOC *  pHeap;;sralloc.c: 194: SALLOC *  temp;;sralloc.c: 195: SALLOC
      +                           segHeader;;sralloc.c: 196: unsigned char segLen;;sralloc.c: 199: if (nBytes > (0x7F - 1
      +                          )) return (0);
  1071  000C70  0E7E               	movlw	126
  1072  000C72  645F               	cpfsgt	SRAMalloc@nBytes^0,c
  1073  000C74  EF3E  F006         	goto	u741
  1074  000C78  EF40  F006         	goto	u740
  1075  000C7C                     u741:
  1076  000C7C  EF46  F006         	goto	l1881
  1077  000C80                     u740:
  1078  000C80                     l1877:
  1079  000C80  0E00               	movlw	0
  1080  000C82  6E57               	movwf	?_SRAMalloc^0,c
  1081  000C84  0E00               	movlw	0
  1082  000C86  6E58               	movwf	(?_SRAMalloc+1)^0,c
  1083  000C88  EFC5  F006         	goto	l324
  1084  000C8C                     l1881:
  1085                           
  1086                           ;sralloc.c: 202: pHeap = (SALLOC *)_uDynamicHeap;
  1087  000C8C  0ED7               	movlw	low __uDynamicHeap
  1088  000C8E  6E60               	movwf	SRAMalloc@pHeap^0,c
  1089  000C90  0E03               	movlw	high __uDynamicHeap
  1090  000C92  6E61               	movwf	(SRAMalloc@pHeap+1)^0,c
  1091  000C94                     l1883:
  1092                           
  1093                           ;sralloc.c: 205: {;sralloc.c: 207: segHeader = *pHeap;
  1094  000C94  C060  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1095  000C98  C061  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1096  000C9C  50DF               	movf	indf2,w,c
  1097  000C9E  6E5E               	movwf	SRAMalloc@segHeader^0,c
  1098  000CA0                     
  1099                           ;sralloc.c: 210: segLen = segHeader.bits.count - 1;
  1100  000CA0  505E               	movf	SRAMalloc@segHeader^0,w,c
  1101  000CA2  0B7F               	andlw	127
  1102  000CA4  6E59               	movwf	??_SRAMalloc^0,c
  1103  000CA6  0459               	decf	??_SRAMalloc^0,w,c
  1104  000CA8  6E5D               	movwf	SRAMalloc@segLen^0,c
  1105  000CAA                     
  1106                           ;sralloc.c: 213: if (segHeader.byte == 0) return (0);
  1107  000CAA  505E               	movf	SRAMalloc@segHeader^0,w,c
  1108  000CAC  A4D8               	btfss	status,2,c
  1109  000CAE  EF5B  F006         	goto	u751
  1110  000CB2  EF5D  F006         	goto	u750
  1111  000CB6                     u751:
  1112  000CB6  EF5F  F006         	goto	l326
  1113  000CBA                     u750:
  1114  000CBA  EF40  F006         	goto	l1877
  1115  000CBE                     l326:
  1116                           
  1117                           ;sralloc.c: 216: if (!(segHeader.bits.alloc))
  1118  000CBE  BE5E               	btfsc	SRAMalloc@segHeader^0,7,c
  1119  000CC0  EF64  F006         	goto	u761
  1120  000CC4  EF66  F006         	goto	u760
  1121  000CC8                     u761:
  1122  000CC8  EF7D  F006         	goto	l1897
  1123  000CCC                     u760:
  1124  000CCC                     
  1125                           ;sralloc.c: 217: {;sralloc.c: 219: if (nBytes > segLen)
  1126  000CCC  505F               	movf	SRAMalloc@nBytes^0,w,c
  1127  000CCE  5C5D               	subwf	SRAMalloc@segLen^0,w,c
  1128  000CD0  B0D8               	btfsc	status,0,c
  1129  000CD2  EF6D  F006         	goto	u771
  1130  000CD6  EF6F  F006         	goto	u770
  1131  000CDA                     u771:
  1132  000CDA  EF88  F006         	goto	l1899
  1133  000CDE                     u770:
  1134  000CDE                     
  1135                           ;sralloc.c: 220: {;sralloc.c: 222: if (!(_SRAMmerge(pHeap))) pHeap += segHeader.bits.cou
      +                          nt;
  1136  000CDE  C060  F04F         	movff	SRAMalloc@pHeap,__SRAMmerge@pSegA
  1137  000CE2  C061  F050         	movff	SRAMalloc@pHeap+1,__SRAMmerge@pSegA+1
  1138  000CE6  ECC8  F007         	call	__SRAMmerge	;wreg free
  1139  000CEA  0900               	iorlw	0
  1140  000CEC  A4D8               	btfss	status,2,c
  1141  000CEE  EF7B  F006         	goto	u781
  1142  000CF2  EF7D  F006         	goto	u780
  1143  000CF6                     u781:
  1144  000CF6  EFC3  F006         	goto	l333
  1145  000CFA                     u780:
  1146  000CFA                     l1897:
  1147  000CFA  505E               	movf	SRAMalloc@segHeader^0,w,c
  1148  000CFC  0B7F               	andlw	127
  1149  000CFE  6E59               	movwf	??_SRAMalloc^0,c
  1150  000D00  5059               	movf	??_SRAMalloc^0,w,c
  1151  000D02  0D01               	mullw	1
  1152  000D04  50F3               	movf	243,w,c
  1153  000D06  2660               	addwf	SRAMalloc@pHeap^0,f,c
  1154  000D08  50F4               	movf	244,w,c
  1155  000D0A  2261               	addwfc	(SRAMalloc@pHeap+1)^0,f,c
  1156  000D0C  EF4A  F006         	goto	l1883
  1157  000D10                     l1899:
  1158                           
  1159                           ;sralloc.c: 224: else;sralloc.c: 228: if (nBytes == segLen)
  1160  000D10  505D               	movf	SRAMalloc@segLen^0,w,c
  1161  000D12  185F               	xorwf	SRAMalloc@nBytes^0,w,c
  1162  000D14  A4D8               	btfss	status,2,c
  1163  000D16  EF8F  F006         	goto	u791
  1164  000D1A  EF91  F006         	goto	u790
  1165  000D1E                     u791:
  1166  000D1E  EF9E  F006         	goto	l1909
  1167  000D22                     u790:
  1168  000D22                     
  1169                           ;sralloc.c: 229: {;sralloc.c: 231: (*pHeap).bits.alloc = 1;
  1170  000D22  C060  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1171  000D26  C061  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1172  000D2A  8EDF               	bsf	indf2,7,c
  1173  000D2C                     
  1174                           ;sralloc.c: 234: return ((unsigned char *)(pHeap + 1));
  1175  000D2C  0E01               	movlw	1
  1176  000D2E  2460               	addwf	SRAMalloc@pHeap^0,w,c
  1177  000D30  6E57               	movwf	?_SRAMalloc^0,c
  1178  000D32  0E00               	movlw	0
  1179  000D34  2061               	addwfc	(SRAMalloc@pHeap+1)^0,w,c
  1180  000D36  6E58               	movwf	(?_SRAMalloc+1)^0,c
  1181  000D38  EFC5  F006         	goto	l324
  1182  000D3C                     l1909:
  1183                           
  1184                           ;sralloc.c: 238: else;sralloc.c: 239: {;sralloc.c: 241: (*pHeap).byte = nBytes + 0x81;
  1185  000D3C  505F               	movf	SRAMalloc@nBytes^0,w,c
  1186  000D3E  0F81               	addlw	129
  1187  000D40  C060  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1188  000D44  C061  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1189  000D48  6EDF               	movwf	indf2,c
  1190  000D4A                     
  1191                           ;sralloc.c: 244: temp = pHeap + 1;
  1192  000D4A  0E01               	movlw	1
  1193  000D4C  2460               	addwf	SRAMalloc@pHeap^0,w,c
  1194  000D4E  6E5B               	movwf	SRAMalloc@temp^0,c
  1195  000D50  0E00               	movlw	0
  1196  000D52  2061               	addwfc	(SRAMalloc@pHeap+1)^0,w,c
  1197  000D54  6E5C               	movwf	(SRAMalloc@temp+1)^0,c
  1198  000D56                     
  1199                           ;sralloc.c: 247: pHeap += (nBytes + 1);
  1200  000D56  505F               	movf	SRAMalloc@nBytes^0,w,c
  1201  000D58  6E59               	movwf	??_SRAMalloc^0,c
  1202  000D5A  6A5A               	clrf	(??_SRAMalloc+1)^0,c
  1203  000D5C  0E01               	movlw	1
  1204  000D5E  2659               	addwf	??_SRAMalloc^0,f,c
  1205  000D60  0E00               	movlw	0
  1206  000D62  225A               	addwfc	(??_SRAMalloc+1)^0,f,c
  1207  000D64  5059               	movf	??_SRAMalloc^0,w,c
  1208  000D66  2660               	addwf	SRAMalloc@pHeap^0,f,c
  1209  000D68  505A               	movf	(??_SRAMalloc+1)^0,w,c
  1210  000D6A  2261               	addwfc	(SRAMalloc@pHeap+1)^0,f,c
  1211                           
  1212                           ;sralloc.c: 250: (*pHeap).byte = segLen - nBytes;
  1213  000D6C  505F               	movf	SRAMalloc@nBytes^0,w,c
  1214  000D6E  5C5D               	subwf	SRAMalloc@segLen^0,w,c
  1215  000D70  C060  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1216  000D74  C061  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1217  000D78  6EDF               	movwf	indf2,c
  1218  000D7A                     
  1219                           ;sralloc.c: 253: return ((unsigned char *) temp);
  1220  000D7A  C05B  F057         	movff	SRAMalloc@temp,?_SRAMalloc
  1221  000D7E  C05C  F058         	movff	SRAMalloc@temp+1,?_SRAMalloc+1
  1222  000D82  EFC5  F006         	goto	l324
  1223  000D86                     l333:
  1224  000D86  EF4A  F006         	goto	l1883
  1225  000D8A                     l324:
  1226  000D8A  0012               	return		;funcret
  1227  000D8C                     __end_of_SRAMalloc:
  1228                           	opt callstack 0
  1229                           
  1230 ;; *************** function __SRAMmerge *****************
  1231 ;; Defined at:
  1232 ;;		line 359 in file "sralloc.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;  pSegA           2   14[COMRAM] PTR struct _SALLOC
  1235 ;;		 -> _uDynamicHeap(512), 
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;  pSegB           2   17[COMRAM] PTR struct _SALLOC
  1238 ;;		 -> _uDynamicHeap(512), 
  1239 ;;  uSegB           1   21[COMRAM] struct _SALLOC
  1240 ;;  uSegA           1   20[COMRAM] struct _SALLOC
  1241 ;;  uSum            1   19[COMRAM] struct _SALLOC
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      unsigned char 
  1244 ;; Registers used:
  1245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1251 ;;      Params:         2       0       0       0       0       0       0
  1252 ;;      Locals:         5       0       0       0       0       0       0
  1253 ;;      Temps:          1       0       0       0       0       0       0
  1254 ;;      Totals:         8       0       0       0       0       0       0
  1255 ;;Total ram usage:        8 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; Hardware stack levels required when called:    9
  1258 ;; This function calls:
  1259 ;;		Nothing
  1260 ;; This function is called by:
  1261 ;;		_SRAMalloc
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text8
  1266  000F90                     __ptext8:
  1267                           	opt callstack 0
  1268  000F90                     __SRAMmerge:
  1269                           	opt callstack 18
  1270  000F90                     
  1271                           ;sralloc.c: 361: SALLOC *  pSegB;;sralloc.c: 362: SALLOC uSegA, uSegB, uSum;;sralloc.c: 
      +                          365: pSegB = pSegA + (*pSegA).byte;
  1272  000F90  C04F  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1273  000F94  C050  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1274  000F98  50DF               	movf	indf2,w,c
  1275  000F9A  6E51               	movwf	??__SRAMmerge^0,c
  1276  000F9C  5051               	movf	??__SRAMmerge^0,w,c
  1277  000F9E  244F               	addwf	__SRAMmerge@pSegA^0,w,c
  1278  000FA0  6E52               	movwf	__SRAMmerge@pSegB^0,c
  1279  000FA2  0E00               	movlw	0
  1280  000FA4  2050               	addwfc	(__SRAMmerge@pSegA+1)^0,w,c
  1281  000FA6  6E53               	movwf	(__SRAMmerge@pSegB+1)^0,c
  1282  000FA8                     
  1283                           ;sralloc.c: 368: uSegA = *pSegA;
  1284  000FA8  C04F  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1285  000FAC  C050  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1286  000FB0  50DF               	movf	indf2,w,c
  1287  000FB2  6E55               	movwf	__SRAMmerge@uSegA^0,c
  1288  000FB4                     
  1289                           ;sralloc.c: 369: uSegB = *pSegB;
  1290  000FB4  C052  FFD9         	movff	__SRAMmerge@pSegB,fsr2l
  1291  000FB8  C053  FFDA         	movff	__SRAMmerge@pSegB+1,fsr2h
  1292  000FBC  50DF               	movf	indf2,w,c
  1293  000FBE  6E56               	movwf	__SRAMmerge@uSegB^0,c
  1294  000FC0                     
  1295                           ;sralloc.c: 372: if (uSegB.byte == 0) return (0);
  1296  000FC0  5056               	movf	__SRAMmerge@uSegB^0,w,c
  1297  000FC2  A4D8               	btfss	status,2,c
  1298  000FC4  EFE6  F007         	goto	u691
  1299  000FC8  EFE8  F007         	goto	u690
  1300  000FCC                     u691:
  1301  000FCC  EFEB  F007         	goto	l349
  1302  000FD0                     u690:
  1303  000FD0                     l1837:
  1304  000FD0  0E00               	movlw	0
  1305  000FD2  EF33  F008         	goto	l350
  1306  000FD6                     l349:
  1307                           
  1308                           ;sralloc.c: 375: if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  1309  000FD6  BE55               	btfsc	__SRAMmerge@uSegA^0,7,c
  1310  000FD8  EFF0  F007         	goto	u701
  1311  000FDC  EFF2  F007         	goto	u700
  1312  000FE0                     u701:
  1313  000FE0  EFE8  F007         	goto	l1837
  1314  000FE4                     u700:
  1315  000FE4  AE56               	btfss	__SRAMmerge@uSegB^0,7,c
  1316  000FE6  EFF7  F007         	goto	u711
  1317  000FEA  EFF9  F007         	goto	u710
  1318  000FEE                     u711:
  1319  000FEE  EFFB  F007         	goto	l1847
  1320  000FF2                     u710:
  1321  000FF2  EFE8  F007         	goto	l1837
  1322  000FF6                     l1847:
  1323                           
  1324                           ;sralloc.c: 378: if (uSegA.bits.count == 0x7F) return (0);
  1325  000FF6  5055               	movf	__SRAMmerge@uSegA^0,w,c
  1326  000FF8  0B7F               	andlw	127
  1327  000FFA  0A7F               	xorlw	127
  1328  000FFC  A4D8               	btfss	status,2,c
  1329  000FFE  EF03  F008         	goto	u721
  1330  001002  EF05  F008         	goto	u720
  1331  001006                     u721:
  1332  001006  EF07  F008         	goto	l1853
  1333  00100A                     u720:
  1334  00100A  EFE8  F007         	goto	l1837
  1335  00100E                     l1853:
  1336                           
  1337                           ;sralloc.c: 381: uSum.byte = uSegA.byte + uSegB.byte;
  1338  00100E  5055               	movf	__SRAMmerge@uSegA^0,w,c
  1339  001010  2456               	addwf	__SRAMmerge@uSegB^0,w,c
  1340  001012  6E54               	movwf	__SRAMmerge@uSum^0,c
  1341                           
  1342                           ;sralloc.c: 387: if ((uSum.byte) > 0x7F)
  1343  001014  0E7F               	movlw	127
  1344  001016  6454               	cpfsgt	__SRAMmerge@uSum^0,c
  1345  001018  EF10  F008         	goto	u731
  1346  00101C  EF12  F008         	goto	u730
  1347  001020                     u731:
  1348  001020  EF2C  F008         	goto	l1869
  1349  001024                     u730:
  1350  001024                     
  1351                           ;sralloc.c: 388: {;sralloc.c: 389: (*pSegA).byte = 0x7F;
  1352  001024  C04F  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1353  001028  C050  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1354  00102C  0E7F               	movlw	127
  1355  00102E  6EDF               	movwf	indf2,c
  1356  001030                     
  1357                           ;sralloc.c: 390: pSegA += 0x7F;
  1358  001030  0E7F               	movlw	127
  1359  001032  264F               	addwf	__SRAMmerge@pSegA^0,f,c
  1360  001034  0E00               	movlw	0
  1361  001036  2250               	addwfc	(__SRAMmerge@pSegA+1)^0,f,c
  1362  001038                     
  1363                           ;sralloc.c: 391: pSegB += uSegB.byte;
  1364  001038  5056               	movf	__SRAMmerge@uSegB^0,w,c
  1365  00103A  0D01               	mullw	1
  1366  00103C  50F3               	movf	243,w,c
  1367  00103E  2652               	addwf	__SRAMmerge@pSegB^0,f,c
  1368  001040  50F4               	movf	244,w,c
  1369  001042  2253               	addwfc	(__SRAMmerge@pSegB+1)^0,f,c
  1370  001044                     
  1371                           ;sralloc.c: 392: (*pSegA).byte = pSegB - pSegA;
  1372  001044  504F               	movf	__SRAMmerge@pSegA^0,w,c
  1373  001046  5C52               	subwf	__SRAMmerge@pSegB^0,w,c
  1374  001048  C04F  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1375  00104C  C050  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1376  001050  6EDF               	movwf	indf2,c
  1377  001052                     
  1378                           ;sralloc.c: 394: return (0x7F);
  1379  001052  0E7F               	movlw	127
  1380  001054  EF33  F008         	goto	l350
  1381  001058                     l1869:
  1382                           
  1383                           ;sralloc.c: 398: else;sralloc.c: 399: {;sralloc.c: 400: return ((*pSegA).byte = uSum.byt
      +                          e);
  1384  001058  C04F  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1385  00105C  C050  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1386  001060  C054  FFDF         	movff	__SRAMmerge@uSum,indf2
  1387  001064  50DF               	movf	223,w,c
  1388  001066                     l350:
  1389  001066  0012               	return		;funcret
  1390  001068                     __end_of__SRAMmerge:
  1391                           	opt callstack 0
  1392                           
  1393 ;; *************** function _create_task *****************
  1394 ;; Defined at:
  1395 ;;		line 14 in file "kernel.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  id              2   14[COMRAM] unsigned int 
  1398 ;;  prior           2   16[COMRAM] unsigned int 
  1399 ;;  f               2   18[COMRAM] PTR FTN()void 
  1400 ;;		 -> task_idle(1), task_m2(1), task_m1(1), task_dois(1), 
  1401 ;;		 -> task_um(1), task_disp(1), 
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  2   14[COMRAM] unsigned int 
  1406 ;; Registers used:
  1407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1413 ;;      Params:         6       0       0       0       0       0       0
  1414 ;;      Locals:         0       0       0       0       0       0       0
  1415 ;;      Temps:          2       0       0       0       0       0       0
  1416 ;;      Totals:         8       0       0       0       0       0       0
  1417 ;;Total ram usage:        8 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; Hardware stack levels required when called:   10
  1420 ;; This function calls:
  1421 ;;		___wmul
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;;		_os_config
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text9
  1429  00085E                     __ptext9:
  1430                           	opt callstack 0
  1431  00085E                     _create_task:
  1432                           	opt callstack 19
  1433  00085E                     
  1434                           ;kernel.c: 16: if (f_aptos.size >= 7)
  1435  00085E  EE23  F0D3         	lfsr	2,_f_aptos+791
  1436  000862  0E01               	movlw	1
  1437  000864  BEDB               	btfsc	plusw2,7,c
  1438  000866  EF3F  F004         	goto	u871
  1439  00086A  0E01               	movlw	1
  1440  00086C  50DB               	movf	plusw2,w,c
  1441  00086E  E109               	bnz	u870
  1442  000870  0E07               	movlw	7
  1443  000872  5CDE               	subwf	postinc2,w,c
  1444  000874  A0D8               	btfss	status,0,c
  1445  000876  EF3F  F004         	goto	u871
  1446  00087A  EF41  F004         	goto	u870
  1447  00087E                     u871:
  1448  00087E  EF47  F004         	goto	l1973
  1449  000882                     u870:
  1450  000882                     
  1451                           ;kernel.c: 17: return 0;
  1452  000882  0E00               	movlw	0
  1453  000884  6E50               	movwf	(?_create_task+1)^0,c
  1454  000886  0E00               	movlw	0
  1455  000888  6E4F               	movwf	?_create_task^0,c
  1456  00088A  EFEA  F004         	goto	l73
  1457  00088E                     l1973:
  1458                           
  1459                           ;kernel.c: 19: f_aptos.APTOS[f_aptos.size].task_id = id;
  1460  00088E  0E71               	movlw	113
  1461  000890  6EE6               	movwf	postinc1,c
  1462  000892  0E00               	movlw	0
  1463  000894  6EE6               	movwf	postinc1,c
  1464  000896  EE23  F0D3         	lfsr	2,_f_aptos+791
  1465  00089A  CFDE F055          	movff	postinc2,??_create_task
  1466  00089E  CFDD F056          	movff	postdec2,??_create_task+1
  1467  0008A2  C055  FFE6         	movff	??_create_task,postinc1
  1468  0008A6  C056  FFE6         	movff	??_create_task+1,postinc1
  1469  0008AA  EC87  F009         	call	___wmul	;wreg free
  1470  0008AE  0EBC               	movlw	low _f_aptos
  1471  0008B0  2462               	addwf	btemp^0,w,c
  1472  0008B2  6ED9               	movwf	fsr2l,c
  1473  0008B4  0E00               	movlw	high _f_aptos
  1474  0008B6  2063               	addwfc	(btemp+1)^0,w,c
  1475  0008B8  6EDA               	movwf	fsr2h,c
  1476  0008BA  C04F  FFDE         	movff	create_task@id,postinc2
  1477  0008BE  C050  FFDD         	movff	create_task@id+1,postdec2
  1478                           
  1479                           ;kernel.c: 20: f_aptos.APTOS[f_aptos.size].task_priority = prior;
  1480  0008C2  0E71               	movlw	113
  1481  0008C4  6EE6               	movwf	postinc1,c
  1482  0008C6  0E00               	movlw	0
  1483  0008C8  6EE6               	movwf	postinc1,c
  1484  0008CA  EE23  F0D3         	lfsr	2,_f_aptos+791
  1485  0008CE  CFDE F055          	movff	postinc2,??_create_task
  1486  0008D2  CFDD F056          	movff	postdec2,??_create_task+1
  1487  0008D6  C055  FFE6         	movff	??_create_task,postinc1
  1488  0008DA  C056  FFE6         	movff	??_create_task+1,postinc1
  1489  0008DE  EC87  F009         	call	___wmul	;wreg free
  1490  0008E2  0EBE               	movlw	low (_f_aptos+2)
  1491  0008E4  2462               	addwf	btemp^0,w,c
  1492  0008E6  6ED9               	movwf	fsr2l,c
  1493  0008E8  0E00               	movlw	high (_f_aptos+2)
  1494  0008EA  2063               	addwfc	(btemp+1)^0,w,c
  1495  0008EC  6EDA               	movwf	fsr2h,c
  1496  0008EE  C051  FFDE         	movff	create_task@prior,postinc2
  1497  0008F2  C052  FFDD         	movff	create_task@prior+1,postdec2
  1498                           
  1499                           ;kernel.c: 21: f_aptos.APTOS[f_aptos.size].task_ptr = f;
  1500  0008F6  0E71               	movlw	113
  1501  0008F8  6EE6               	movwf	postinc1,c
  1502  0008FA  0E00               	movlw	0
  1503  0008FC  6EE6               	movwf	postinc1,c
  1504  0008FE  EE23  F0D3         	lfsr	2,_f_aptos+791
  1505  000902  CFDE F055          	movff	postinc2,??_create_task
  1506  000906  CFDD F056          	movff	postdec2,??_create_task+1
  1507  00090A  C055  FFE6         	movff	??_create_task,postinc1
  1508  00090E  C056  FFE6         	movff	??_create_task+1,postinc1
  1509  000912  EC87  F009         	call	___wmul	;wreg free
  1510  000916  0E29               	movlw	low (_f_aptos+109)
  1511  000918  2462               	addwf	btemp^0,w,c
  1512  00091A  6ED9               	movwf	fsr2l,c
  1513  00091C  0E01               	movlw	high (_f_aptos+109)
  1514  00091E  2063               	addwfc	(btemp+1)^0,w,c
  1515  000920  6EDA               	movwf	fsr2h,c
  1516  000922  C053  FFDE         	movff	create_task@f,postinc2
  1517  000926  C054  FFDD         	movff	create_task@f+1,postdec2
  1518                           
  1519                           ;kernel.c: 22: f_aptos.APTOS[f_aptos.size].task_delay_time = 0;
  1520  00092A  0E71               	movlw	113
  1521  00092C  6EE6               	movwf	postinc1,c
  1522  00092E  0E00               	movlw	0
  1523  000930  6EE6               	movwf	postinc1,c
  1524  000932  EE23  F0D3         	lfsr	2,_f_aptos+791
  1525  000936  CFDE F055          	movff	postinc2,??_create_task
  1526  00093A  CFDD F056          	movff	postdec2,??_create_task+1
  1527  00093E  C055  FFE6         	movff	??_create_task,postinc1
  1528  000942  C056  FFE6         	movff	??_create_task+1,postinc1
  1529  000946  EC87  F009         	call	___wmul	;wreg free
  1530  00094A  0E2B               	movlw	low (_f_aptos+111)
  1531  00094C  2462               	addwf	btemp^0,w,c
  1532  00094E  6ED9               	movwf	fsr2l,c
  1533  000950  0E01               	movlw	high (_f_aptos+111)
  1534  000952  2063               	addwfc	(btemp+1)^0,w,c
  1535  000954  6EDA               	movwf	fsr2h,c
  1536  000956  0E00               	movlw	0
  1537  000958  6EDE               	movwf	postinc2,c
  1538  00095A  0E00               	movlw	0
  1539  00095C  6EDD               	movwf	postdec2,c
  1540                           
  1541                           ;kernel.c: 23: f_aptos.APTOS[f_aptos.size].task_state = READY;
  1542  00095E  0E71               	movlw	113
  1543  000960  6EE6               	movwf	postinc1,c
  1544  000962  0E00               	movlw	0
  1545  000964  6EE6               	movwf	postinc1,c
  1546  000966  EE23  F0D3         	lfsr	2,_f_aptos+791
  1547  00096A  CFDE F055          	movff	postinc2,??_create_task
  1548  00096E  CFDD F056          	movff	postdec2,??_create_task+1
  1549  000972  C055  FFE6         	movff	??_create_task,postinc1
  1550  000976  C056  FFE6         	movff	??_create_task+1,postinc1
  1551  00097A  EC87  F009         	call	___wmul	;wreg free
  1552  00097E  0EC0               	movlw	low (_f_aptos+4)
  1553  000980  2462               	addwf	btemp^0,w,c
  1554  000982  6ED9               	movwf	fsr2l,c
  1555  000984  0E00               	movlw	high (_f_aptos+4)
  1556  000986  2063               	addwfc	(btemp+1)^0,w,c
  1557  000988  6EDA               	movwf	fsr2h,c
  1558  00098A  0E01               	movlw	1
  1559  00098C  6EDF               	movwf	indf2,c
  1560                           
  1561                           ;kernel.c: 24: f_aptos.APTOS[f_aptos.size].task_stack.stack_size = 0;
  1562  00098E  0E71               	movlw	113
  1563  000990  6EE6               	movwf	postinc1,c
  1564  000992  0E00               	movlw	0
  1565  000994  6EE6               	movwf	postinc1,c
  1566  000996  EE23  F0D3         	lfsr	2,_f_aptos+791
  1567  00099A  CFDE F055          	movff	postinc2,??_create_task
  1568  00099E  CFDD F056          	movff	postdec2,??_create_task+1
  1569  0009A2  C055  FFE6         	movff	??_create_task,postinc1
  1570  0009A6  C056  FFE6         	movff	??_create_task+1,postinc1
  1571  0009AA  EC87  F009         	call	___wmul	;wreg free
  1572  0009AE  0EC1               	movlw	low (_f_aptos+5)
  1573  0009B0  2462               	addwf	btemp^0,w,c
  1574  0009B2  6ED9               	movwf	fsr2l,c
  1575  0009B4  0E00               	movlw	high (_f_aptos+5)
  1576  0009B6  2063               	addwfc	(btemp+1)^0,w,c
  1577  0009B8  6EDA               	movwf	fsr2h,c
  1578  0009BA  0E00               	movlw	0
  1579  0009BC  6EDE               	movwf	postinc2,c
  1580  0009BE  0E00               	movlw	0
  1581  0009C0  6EDD               	movwf	postdec2,c
  1582  0009C2                     
  1583                           ;kernel.c: 26: f_aptos.size += 1;
  1584  0009C2  EE23  F0D3         	lfsr	2,_f_aptos+791
  1585  0009C6  2ADE               	incf	postinc2,f,c
  1586  0009C8  0E00               	movlw	0
  1587  0009CA  22DD               	addwfc	postdec2,f,c
  1588  0009CC                     
  1589                           ;kernel.c: 28: return 1;
  1590  0009CC  0E00               	movlw	0
  1591  0009CE  6E50               	movwf	(?_create_task+1)^0,c
  1592  0009D0  0E01               	movlw	1
  1593  0009D2  6E4F               	movwf	?_create_task^0,c
  1594  0009D4                     l73:
  1595  0009D4  0012               	return		;funcret
  1596  0009D6                     __end_of_create_task:
  1597                           	opt callstack 0
  1598                           
  1599 ;; *************** function ___wmul *****************
  1600 ;; Defined at:
  1601 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  multiplier      2  [STACK] unsigned int 
  1604 ;;  multiplicand    2  [STACK] unsigned int 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  product         2  [STACK] unsigned int 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  2  [STACK] unsigned int 
  1609 ;; Registers used:
  1610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1616 ;;      Params:         0       0       0       0       0       0       0
  1617 ;;      Locals:         0       0       0       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0       0       0
  1619 ;;      Totals:         0       0       0       0       0       0       0
  1620 ;;Total ram usage:        0 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    9
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_create_task
  1627 ;;		_get_tid
  1628 ;;		_delay_os
  1629 ;;		_rr_scheduler_1
  1630 ;;		_prior_scheduler
  1631 ;;		_f_save_context
  1632 ;;		_f_restore_context
  1633 ;;		_delay_decrement
  1634 ;;		_pipe_read
  1635 ;;		_pipe_write
  1636 ;; This function uses a reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text10
  1640  00130E                     __ptext10:
  1641                           	opt callstack 0
  1642  00130E                     ___wmul:
  1643                           	opt callstack 0
  1644                           
  1645                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1646  00130E  52E6               	movf	postinc1,f,c
  1647  001310  52E6               	movf	postinc1,f,c
  1648  001312                     
  1649                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  1650  001312  0EFA               	movlw	-6
  1651  001314  CFE3 F06D          	movff	plusw1,btemp+11
  1652                           
  1653                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  1654  001318  0EFC               	movlw	-4
  1655  00131A  50E3               	movf	plusw1,w,c
  1656  00131C  026D               	mulwf	(btemp+11)^0,c
  1657                           
  1658                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1659  00131E  0EFE               	movlw	-2
  1660  001320  CFF3 FFE3          	movff	prodl,plusw1
  1661  001324  0EFF               	movlw	-1
  1662  001326  CFF4 FFE3          	movff	prodh,plusw1
  1663  00132A                     
  1664                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  1665  00132A  0EFB               	movlw	251
  1666  00132C  24E1               	addwf	fsr1l,w,c
  1667  00132E  6ED9               	movwf	fsr2l,c
  1668  001330  0EFF               	movlw	255
  1669  001332  20E2               	addwfc	fsr1h,w,c
  1670  001334  6EDA               	movwf	fsr2h,c
  1671  001336  50DF               	movf	indf2,w,c
  1672  001338  6E6D               	movwf	(btemp+11)^0,c
  1673                           
  1674                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  1675  00133A  0EFC               	movlw	-4
  1676  00133C  50E3               	movf	plusw1,w,c
  1677  00133E  026D               	mulwf	(btemp+11)^0,c
  1678  001340  CFF3 FFF4          	movff	prodl,prodh
  1679  001344  6AF3               	clrf	243,c
  1680                           
  1681                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1682  001346  50E1               	movf	fsr1l,w,c
  1683  001348  0FFE               	addlw	-2
  1684  00134A  6ED9               	movwf	fsr2l,c
  1685  00134C  50E2               	movf	fsr1h,w,c
  1686  00134E  6EDA               	movwf	fsr2h,c
  1687  001350  0EFF               	movlw	255
  1688  001352  22DA               	addwfc	fsr2h,f,c
  1689  001354  50F3               	movf	243,w,c
  1690  001356  26DE               	addwf	postinc2,f,c
  1691  001358  50F4               	movf	244,w,c
  1692  00135A  22DD               	addwfc	postdec2,f,c
  1693  00135C                     
  1694                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  1695  00135C  0EFA               	movlw	-6
  1696  00135E  CFE3 F06D          	movff	plusw1,btemp+11
  1697                           
  1698                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  1699  001362  0EFD               	movlw	253
  1700  001364  24E1               	addwf	fsr1l,w,c
  1701  001366  6ED9               	movwf	fsr2l,c
  1702  001368  0EFF               	movlw	255
  1703  00136A  20E2               	addwfc	fsr1h,w,c
  1704  00136C  6EDA               	movwf	fsr2h,c
  1705  00136E  50DF               	movf	indf2,w,c
  1706  001370  026D               	mulwf	(btemp+11)^0,c
  1707  001372  CFF3 FFF4          	movff	prodl,prodh
  1708  001376  6AF3               	clrf	243,c
  1709                           
  1710                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1711  001378  50E1               	movf	fsr1l,w,c
  1712  00137A  0FFE               	addlw	-2
  1713  00137C  6ED9               	movwf	fsr2l,c
  1714  00137E  50E2               	movf	fsr1h,w,c
  1715  001380  6EDA               	movwf	fsr2h,c
  1716  001382  0EFF               	movlw	255
  1717  001384  22DA               	addwfc	fsr2h,f,c
  1718  001386  50F3               	movf	243,w,c
  1719  001388  26DE               	addwf	postinc2,f,c
  1720  00138A  50F4               	movf	244,w,c
  1721  00138C  22DD               	addwfc	postdec2,f,c
  1722  00138E                     
  1723                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1724  00138E  0EFE               	movlw	-2
  1725  001390  CFE3 F062          	movff	plusw1,btemp
  1726  001394  0EFF               	movlw	-1
  1727  001396  CFE3 F063          	movff	plusw1,btemp+1
  1728  00139A                     
  1729                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  1730  00139A  0EFA               	movlw	250
  1731  00139C  26E1               	addwf	fsr1l,f,c
  1732  00139E  0EFF               	movlw	255
  1733  0013A0  22E2               	addwfc	fsr1h,f,c
  1734  0013A2  0012               	return		;funcret
  1735  0013A4                     __end_of___wmul:
  1736                           	opt callstack 0
  1737                           
  1738 ;; *************** function _conf_timer0 *****************
  1739 ;; Defined at:
  1740 ;;		line 12 in file "timer_0.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;		None
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;		None
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, status,2
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1754 ;;      Params:         0       0       0       0       0       0       0
  1755 ;;      Locals:         0       0       0       0       0       0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0
  1757 ;;      Totals:         0       0       0       0       0       0       0
  1758 ;;Total ram usage:        0 bytes
  1759 ;; Hardware stack levels used:    1
  1760 ;; Hardware stack levels required when called:    9
  1761 ;; This function calls:
  1762 ;;		Nothing
  1763 ;; This function is called by:
  1764 ;;		_os_config
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text11
  1769  0016BE                     __ptext11:
  1770                           	opt callstack 0
  1771  0016BE                     _conf_timer0:
  1772                           	opt callstack 20
  1773  0016BE                     
  1774                           ;timer_0.c: 14: INTCONbits.PEIE = 1;
  1775  0016BE  8CF2               	bsf	242,6,c	;volatile
  1776                           
  1777                           ;timer_0.c: 15: INTCONbits.TMR0IF = 0;
  1778  0016C0  94F2               	bcf	242,2,c	;volatile
  1779                           
  1780                           ;timer_0.c: 16: T0CONbits.T0CS = 0;
  1781  0016C2  9AD5               	bcf	213,5,c	;volatile
  1782                           
  1783                           ;timer_0.c: 17: T0CONbits.PSA = 0;
  1784  0016C4  96D5               	bcf	213,3,c	;volatile
  1785  0016C6                     
  1786                           ;timer_0.c: 18: T0CONbits.T0PS = 0b111;
  1787  0016C6  0E07               	movlw	7
  1788  0016C8  12D5               	iorwf	213,f,c	;volatile
  1789                           
  1790                           ;timer_0.c: 19: TMR0L = 252;
  1791  0016CA  0EFC               	movlw	252
  1792  0016CC  6ED6               	movwf	214,c	;volatile
  1793  0016CE  0012               	return		;funcret
  1794  0016D0                     __end_of_conf_timer0:
  1795                           	opt callstack 0
  1796                           
  1797 ;; *************** function _SRAMInitHeap *****************
  1798 ;; Defined at:
  1799 ;;		line 313 in file "sralloc.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;		None
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  count           2   16[COMRAM] unsigned int 
  1804 ;;  pHeap           2   14[COMRAM] PTR unsigned char 
  1805 ;;		 -> _uDynamicHeap(512), 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1815 ;;      Params:         0       0       0       0       0       0       0
  1816 ;;      Locals:         4       0       0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0
  1818 ;;      Totals:         4       0       0       0       0       0       0
  1819 ;;Total ram usage:        4 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    9
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text12
  1830  0013A4                     __ptext12:
  1831                           	opt callstack 0
  1832  0013A4                     _SRAMInitHeap:
  1833                           	opt callstack 21
  1834  0013A4                     
  1835                           ;sralloc.c: 315: unsigned char *  pHeap;;sralloc.c: 316: unsigned int count;;sralloc.c: 
      +                          318: pHeap = _uDynamicHeap;
  1836  0013A4  0ED7               	movlw	low __uDynamicHeap
  1837  0013A6  6E4F               	movwf	SRAMInitHeap@pHeap^0,c
  1838  0013A8  0E03               	movlw	high __uDynamicHeap
  1839  0013AA  6E50               	movwf	(SRAMInitHeap@pHeap+1)^0,c
  1840  0013AC                     
  1841                           ;sralloc.c: 319: count = 0x200-1;
  1842  0013AC  0E01               	movlw	1
  1843  0013AE  6E52               	movwf	(SRAMInitHeap@count+1)^0,c
  1844  0013B0  6851               	setf	SRAMInitHeap@count^0,c
  1845  0013B2                     l1459:
  1846                           
  1847                           ;sralloc.c: 322: {;sralloc.c: 323: if (count > 0x7F)
  1848  0013B2  5052               	movf	(SRAMInitHeap@count+1)^0,w,c
  1849  0013B4  E109               	bnz	u290
  1850  0013B6  0E80               	movlw	128
  1851  0013B8  5C51               	subwf	SRAMInitHeap@count^0,w,c
  1852  0013BA  A0D8               	btfss	status,0,c
  1853  0013BC  EFE2  F009         	goto	u291
  1854  0013C0  EFE4  F009         	goto	u290
  1855  0013C4                     u291:
  1856  0013C4  EFF6  F009         	goto	l1467
  1857  0013C8                     u290:
  1858  0013C8                     
  1859                           ;sralloc.c: 324: {;sralloc.c: 325: *pHeap = 0x7F;
  1860  0013C8  C04F  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  1861  0013CC  C050  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  1862  0013D0  0E7F               	movlw	127
  1863  0013D2  6EDF               	movwf	indf2,c
  1864  0013D4                     
  1865                           ;sralloc.c: 326: pHeap += 0x7F;
  1866  0013D4  0E7F               	movlw	127
  1867  0013D6  264F               	addwf	SRAMInitHeap@pHeap^0,f,c
  1868  0013D8  0E00               	movlw	0
  1869  0013DA  2250               	addwfc	(SRAMInitHeap@pHeap+1)^0,f,c
  1870  0013DC                     
  1871                           ;sralloc.c: 327: count = count - 0x7F;
  1872  0013DC  0E81               	movlw	129
  1873  0013DE  2451               	addwf	SRAMInitHeap@count^0,w,c
  1874  0013E0  6E51               	movwf	SRAMInitHeap@count^0,c
  1875  0013E2  0EFF               	movlw	255
  1876  0013E4  2052               	addwfc	(SRAMInitHeap@count+1)^0,w,c
  1877  0013E6  6E52               	movwf	(SRAMInitHeap@count+1)^0,c
  1878                           
  1879                           ;sralloc.c: 328: }
  1880  0013E8  EFD9  F009         	goto	l1459
  1881  0013EC                     l1467:
  1882                           
  1883                           ;sralloc.c: 329: else;sralloc.c: 330: {;sralloc.c: 331: *pHeap = count;
  1884  0013EC  C04F  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  1885  0013F0  C050  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  1886  0013F4  C051  FFDF         	movff	SRAMInitHeap@count,indf2
  1887  0013F8                     
  1888                           ;sralloc.c: 332: *(pHeap + count) = 0;
  1889  0013F8  5051               	movf	SRAMInitHeap@count^0,w,c
  1890  0013FA  244F               	addwf	SRAMInitHeap@pHeap^0,w,c
  1891  0013FC  6ED9               	movwf	fsr2l,c
  1892  0013FE  5052               	movf	(SRAMInitHeap@count+1)^0,w,c
  1893  001400  2050               	addwfc	(SRAMInitHeap@pHeap+1)^0,w,c
  1894  001402  6EDA               	movwf	fsr2h,c
  1895  001404  0E00               	movlw	0
  1896  001406  6EDF               	movwf	indf2,c
  1897  001408  0012               	return		;funcret
  1898  00140A                     __end_of_SRAMInitHeap:
  1899                           	opt callstack 0
  1900                           
  1901 ;; *************** function _task_disp *****************
  1902 ;; Defined at:
  1903 ;;		line 90 in file "user_tasks.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1  [STACK] void 
  1910 ;; Registers used:
  1911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1917 ;;      Params:         0       0       0       0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0       0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0
  1920 ;;      Totals:         0       0       0       0       0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    8
  1924 ;; This function calls:
  1925 ;;		_sem_post
  1926 ;;		_sem_wait
  1927 ;;		_seven_seg_set
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;; This function uses a reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text13
  1934  001694                     __ptext13:
  1935                           	opt callstack 0
  1936  001694                     _task_disp:
  1937                           	opt callstack 18
  1938  001694                     l252:
  1939  001694                     
  1940                           ;user_tasks.c: 95: sem_wait(&sem1);
  1941  001694  0E19               	movlw	low _sem1
  1942  001696  6EE6               	movwf	postinc1,c
  1943  001698  0E00               	movlw	high _sem1
  1944  00169A  6EE6               	movwf	postinc1,c
  1945  00169C  EC4D  F007         	call	_sem_wait	;wreg free
  1946  0016A0                     
  1947                           ;user_tasks.c: 102: seven_seg_set(BATTERY);
  1948  0016A0  C06E  FFE6         	movff	_BATTERY,postinc1
  1949  0016A4  C06F  FFE6         	movff	_BATTERY+1,postinc1
  1950  0016A8  EC34  F008         	call	_seven_seg_set	;wreg free
  1951  0016AC                     
  1952                           ;user_tasks.c: 103: sem_post(&sem2);
  1953  0016AC  0E05               	movlw	low _sem2
  1954  0016AE  6EE6               	movwf	postinc1,c
  1955  0016B0  0E00               	movlw	high _sem2
  1956  0016B2  6EE6               	movwf	postinc1,c
  1957  0016B4  ECEB  F004         	call	_sem_post	;wreg free
  1958  0016B8  EF4A  F00B         	goto	l252
  1959                           
  1960                           ; _task_disp: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  1961  0016BC  0012               	return		;funcret
  1962  0016BE                     __end_of_task_disp:
  1963                           	opt callstack 0
  1964                           
  1965 ;; *************** function _seven_seg_set *****************
  1966 ;; Defined at:
  1967 ;;		line 47 in file "seven_seg.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  number          2  [STACK] int 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  first           2  [STACK] int 
  1972 ;;  last            2  [STACK] int 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1  [STACK] void 
  1975 ;; Registers used:
  1976 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1982 ;;      Params:         0       0       0       0       0       0       0
  1983 ;;      Locals:         0       0       0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0
  1985 ;;      Totals:         0       0       0       0       0       0       0
  1986 ;;Total ram usage:        0 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    5
  1989 ;; This function calls:
  1990 ;;		___awdiv
  1991 ;;		___awmod
  1992 ;;		_update_ports
  1993 ;; This function is called by:
  1994 ;;		_task_disp
  1995 ;; This function uses a reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text14
  1999  001068                     __ptext14:
  2000                           	opt callstack 0
  2001  001068                     _seven_seg_set:
  2002                           	opt callstack 0
  2003                           
  2004                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2005  001068  52E6               	movf	postinc1,f,c
  2006  00106A  52E6               	movf	postinc1,f,c
  2007  00106C  52E6               	movf	postinc1,f,c
  2008  00106E  52E6               	movf	postinc1,f,c
  2009  001070                     
  2010                           ;seven_seg.c: 48: if(number > 9) {
  2011                           ;stkvar	seven_seg_set@number @ sp[(-4)+-2]
  2012  001070  0EFB               	movlw	-5
  2013  001072  BEE3               	btfsc	plusw1,7,c
  2014  001074  EF49  F008         	goto	u95_21
  2015  001078  0EFB               	movlw	-5
  2016  00107A  50E3               	movf	plusw1,w,c
  2017  00107C  E10C               	bnz	u95_20
  2018  00107E  0EFA               	movlw	-6
  2019  001080  CFE3 F062          	movff	plusw1,btemp
  2020  001084  0E0A               	movlw	10
  2021  001086  5E62               	subwf	btemp^0,f,c
  2022  001088  A0D8               	btfss	status,0,c
  2023  00108A  EF49  F008         	goto	u95_21
  2024  00108E  EF4B  F008         	goto	u95_20
  2025  001092                     u95_21:
  2026  001092  EF81  F008         	goto	l2097
  2027  001096                     u95_20:
  2028  001096                     
  2029                           ;seven_seg.c: 49: int last = number % 10;
  2030  001096  0E0A               	movlw	10
  2031  001098  6EE6               	movwf	postinc1,c
  2032  00109A  0E00               	movlw	0
  2033  00109C  6EE6               	movwf	postinc1,c
  2034                           
  2035                           ;stkvar	seven_seg_set@number @ sp[(-6)+-2]
  2036  00109E  0EF8               	movlw	-8
  2037  0010A0  CFE3 FFE6          	movff	plusw1,postinc1
  2038  0010A4  CFE3 FFE6          	movff	plusw1,postinc1
  2039  0010A8  EC92  F005         	call	___awmod	;wreg free
  2040                           
  2041                           ;stkvar	seven_seg_set@last @ sp[(-4)+2]
  2042  0010AC  0EFE               	movlw	-2
  2043  0010AE  C062  FFE3         	movff	btemp,plusw1
  2044  0010B2  0EFF               	movlw	-1
  2045  0010B4  C063  FFE3         	movff	btemp+1,plusw1
  2046                           
  2047                           ;seven_seg.c: 50: int first = number / 10;
  2048  0010B8  0E0A               	movlw	10
  2049  0010BA  6EE6               	movwf	postinc1,c
  2050  0010BC  0E00               	movlw	0
  2051  0010BE  6EE6               	movwf	postinc1,c
  2052                           
  2053                           ;stkvar	seven_seg_set@number @ sp[(-6)+-2]
  2054  0010C0  0EF8               	movlw	-8
  2055  0010C2  CFE3 FFE6          	movff	plusw1,postinc1
  2056  0010C6  CFE3 FFE6          	movff	plusw1,postinc1
  2057  0010CA  EC71  F003         	call	___awdiv	;wreg free
  2058                           
  2059                           ;stkvar	seven_seg_set@first @ sp[(-4)+0]
  2060  0010CE  0EFC               	movlw	-4
  2061  0010D0  C062  FFE3         	movff	btemp,plusw1
  2062  0010D4  0EFD               	movlw	-3
  2063  0010D6  C063  FFE3         	movff	btemp+1,plusw1
  2064  0010DA                     
  2065                           ;seven_seg.c: 51: update_ports(last, 0);
  2066  0010DA  0E00               	movlw	0
  2067  0010DC  6EE6               	movwf	postinc1,c
  2068  0010DE  0E00               	movlw	0
  2069  0010E0  6EE6               	movwf	postinc1,c
  2070                           
  2071                           ;stkvar	seven_seg_set@last @ sp[(-6)+2]
  2072  0010E2  0EFC               	movlw	-4
  2073  0010E4  CFE3 FFE6          	movff	plusw1,postinc1
  2074  0010E8  CFE3 FFE6          	movff	plusw1,postinc1
  2075  0010EC  ECA2  F002         	call	_update_ports	;wreg free
  2076  0010F0                     
  2077                           ;seven_seg.c: 52: PORTC = PORTC & 0b11110000 | first;
  2078                           ;stkvar	seven_seg_set@first @ sp[(-4)+0]
  2079  0010F0  0EFC               	movlw	-4
  2080  0010F2  CFE3 F06D          	movff	plusw1,btemp+11
  2081  0010F6  5082               	movf	130,w,c	;volatile
  2082  0010F8  0BF0               	andlw	240
  2083  0010FA  106D               	iorwf	(btemp+11)^0,w,c
  2084  0010FC  6E82               	movwf	130,c	;volatile
  2085                           
  2086                           ;seven_seg.c: 53: } else {
  2087  0010FE  EF8C  F008         	goto	l407
  2088  001102                     l2097:
  2089                           
  2090                           ;seven_seg.c: 54: update_ports(number, 1);
  2091  001102  0E01               	movlw	1
  2092  001104  6EE6               	movwf	postinc1,c
  2093  001106  0E00               	movlw	0
  2094  001108  6EE6               	movwf	postinc1,c
  2095                           
  2096                           ;stkvar	seven_seg_set@number @ sp[(-6)+-2]
  2097  00110A  0EF8               	movlw	-8
  2098  00110C  CFE3 FFE6          	movff	plusw1,postinc1
  2099  001110  CFE3 FFE6          	movff	plusw1,postinc1
  2100  001114  ECA2  F002         	call	_update_ports	;wreg free
  2101  001118                     l407:
  2102                           
  2103                           ; _seven_seg_set: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  2104  001118  0EFA               	movlw	250
  2105  00111A  26E1               	addwf	fsr1l,f,c
  2106  00111C  0EFF               	movlw	255
  2107  00111E  22E2               	addwfc	fsr1h,f,c
  2108  001120  0012               	return		;funcret
  2109  001122                     __end_of_seven_seg_set:
  2110                           	opt callstack 0
  2111                           
  2112 ;; *************** function _update_ports *****************
  2113 ;; Defined at:
  2114 ;;		line 15 in file "seven_seg.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  number          2  [STACK] int 
  2117 ;;  display         2  [STACK] int 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;		None
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1  [STACK] void 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2129 ;;      Params:         0       0       0       0       0       0       0
  2130 ;;      Locals:         0       0       0       0       0       0       0
  2131 ;;      Temps:          0       0       0       0       0       0       0
  2132 ;;      Totals:         0       0       0       0       0       0       0
  2133 ;;Total ram usage:        0 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    4
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_seven_seg_set
  2140 ;; This function uses a reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text15
  2144  000544                     __ptext15:
  2145                           	opt callstack 0
  2146  000544                     _update_ports:
  2147                           	opt callstack 20
  2148  000544                     
  2149                           ;seven_seg.c: 16: if(display == 0) {
  2150                           ;stkvar	update_ports@display @ sp[(0)+-4]
  2151  000544  0EFC               	movlw	-4
  2152  000546  CFE3 F062          	movff	plusw1,btemp
  2153  00054A  0EFD               	movlw	-3
  2154  00054C  50E3               	movf	plusw1,w,c
  2155  00054E  1062               	iorwf	btemp^0,w,c
  2156  000550  A4D8               	btfss	status,2,c
  2157  000552  EFAD  F002         	goto	u21_21
  2158  000556  EFAF  F002         	goto	u21_20
  2159  00055A                     u21_21:
  2160  00055A  EF34  F003         	goto	l1391
  2161  00055E                     u21_20:
  2162  00055E  EFD8  F002         	goto	l1371
  2163  000562                     l376:
  2164  000562  6A82               	clrf	130,c	;volatile
  2165  000564  EF6C  F003         	goto	l402
  2166  000568                     l1353:
  2167  000568  0E10               	movlw	16
  2168  00056A  6E82               	movwf	130,c	;volatile
  2169  00056C  EF6C  F003         	goto	l402
  2170  000570                     l1355:
  2171  000570  0E20               	movlw	32
  2172  000572  6E82               	movwf	130,c	;volatile
  2173  000574  EF6C  F003         	goto	l402
  2174  000578                     l1357:
  2175  000578  0E30               	movlw	48
  2176  00057A  6E82               	movwf	130,c	;volatile
  2177  00057C  EF6C  F003         	goto	l402
  2178  000580                     l1359:
  2179  000580  0E40               	movlw	64
  2180  000582  6E82               	movwf	130,c	;volatile
  2181  000584  EF6C  F003         	goto	l402
  2182  000588                     l1361:
  2183  000588  0E50               	movlw	80
  2184  00058A  6E82               	movwf	130,c	;volatile
  2185  00058C  EF6C  F003         	goto	l402
  2186  000590                     l1363:
  2187  000590  0E60               	movlw	96
  2188  000592  6E82               	movwf	130,c	;volatile
  2189  000594  EF6C  F003         	goto	l402
  2190  000598                     l1365:
  2191  000598  0E70               	movlw	112
  2192  00059A  6E82               	movwf	130,c	;volatile
  2193  00059C  EF6C  F003         	goto	l402
  2194  0005A0                     l1367:
  2195  0005A0  0E80               	movlw	128
  2196  0005A2  6E82               	movwf	130,c	;volatile
  2197  0005A4  EF6C  F003         	goto	l402
  2198  0005A8                     l1369:
  2199  0005A8  0E90               	movlw	144
  2200  0005AA  6E82               	movwf	130,c	;volatile
  2201  0005AC  EF6C  F003         	goto	l402
  2202  0005B0                     l1371:
  2203                           
  2204                           ;stkvar	update_ports@number @ sp[(0)+-2]
  2205  0005B0  0EFE               	movlw	-2
  2206  0005B2  CFE3 F06C          	movff	plusw1,btemp+10
  2207  0005B6  0EFF               	movlw	-1
  2208  0005B8  CFE3 F06D          	movff	plusw1,btemp+11
  2209                           
  2210                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2211                           ; Switch size 1, requested type "simple"
  2212                           ; Number of cases is 1, Range of values is 0 to 0
  2213                           ; switch strategies available:
  2214                           ; Name         Instructions Cycles
  2215                           ; simple_byte            4     3 (average)
  2216                           ;	Chosen strategy is simple_byte
  2217  0005BC  506D               	movf	(btemp+11)^0,w,c
  2218  0005BE  0A00               	xorlw	0	; case 0
  2219  0005C0  B4D8               	btfsc	status,2,c
  2220  0005C2  EFE5  F002         	goto	l2245
  2221  0005C6  EFB1  F002         	goto	l376
  2222  0005CA                     l2245:
  2223                           
  2224                           ; Switch size 1, requested type "simple"
  2225                           ; Number of cases is 10, Range of values is 0 to 9
  2226                           ; switch strategies available:
  2227                           ; Name         Instructions Cycles
  2228                           ; simple_byte           31    16 (average)
  2229                           ;	Chosen strategy is simple_byte
  2230  0005CA  506C               	movf	(btemp+10)^0,w,c
  2231  0005CC  0A00               	xorlw	0	; case 0
  2232  0005CE  B4D8               	btfsc	status,2,c
  2233  0005D0  EFB1  F002         	goto	l376
  2234  0005D4  0A01               	xorlw	1	; case 1
  2235  0005D6  B4D8               	btfsc	status,2,c
  2236  0005D8  EFB4  F002         	goto	l1353
  2237  0005DC  0A03               	xorlw	3	; case 2
  2238  0005DE  B4D8               	btfsc	status,2,c
  2239  0005E0  EFB8  F002         	goto	l1355
  2240  0005E4  0A01               	xorlw	1	; case 3
  2241  0005E6  B4D8               	btfsc	status,2,c
  2242  0005E8  EFBC  F002         	goto	l1357
  2243  0005EC  0A07               	xorlw	7	; case 4
  2244  0005EE  B4D8               	btfsc	status,2,c
  2245  0005F0  EFC0  F002         	goto	l1359
  2246  0005F4  0A01               	xorlw	1	; case 5
  2247  0005F6  B4D8               	btfsc	status,2,c
  2248  0005F8  EFC4  F002         	goto	l1361
  2249  0005FC  0A03               	xorlw	3	; case 6
  2250  0005FE  B4D8               	btfsc	status,2,c
  2251  000600  EFC8  F002         	goto	l1363
  2252  000604  0A01               	xorlw	1	; case 7
  2253  000606  B4D8               	btfsc	status,2,c
  2254  000608  EFCC  F002         	goto	l1365
  2255  00060C  0A0F               	xorlw	15	; case 8
  2256  00060E  B4D8               	btfsc	status,2,c
  2257  000610  EFD0  F002         	goto	l1367
  2258  000614  0A01               	xorlw	1	; case 9
  2259  000616  B4D8               	btfsc	status,2,c
  2260  000618  EFD4  F002         	goto	l1369
  2261  00061C  EFB1  F002         	goto	l376
  2262  000620                     l1373:
  2263  000620  0E01               	movlw	1
  2264  000622  6E82               	movwf	130,c	;volatile
  2265  000624  EF6C  F003         	goto	l402
  2266  000628                     l1375:
  2267  000628  0E02               	movlw	2
  2268  00062A  6E82               	movwf	130,c	;volatile
  2269  00062C  EF6C  F003         	goto	l402
  2270  000630                     l1377:
  2271  000630  0E03               	movlw	3
  2272  000632  6E82               	movwf	130,c	;volatile
  2273  000634  EF6C  F003         	goto	l402
  2274  000638                     l1379:
  2275  000638  0E04               	movlw	4
  2276  00063A  6E82               	movwf	130,c	;volatile
  2277  00063C  EF6C  F003         	goto	l402
  2278  000640                     l1381:
  2279  000640  0E05               	movlw	5
  2280  000642  6E82               	movwf	130,c	;volatile
  2281  000644  EF6C  F003         	goto	l402
  2282  000648                     l1383:
  2283  000648  0E06               	movlw	6
  2284  00064A  6E82               	movwf	130,c	;volatile
  2285  00064C  EF6C  F003         	goto	l402
  2286  000650                     l1385:
  2287  000650  0E07               	movlw	7
  2288  000652  6E82               	movwf	130,c	;volatile
  2289  000654  EF6C  F003         	goto	l402
  2290  000658                     l1387:
  2291  000658  0E08               	movlw	8
  2292  00065A  6E82               	movwf	130,c	;volatile
  2293  00065C  EF6C  F003         	goto	l402
  2294  000660                     l1389:
  2295  000660  0E09               	movlw	9
  2296  000662  6E82               	movwf	130,c	;volatile
  2297  000664  EF6C  F003         	goto	l402
  2298  000668                     l1391:
  2299                           
  2300                           ;stkvar	update_ports@number @ sp[(0)+-2]
  2301  000668  0EFE               	movlw	-2
  2302  00066A  CFE3 F06C          	movff	plusw1,btemp+10
  2303  00066E  0EFF               	movlw	-1
  2304  000670  CFE3 F06D          	movff	plusw1,btemp+11
  2305                           
  2306                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2307                           ; Switch size 1, requested type "simple"
  2308                           ; Number of cases is 1, Range of values is 0 to 0
  2309                           ; switch strategies available:
  2310                           ; Name         Instructions Cycles
  2311                           ; simple_byte            4     3 (average)
  2312                           ;	Chosen strategy is simple_byte
  2313  000674  506D               	movf	(btemp+11)^0,w,c
  2314  000676  0A00               	xorlw	0	; case 0
  2315  000678  B4D8               	btfsc	status,2,c
  2316  00067A  EF41  F003         	goto	l2247
  2317  00067E  EFB1  F002         	goto	l376
  2318  000682                     l2247:
  2319                           
  2320                           ; Switch size 1, requested type "simple"
  2321                           ; Number of cases is 10, Range of values is 0 to 9
  2322                           ; switch strategies available:
  2323                           ; Name         Instructions Cycles
  2324                           ; simple_byte           31    16 (average)
  2325                           ;	Chosen strategy is simple_byte
  2326  000682  506C               	movf	(btemp+10)^0,w,c
  2327  000684  0A00               	xorlw	0	; case 0
  2328  000686  B4D8               	btfsc	status,2,c
  2329  000688  EFB1  F002         	goto	l376
  2330  00068C  0A01               	xorlw	1	; case 1
  2331  00068E  B4D8               	btfsc	status,2,c
  2332  000690  EF10  F003         	goto	l1373
  2333  000694  0A03               	xorlw	3	; case 2
  2334  000696  B4D8               	btfsc	status,2,c
  2335  000698  EF14  F003         	goto	l1375
  2336  00069C  0A01               	xorlw	1	; case 3
  2337  00069E  B4D8               	btfsc	status,2,c
  2338  0006A0  EF18  F003         	goto	l1377
  2339  0006A4  0A07               	xorlw	7	; case 4
  2340  0006A6  B4D8               	btfsc	status,2,c
  2341  0006A8  EF1C  F003         	goto	l1379
  2342  0006AC  0A01               	xorlw	1	; case 5
  2343  0006AE  B4D8               	btfsc	status,2,c
  2344  0006B0  EF20  F003         	goto	l1381
  2345  0006B4  0A03               	xorlw	3	; case 6
  2346  0006B6  B4D8               	btfsc	status,2,c
  2347  0006B8  EF24  F003         	goto	l1383
  2348  0006BC  0A01               	xorlw	1	; case 7
  2349  0006BE  B4D8               	btfsc	status,2,c
  2350  0006C0  EF28  F003         	goto	l1385
  2351  0006C4  0A0F               	xorlw	15	; case 8
  2352  0006C6  B4D8               	btfsc	status,2,c
  2353  0006C8  EF2C  F003         	goto	l1387
  2354  0006CC  0A01               	xorlw	1	; case 9
  2355  0006CE  B4D8               	btfsc	status,2,c
  2356  0006D0  EF30  F003         	goto	l1389
  2357  0006D4  EFB1  F002         	goto	l376
  2358  0006D8                     l402:
  2359                           
  2360                           ; _update_ports: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  2361  0006D8  52E5               	movf	postdec1,f,c
  2362  0006DA  52E5               	movf	postdec1,f,c
  2363  0006DC  52E5               	movf	postdec1,f,c
  2364  0006DE  52E5               	movf	postdec1,f,c
  2365  0006E0  0012               	return		;funcret
  2366  0006E2                     __end_of_update_ports:
  2367                           	opt callstack 0
  2368                           
  2369 ;; *************** function ___awdiv *****************
  2370 ;; Defined at:
  2371 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  dividend        2  [STACK] int 
  2374 ;;  divisor         2  [STACK] int 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  quotient        2  [STACK] int 
  2377 ;;  sign            1  [STACK] unsigned char 
  2378 ;;  counter         1  [STACK] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  2  [STACK] int 
  2381 ;; Registers used:
  2382 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2388 ;;      Params:         0       0       0       0       0       0       0
  2389 ;;      Locals:         0       0       0       0       0       0       0
  2390 ;;      Temps:          0       0       0       0       0       0       0
  2391 ;;      Totals:         0       0       0       0       0       0       0
  2392 ;;Total ram usage:        0 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; Hardware stack levels required when called:    4
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_seven_seg_set
  2399 ;; This function uses a reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text16
  2403  0006E2                     __ptext16:
  2404                           	opt callstack 0
  2405  0006E2                     ___awdiv:
  2406                           	opt callstack 0
  2407                           
  2408                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2409  0006E2  52E6               	movf	postinc1,f,c
  2410  0006E4  52E6               	movf	postinc1,f,c
  2411  0006E6  52E6               	movf	postinc1,f,c
  2412  0006E8  52E6               	movf	postinc1,f,c
  2413  0006EA                     
  2414                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  2415  0006EA  0EFE               	movlw	-2
  2416  0006EC  6AE3               	clrf	plusw1,c
  2417  0006EE                     
  2418                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  2419  0006EE  0EF9               	movlw	-7
  2420  0006F0  BEE3               	btfsc	plusw1,7,c
  2421  0006F2  EF7F  F003         	goto	u22_20
  2422  0006F6  EF7D  F003         	goto	u22_21
  2423  0006FA                     u22_21:
  2424  0006FA  EF88  F003         	goto	l1409
  2425  0006FE                     u22_20:
  2426  0006FE                     
  2427                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  2428                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  2429  0006FE  0EF8               	movlw	-8
  2430  000700  6CE3               	negf	plusw1,c
  2431  000702  0EF9               	movlw	-7
  2432  000704  1EE3               	comf	plusw1,f,c
  2433  000706  B0D8               	btfsc	status,0,c
  2434  000708  2AE3               	incf	plusw1,f,c
  2435  00070A                     
  2436                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  2437  00070A  0EFE               	movlw	-2
  2438  00070C  6AE3               	clrf	plusw1,c
  2439  00070E  2AE3               	incf	plusw1,f,c
  2440  000710                     l1409:
  2441                           
  2442                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  2443  000710  0EFB               	movlw	-5
  2444  000712  BEE3               	btfsc	plusw1,7,c
  2445  000714  EF90  F003         	goto	u23_20
  2446  000718  EF8E  F003         	goto	u23_21
  2447  00071C                     u23_21:
  2448  00071C  EF98  F003         	goto	l1415
  2449  000720                     u23_20:
  2450  000720                     
  2451                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  2452                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  2453  000720  0EFA               	movlw	-6
  2454  000722  6CE3               	negf	plusw1,c
  2455  000724  0EFB               	movlw	-5
  2456  000726  1EE3               	comf	plusw1,f,c
  2457  000728  B0D8               	btfsc	status,0,c
  2458  00072A  2AE3               	incf	plusw1,f,c
  2459  00072C                     
  2460                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  2461  00072C  0EFE               	movlw	-2
  2462  00072E  70E3               	btg	plusw1,0,c
  2463  000730                     l1415:
  2464                           
  2465                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  2466  000730  0EFC               	movlw	-4
  2467  000732  6AE3               	clrf	plusw1,c
  2468  000734  0EFD               	movlw	-3
  2469  000736  6AE3               	clrf	plusw1,c
  2470  000738                     
  2471                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  2472  000738  0EF8               	movlw	-8
  2473  00073A  CFE3 F062          	movff	plusw1,btemp
  2474  00073E  0EF9               	movlw	-7
  2475  000740  50E3               	movf	plusw1,w,c
  2476  000742  1062               	iorwf	btemp^0,w,c
  2477  000744  B4D8               	btfsc	status,2,c
  2478  000746  EFA7  F003         	goto	u24_21
  2479  00074A  EFA9  F003         	goto	u24_20
  2480  00074E                     u24_21:
  2481  00074E  EF15  F004         	goto	l1439
  2482  000752                     u24_20:
  2483  000752                     
  2484                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
  2485  000752  0EFF               	movlw	-1
  2486  000754  6AE3               	clrf	plusw1,c
  2487  000756  2AE3               	incf	plusw1,f,c
  2488  000758  EFBF  F003         	goto	l1425
  2489  00075C                     l1421:
  2490                           
  2491                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  2492  00075C  0EF8               	movlw	-8
  2493  00075E  50E3               	movf	plusw1,w,c
  2494  000760  90D8               	bcf	status,0,c
  2495  000762  34E8               	rlcf	wreg,w,c
  2496  000764  6E62               	movwf	btemp^0,c
  2497  000766  0EF8               	movlw	-8
  2498  000768  C062  FFE3         	movff	btemp,plusw1
  2499  00076C  0EF9               	movlw	-7
  2500  00076E  50E3               	movf	plusw1,w,c
  2501  000770  34E8               	rlcf	wreg,w,c
  2502  000772  6E62               	movwf	btemp^0,c
  2503  000774  0EF9               	movlw	-7
  2504  000776  C062  FFE3         	movff	btemp,plusw1
  2505  00077A                     
  2506                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
  2507  00077A  0EFF               	movlw	-1
  2508  00077C  2AE3               	incf	plusw1,f,c
  2509  00077E                     l1425:
  2510                           
  2511                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  2512  00077E  0EF9               	movlw	-7
  2513  000780  AEE3               	btfss	plusw1,7,c
  2514  000782  EFC5  F003         	goto	u25_21
  2515  000786  EFC7  F003         	goto	u25_20
  2516  00078A                     u25_21:
  2517  00078A  EFAE  F003         	goto	l1421
  2518  00078E                     u25_20:
  2519  00078E                     l1427:
  2520                           
  2521                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  2522  00078E  0EFC               	movlw	-4
  2523  000790  50E3               	movf	plusw1,w,c
  2524  000792  90D8               	bcf	status,0,c
  2525  000794  34E8               	rlcf	wreg,w,c
  2526  000796  6E62               	movwf	btemp^0,c
  2527  000798  0EFC               	movlw	-4
  2528  00079A  C062  FFE3         	movff	btemp,plusw1
  2529  00079E  0EFD               	movlw	-3
  2530  0007A0  50E3               	movf	plusw1,w,c
  2531  0007A2  34E8               	rlcf	wreg,w,c
  2532  0007A4  6E62               	movwf	btemp^0,c
  2533  0007A6  0EFD               	movlw	-3
  2534  0007A8  C062  FFE3         	movff	btemp,plusw1
  2535  0007AC                     
  2536                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  2537  0007AC  0EF8               	movlw	-8
  2538  0007AE  CFE3 F06C          	movff	plusw1,btemp+10
  2539  0007B2  0EF9               	movlw	-7
  2540  0007B4  CFE3 F06D          	movff	plusw1,btemp+11
  2541                           
  2542                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  2543  0007B8  0EFA               	movlw	-6
  2544  0007BA  CFE3 F06A          	movff	plusw1,btemp+8
  2545  0007BE  0EFB               	movlw	-5
  2546  0007C0  CFE3 F06B          	movff	plusw1,btemp+9
  2547  0007C4  506C               	movf	(btemp+10)^0,w,c
  2548  0007C6  5C6A               	subwf	(btemp+8)^0,w,c
  2549  0007C8  506D               	movf	(btemp+11)^0,w,c
  2550  0007CA  586B               	subwfb	(btemp+9)^0,w,c
  2551  0007CC  A0D8               	btfss	status,0,c
  2552  0007CE  EFEB  F003         	goto	u26_21
  2553  0007D2  EFED  F003         	goto	u26_20
  2554  0007D6                     u26_21:
  2555  0007D6  EF01  F004         	goto	l1435
  2556  0007DA                     u26_20:
  2557  0007DA                     
  2558                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  2559                           ;stkvar	___awdiv@dividend @ sp[(-4)+-2]
  2560  0007DA  0EFA               	movlw	-6
  2561  0007DC  50E3               	movf	plusw1,w,c
  2562  0007DE  6E62               	movwf	btemp^0,c
  2563  0007E0  0EF8               	movlw	-8
  2564  0007E2  50E3               	movf	plusw1,w,c
  2565  0007E4  5E62               	subwf	btemp^0,f,c
  2566  0007E6  0EFA               	movlw	-6
  2567  0007E8  C062  FFE3         	movff	btemp,plusw1
  2568  0007EC  0EFB               	movlw	-5
  2569  0007EE  50E3               	movf	plusw1,w,c
  2570  0007F0  6E62               	movwf	btemp^0,c
  2571  0007F2  0EF9               	movlw	-7
  2572  0007F4  50E3               	movf	plusw1,w,c
  2573  0007F6  5A62               	subwfb	btemp^0,f,c
  2574  0007F8  0EFB               	movlw	-5
  2575  0007FA  C062  FFE3         	movff	btemp,plusw1
  2576  0007FE                     
  2577                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  2578  0007FE  0EFC               	movlw	-4
  2579  000800  80E3               	bsf	plusw1,0,c
  2580  000802                     l1435:
  2581                           
  2582                           ;stkvar	___awdiv@divisor @ sp[(-4)+-4]
  2583  000802  90D8               	bcf	status,0,c
  2584  000804  0EF9               	movlw	-7
  2585  000806  32E3               	rrcf	plusw1,f,c
  2586  000808  0EF8               	movlw	-8
  2587  00080A  32E3               	rrcf	plusw1,f,c
  2588  00080C                     
  2589                           ;stkvar	___awdiv@counter @ sp[(-4)+3]
  2590  00080C  0EFF               	movlw	-1
  2591  00080E  50E3               	movf	plusw1,w,c
  2592  000810  6E62               	movwf	btemp^0,c
  2593  000812  0E01               	movlw	1
  2594  000814  5E62               	subwf	btemp^0,f,c
  2595  000816  0EFF               	movlw	-1
  2596  000818  C062  FFE3         	movff	btemp,plusw1
  2597  00081C  A4D8               	btfss	status,2,c
  2598  00081E  EF13  F004         	goto	u27_21
  2599  000822  EF15  F004         	goto	u27_20
  2600  000826                     u27_21:
  2601  000826  EFC7  F003         	goto	l1427
  2602  00082A                     u27_20:
  2603  00082A                     l1439:
  2604                           
  2605                           ;stkvar	___awdiv@sign @ sp[(-4)+2]
  2606  00082A  0EFE               	movlw	-2
  2607  00082C  50E3               	movf	plusw1,w,c
  2608  00082E  B4D8               	btfsc	status,2,c
  2609  000830  EF1C  F004         	goto	u28_21
  2610  000834  EF1E  F004         	goto	u28_20
  2611  000838                     u28_21:
  2612  000838  EF24  F004         	goto	l1443
  2613  00083C                     u28_20:
  2614  00083C                     
  2615                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  2616                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  2617  00083C  0EFC               	movlw	-4
  2618  00083E  6CE3               	negf	plusw1,c
  2619  000840  0EFD               	movlw	-3
  2620  000842  1EE3               	comf	plusw1,f,c
  2621  000844  B0D8               	btfsc	status,0,c
  2622  000846  2AE3               	incf	plusw1,f,c
  2623  000848                     l1443:
  2624                           
  2625                           ;stkvar	___awdiv@quotient @ sp[(-4)+0]
  2626  000848  0EFC               	movlw	-4
  2627  00084A  CFE3 F062          	movff	plusw1,btemp
  2628  00084E  0EFD               	movlw	-3
  2629  000850  CFE3 F063          	movff	plusw1,btemp+1
  2630  000854                     
  2631                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  2632  000854  0EF8               	movlw	248
  2633  000856  26E1               	addwf	fsr1l,f,c
  2634  000858  0EFF               	movlw	255
  2635  00085A  22E2               	addwfc	fsr1h,f,c
  2636  00085C  0012               	return		;funcret
  2637  00085E                     __end_of___awdiv:
  2638                           	opt callstack 0
  2639                           
  2640 ;; *************** function _sem_wait *****************
  2641 ;; Defined at:
  2642 ;;		line 21 in file "semaphore.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  sem             2  [STACK] PTR struct sem
  2645 ;;		 -> sem5(20), sem4(20), sem3(20), sem2(20), 
  2646 ;;		 -> sem1(20), 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1  [STACK] void 
  2651 ;; Registers used:
  2652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2658 ;;      Params:         0       0       0       0       0       0       0
  2659 ;;      Locals:         0       0       0       0       0       0       0
  2660 ;;      Temps:          0       0       0       0       0       0       0
  2661 ;;      Totals:         0       0       0       0       0       0       0
  2662 ;;Total ram usage:        0 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    7
  2665 ;; This function calls:
  2666 ;;		_dispatcher
  2667 ;; This function is called by:
  2668 ;;		_task_um
  2669 ;;		_task_dois
  2670 ;;		_task_disp
  2671 ;;		_task_m1
  2672 ;;		_task_m2
  2673 ;; This function uses a reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text17
  2677  000E9A                     __ptext17:
  2678                           	opt callstack 0
  2679  000E9A                     _sem_wait:
  2680                           	opt callstack 18
  2681  000E9A                     
  2682                           ;semaphore.c: 23: INTCONbits.GIE = 0;;
  2683  000E9A  9EF2               	bcf	242,7,c	;volatile
  2684  000E9C                     
  2685                           ;semaphore.c: 25: sem->contador--;
  2686                           ;stkvar	sem_wait@sem @ sp[(0)+-2]
  2687  000E9C  0EFE               	movlw	-2
  2688  000E9E  CFE3 F06C          	movff	plusw1,btemp+10
  2689  000EA2  0EFF               	movlw	-1
  2690  000EA4  CFE3 F06D          	movff	plusw1,btemp+11
  2691  000EA8  0E12               	movlw	18
  2692  000EAA  246C               	addwf	(btemp+10)^0,w,c
  2693  000EAC  6ED9               	movwf	fsr2l,c
  2694  000EAE  0E00               	movlw	0
  2695  000EB0  206D               	addwfc	(btemp+11)^0,w,c
  2696  000EB2  6EDA               	movwf	fsr2h,c
  2697  000EB4  06DE               	decf	postinc2,f,c
  2698  000EB6  0E00               	movlw	0
  2699  000EB8  5ADD               	subwfb	postdec2,f,c
  2700  000EBA                     
  2701                           ;semaphore.c: 26: if (sem->contador < 0) {
  2702                           ;stkvar	sem_wait@sem @ sp[(0)+-2]
  2703  000EBA  0EFE               	movlw	-2
  2704  000EBC  CFE3 F06C          	movff	plusw1,btemp+10
  2705  000EC0  0EFF               	movlw	-1
  2706  000EC2  CFE3 F06D          	movff	plusw1,btemp+11
  2707  000EC6  0E12               	movlw	18
  2708  000EC8  246C               	addwf	(btemp+10)^0,w,c
  2709  000ECA  6ED9               	movwf	fsr2l,c
  2710  000ECC  0E00               	movlw	0
  2711  000ECE  206D               	addwfc	(btemp+11)^0,w,c
  2712  000ED0  6EDA               	movwf	fsr2h,c
  2713  000ED2  0E01               	movlw	1
  2714  000ED4  BEDB               	btfsc	plusw2,7,c
  2715  000ED6  EF71  F007         	goto	u93_20
  2716  000EDA  EF6F  F007         	goto	u93_21
  2717  000EDE                     u93_21:
  2718  000EDE  EFC4  F007         	goto	l2073
  2719  000EE2                     u93_20:
  2720  000EE2                     
  2721                           ;semaphore.c: 28: sem->bloqueados[sem->bloqued_tasks] = f_aptos.task_running;
  2722  000EE2  EE23  F0D5         	lfsr	2,_f_aptos+793
  2723                           
  2724                           ;stkvar	sem_wait@sem @ sp[(0)+-2]
  2725  000EE6  0EFE               	movlw	-2
  2726  000EE8  CFE3 F06C          	movff	plusw1,btemp+10
  2727  000EEC  0EFF               	movlw	-1
  2728  000EEE  CFE3 F06D          	movff	plusw1,btemp+11
  2729  000EF2  0E0E               	movlw	14
  2730  000EF4  246C               	addwf	(btemp+10)^0,w,c
  2731  000EF6  6EE9               	movwf	fsr0l,c
  2732  000EF8  0E00               	movlw	0
  2733  000EFA  206D               	addwfc	(btemp+11)^0,w,c
  2734  000EFC  6EEA               	movwf	fsr0h,c
  2735  000EFE  CFEE F06C          	movff	postinc0,btemp+10
  2736  000F02  CFED F06D          	movff	postdec0,btemp+11
  2737  000F06  90D8               	bcf	status,0,c
  2738  000F08  346C               	rlcf	(btemp+10)^0,w,c
  2739  000F0A  6E6A               	movwf	(btemp+8)^0,c
  2740  000F0C  346D               	rlcf	(btemp+11)^0,w,c
  2741  000F0E  6E6B               	movwf	(btemp+9)^0,c
  2742                           
  2743                           ;stkvar	sem_wait@sem @ sp[(0)+-2]
  2744  000F10  0EFE               	movlw	-2
  2745  000F12  CFE3 F06C          	movff	plusw1,btemp+10
  2746  000F16  0EFF               	movlw	-1
  2747  000F18  CFE3 F06D          	movff	plusw1,btemp+11
  2748  000F1C  506A               	movf	(btemp+8)^0,w,c
  2749  000F1E  246C               	addwf	(btemp+10)^0,w,c
  2750  000F20  6EE9               	movwf	fsr0l,c
  2751  000F22  506B               	movf	(btemp+9)^0,w,c
  2752  000F24  206D               	addwfc	(btemp+11)^0,w,c
  2753  000F26  6EEA               	movwf	fsr0h,c
  2754  000F28  CFDE FFEE          	movff	postinc2,postinc0
  2755  000F2C  CFDD FFED          	movff	postdec2,postdec0
  2756  000F30                     
  2757                           ;semaphore.c: 29: sem->bloqued_tasks = (sem->bloqued_tasks+1) % (7+1);
  2758                           ;stkvar	sem_wait@sem @ sp[(0)+-2]
  2759  000F30  0EFE               	movlw	-2
  2760  000F32  CFE3 F06C          	movff	plusw1,btemp+10
  2761  000F36  0EFF               	movlw	-1
  2762  000F38  CFE3 F06D          	movff	plusw1,btemp+11
  2763  000F3C  0E0E               	movlw	14
  2764  000F3E  246C               	addwf	(btemp+10)^0,w,c
  2765  000F40  6ED9               	movwf	fsr2l,c
  2766  000F42  0E00               	movlw	0
  2767  000F44  206D               	addwfc	(btemp+11)^0,w,c
  2768  000F46  6EDA               	movwf	fsr2h,c
  2769  000F48  CFDE F06C          	movff	postinc2,btemp+10
  2770  000F4C  CFDD F06D          	movff	postdec2,btemp+11
  2771  000F50  0E01               	movlw	1
  2772  000F52  266C               	addwf	(btemp+10)^0,f,c
  2773  000F54  0E00               	movlw	0
  2774  000F56  226D               	addwfc	(btemp+11)^0,f,c
  2775  000F58  0E07               	movlw	7
  2776  000F5A  166C               	andwf	(btemp+10)^0,f,c
  2777  000F5C  0E00               	movlw	0
  2778  000F5E  166D               	andwf	(btemp+11)^0,f,c
  2779                           
  2780                           ;stkvar	sem_wait@sem @ sp[(0)+-2]
  2781  000F60  0EFE               	movlw	-2
  2782  000F62  CFE3 F06A          	movff	plusw1,btemp+8
  2783  000F66  0EFF               	movlw	-1
  2784  000F68  CFE3 F06B          	movff	plusw1,btemp+9
  2785  000F6C  0E0E               	movlw	14
  2786  000F6E  246A               	addwf	(btemp+8)^0,w,c
  2787  000F70  6ED9               	movwf	fsr2l,c
  2788  000F72  0E00               	movlw	0
  2789  000F74  206B               	addwfc	(btemp+9)^0,w,c
  2790  000F76  6EDA               	movwf	fsr2h,c
  2791  000F78  C06C  FFDE         	movff	btemp+10,postinc2
  2792  000F7C  C06D  FFDD         	movff	btemp+11,postdec2
  2793  000F80                     
  2794                           ;semaphore.c: 30: dispatcher(W_SEMAPHORE);
  2795  000F80  0E04               	movlw	4
  2796  000F82  6EE6               	movwf	postinc1,c
  2797  000F84  EC0A  F000         	call	_dispatcher	;wreg free
  2798  000F88                     l2073:
  2799                           
  2800                           ;semaphore.c: 31: };semaphore.c: 33: INTCONbits.GIE = 1;;
  2801  000F88  8EF2               	bsf	242,7,c	;volatile
  2802  000F8A                     
  2803                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  2804  000F8A  52E5               	movf	postdec1,f,c
  2805  000F8C  52E5               	movf	postdec1,f,c
  2806  000F8E  0012               	return		;funcret
  2807  000F90                     __end_of_sem_wait:
  2808                           	opt callstack 0
  2809                           
  2810 ;; *************** function _sem_post *****************
  2811 ;; Defined at:
  2812 ;;		line 36 in file "semaphore.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  sem             2  [STACK] PTR struct sem
  2815 ;;		 -> sem5(20), sem4(20), sem3(20), sem2(20), 
  2816 ;;		 -> sem1(20), 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;		None
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1  [STACK] void 
  2821 ;; Registers used:
  2822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2828 ;;      Params:         0       0       0       0       0       0       0
  2829 ;;      Locals:         0       0       0       0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0       0       0
  2831 ;;      Totals:         0       0       0       0       0       0       0
  2832 ;;Total ram usage:        0 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    7
  2835 ;; This function calls:
  2836 ;;		___awmod
  2837 ;;		_dispatcher
  2838 ;; This function is called by:
  2839 ;;		_task_um
  2840 ;;		_task_dois
  2841 ;;		_task_disp
  2842 ;;		_task_m1
  2843 ;;		_task_m2
  2844 ;; This function uses a reentrant model
  2845 ;;
  2846                           
  2847                           	psect	text18
  2848  0009D6                     __ptext18:
  2849                           	opt callstack 0
  2850  0009D6                     _sem_post:
  2851                           	opt callstack 18
  2852  0009D6                     
  2853                           ;semaphore.c: 38: INTCONbits.GIE = 0;;
  2854  0009D6  9EF2               	bcf	242,7,c	;volatile
  2855  0009D8                     
  2856                           ;semaphore.c: 40: sem->contador++;
  2857                           ;stkvar	sem_post@sem @ sp[(0)+-2]
  2858  0009D8  0EFE               	movlw	-2
  2859  0009DA  CFE3 F06C          	movff	plusw1,btemp+10
  2860  0009DE  0EFF               	movlw	-1
  2861  0009E0  CFE3 F06D          	movff	plusw1,btemp+11
  2862  0009E4  0E12               	movlw	18
  2863  0009E6  246C               	addwf	(btemp+10)^0,w,c
  2864  0009E8  6ED9               	movwf	fsr2l,c
  2865  0009EA  0E00               	movlw	0
  2866  0009EC  206D               	addwfc	(btemp+11)^0,w,c
  2867  0009EE  6EDA               	movwf	fsr2h,c
  2868  0009F0  2ADE               	incf	postinc2,f,c
  2869  0009F2  0E00               	movlw	0
  2870  0009F4  22DD               	addwfc	postdec2,f,c
  2871  0009F6                     
  2872                           ;semaphore.c: 41: if (sem->contador <= 0) {
  2873                           ;stkvar	sem_post@sem @ sp[(0)+-2]
  2874  0009F6  0EFE               	movlw	-2
  2875  0009F8  CFE3 F06C          	movff	plusw1,btemp+10
  2876  0009FC  0EFF               	movlw	-1
  2877  0009FE  CFE3 F06D          	movff	plusw1,btemp+11
  2878  000A02  0E12               	movlw	18
  2879  000A04  246C               	addwf	(btemp+10)^0,w,c
  2880  000A06  6ED9               	movwf	fsr2l,c
  2881  000A08  0E00               	movlw	0
  2882  000A0A  206D               	addwfc	(btemp+11)^0,w,c
  2883  000A0C  6EDA               	movwf	fsr2h,c
  2884  000A0E  0E01               	movlw	1
  2885  000A10  BEDB               	btfsc	plusw2,7,c
  2886  000A12  EF16  F005         	goto	u94_20
  2887  000A16  0E01               	movlw	1
  2888  000A18  50DB               	movf	plusw2,w,c
  2889  000A1A  E106               	bnz	u94_21
  2890  000A1C  04DE               	decf	postinc2,w,c
  2891  000A1E  B0D8               	btfsc	status,0,c
  2892  000A20  EF14  F005         	goto	u94_21
  2893  000A24  EF16  F005         	goto	u94_20
  2894  000A28                     u94_21:
  2895  000A28  EF8E  F005         	goto	l2087
  2896  000A2C                     u94_20:
  2897  000A2C                     
  2898                           ;semaphore.c: 43: f_aptos.APTOS[sem->bloqueados[sem->next_task_to_unblock]].task_state =
      +                           READY;
  2899                           ;stkvar	sem_post@sem @ sp[(0)+-2]
  2900  000A2C  0EFE               	movlw	-2
  2901  000A2E  CFE3 F06C          	movff	plusw1,btemp+10
  2902  000A32  0EFF               	movlw	-1
  2903  000A34  CFE3 F06D          	movff	plusw1,btemp+11
  2904  000A38  0E10               	movlw	16
  2905  000A3A  246C               	addwf	(btemp+10)^0,w,c
  2906  000A3C  6ED9               	movwf	fsr2l,c
  2907  000A3E  0E00               	movlw	0
  2908  000A40  206D               	addwfc	(btemp+11)^0,w,c
  2909  000A42  6EDA               	movwf	fsr2h,c
  2910  000A44  CFDE F06C          	movff	postinc2,btemp+10
  2911  000A48  CFDD F06D          	movff	postdec2,btemp+11
  2912  000A4C  90D8               	bcf	status,0,c
  2913  000A4E  346C               	rlcf	(btemp+10)^0,w,c
  2914  000A50  6E6A               	movwf	(btemp+8)^0,c
  2915  000A52  346D               	rlcf	(btemp+11)^0,w,c
  2916  000A54  6E6B               	movwf	(btemp+9)^0,c
  2917                           
  2918                           ;stkvar	sem_post@sem @ sp[(0)+-2]
  2919  000A56  0EFE               	movlw	-2
  2920  000A58  CFE3 F06C          	movff	plusw1,btemp+10
  2921  000A5C  0EFF               	movlw	-1
  2922  000A5E  CFE3 F06D          	movff	plusw1,btemp+11
  2923  000A62  506A               	movf	(btemp+8)^0,w,c
  2924  000A64  246C               	addwf	(btemp+10)^0,w,c
  2925  000A66  6ED9               	movwf	fsr2l,c
  2926  000A68  506B               	movf	(btemp+9)^0,w,c
  2927  000A6A  206D               	addwfc	(btemp+11)^0,w,c
  2928  000A6C  6EDA               	movwf	fsr2h,c
  2929  000A6E  CFDE F06C          	movff	postinc2,btemp+10
  2930  000A72  CFDD F06D          	movff	postdec2,btemp+11
  2931  000A76  0E71               	movlw	113
  2932  000A78  026C               	mulwf	(btemp+10)^0,c
  2933  000A7A  CFF3 F06A          	movff	prodl,btemp+8
  2934  000A7E  CFF4 F06B          	movff	prodh,btemp+9
  2935  000A82  026D               	mulwf	(btemp+11)^0,c
  2936  000A84  50F3               	movf	prodl,w,c
  2937  000A86  266B               	addwf	(btemp+9)^0,f,c
  2938  000A88  0EC0               	movlw	low (_f_aptos+4)
  2939  000A8A  246A               	addwf	(btemp+8)^0,w,c
  2940  000A8C  6ED9               	movwf	fsr2l,c
  2941  000A8E  0E00               	movlw	high (_f_aptos+4)
  2942  000A90  206B               	addwfc	(btemp+9)^0,w,c
  2943  000A92  6EDA               	movwf	fsr2h,c
  2944  000A94  0E01               	movlw	1
  2945  000A96  6EDF               	movwf	indf2,c
  2946  000A98                     
  2947                           ;semaphore.c: 44: sem->next_task_to_unblock = (sem->next_task_to_unblock+1) % sem->bloqu
      +                          ed_tasks;
  2948                           ;stkvar	sem_post@sem @ sp[(0)+-2]
  2949  000A98  0EFE               	movlw	-2
  2950  000A9A  CFE3 F06C          	movff	plusw1,btemp+10
  2951  000A9E  0EFF               	movlw	-1
  2952  000AA0  CFE3 F06D          	movff	plusw1,btemp+11
  2953  000AA4  0E0E               	movlw	14
  2954  000AA6  246C               	addwf	(btemp+10)^0,w,c
  2955  000AA8  6ED9               	movwf	fsr2l,c
  2956  000AAA  0E00               	movlw	0
  2957  000AAC  206D               	addwfc	(btemp+11)^0,w,c
  2958  000AAE  6EDA               	movwf	fsr2h,c
  2959  000AB0  CFDE F06C          	movff	postinc2,btemp+10
  2960  000AB4  CFDD F06D          	movff	postdec2,btemp+11
  2961  000AB8  C06C  FFE6         	movff	btemp+10,postinc1
  2962  000ABC  C06D  FFE6         	movff	btemp+11,postinc1
  2963                           
  2964                           ;stkvar	sem_post@sem @ sp[(-2)+-2]
  2965  000AC0  0EFC               	movlw	-4
  2966  000AC2  CFE3 F06C          	movff	plusw1,btemp+10
  2967  000AC6  0EFD               	movlw	-3
  2968  000AC8  CFE3 F06D          	movff	plusw1,btemp+11
  2969  000ACC  0E10               	movlw	16
  2970  000ACE  246C               	addwf	(btemp+10)^0,w,c
  2971  000AD0  6ED9               	movwf	fsr2l,c
  2972  000AD2  0E00               	movlw	0
  2973  000AD4  206D               	addwfc	(btemp+11)^0,w,c
  2974  000AD6  6EDA               	movwf	fsr2h,c
  2975  000AD8  CFDE F06C          	movff	postinc2,btemp+10
  2976  000ADC  CFDD F06D          	movff	postdec2,btemp+11
  2977  000AE0  0E01               	movlw	1
  2978  000AE2  266C               	addwf	(btemp+10)^0,f,c
  2979  000AE4  0E00               	movlw	0
  2980  000AE6  226D               	addwfc	(btemp+11)^0,f,c
  2981  000AE8  C06C  FFE6         	movff	btemp+10,postinc1
  2982  000AEC  C06D  FFE6         	movff	btemp+11,postinc1
  2983  000AF0  EC92  F005         	call	___awmod	;wreg free
  2984                           
  2985                           ;stkvar	sem_post@sem @ sp[(0)+-2]
  2986  000AF4  0EFE               	movlw	-2
  2987  000AF6  CFE3 F06C          	movff	plusw1,btemp+10
  2988  000AFA  0EFF               	movlw	-1
  2989  000AFC  CFE3 F06D          	movff	plusw1,btemp+11
  2990  000B00  0E10               	movlw	16
  2991  000B02  246C               	addwf	(btemp+10)^0,w,c
  2992  000B04  6ED9               	movwf	fsr2l,c
  2993  000B06  0E00               	movlw	0
  2994  000B08  206D               	addwfc	(btemp+11)^0,w,c
  2995  000B0A  6EDA               	movwf	fsr2h,c
  2996  000B0C  C062  FFDE         	movff	btemp,postinc2
  2997  000B10  C063  FFDD         	movff	btemp+1,postdec2
  2998  000B14                     
  2999                           ;semaphore.c: 45: dispatcher(READY);
  3000  000B14  0E01               	movlw	1
  3001  000B16  6EE6               	movwf	postinc1,c
  3002  000B18  EC0A  F000         	call	_dispatcher	;wreg free
  3003  000B1C                     l2087:
  3004                           
  3005                           ;semaphore.c: 46: };semaphore.c: 48: INTCONbits.GIE = 1;;
  3006  000B1C  8EF2               	bsf	242,7,c	;volatile
  3007  000B1E                     
  3008                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3009  000B1E  52E5               	movf	postdec1,f,c
  3010  000B20  52E5               	movf	postdec1,f,c
  3011  000B22  0012               	return		;funcret
  3012  000B24                     __end_of_sem_post:
  3013                           	opt callstack 0
  3014                           
  3015 ;; *************** function _dispatcher *****************
  3016 ;; Defined at:
  3017 ;;		line 119 in file "kernel.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;  state           1  [STACK] enum E2393
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;		None
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1  [STACK] void 
  3024 ;; Registers used:
  3025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3031 ;;      Params:         0       0       0       0       0       0       0
  3032 ;;      Locals:         0       0       0       0       0       0       0
  3033 ;;      Temps:          0       0       0       0       0       0       0
  3034 ;;      Totals:         0       0       0       0       0       0       0
  3035 ;;Total ram usage:        0 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    6
  3038 ;; This function calls:
  3039 ;;		_rr_scheduler
  3040 ;; This function is called by:
  3041 ;;		_timer_zero_int
  3042 ;;		_sem_wait
  3043 ;;		_sem_post
  3044 ;;		_delay_os
  3045 ;;		_pipe_read
  3046 ;;		_pipe_write
  3047 ;; This function uses a reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text19
  3051  000014                     __ptext19:
  3052                           	opt callstack 0
  3053  000014                     _dispatcher:
  3054                           	opt callstack 14
  3055  000014                     
  3056                           ;kernel.c: 121: INTCONbits.GIE = 0;;
  3057  000014  9EF2               	bcf	242,7,c	;volatile
  3058  000016                     
  3059                           ;kernel.c: 123: { if (f_aptos.APTOS[f_aptos.task_running].task_state == RUNNING) { f_apt
      +                          os.APTOS[f_aptos.task_running].task_state = state; f_aptos.APTOS[f_aptos.task_running].W
      +                          _reg = WREG; f_aptos.APTOS[f_aptos.task_running].STATUS_reg = STATUS; f_aptos.APTOS[f_ap
      +                          to
  3060  000016  EE23  F0D5         	lfsr	2,_f_aptos+793
  3061  00001A  CFDE F06C          	movff	postinc2,btemp+10
  3062  00001E  CFDD F06D          	movff	postdec2,btemp+11
  3063  000022  0E71               	movlw	113
  3064  000024  026C               	mulwf	(btemp+10)^0,c
  3065  000026  CFF3 F06A          	movff	prodl,btemp+8
  3066  00002A  CFF4 F06B          	movff	prodh,btemp+9
  3067  00002E  026D               	mulwf	(btemp+11)^0,c
  3068  000030  50F3               	movf	prodl,w,c
  3069  000032  266B               	addwf	(btemp+9)^0,f,c
  3070  000034  0EC0               	movlw	low (_f_aptos+4)
  3071  000036  246A               	addwf	(btemp+8)^0,w,c
  3072  000038  6ED9               	movwf	fsr2l,c
  3073  00003A  0E00               	movlw	high (_f_aptos+4)
  3074  00003C  206B               	addwfc	(btemp+9)^0,w,c
  3075  00003E  6EDA               	movwf	fsr2h,c
  3076  000040  0E02               	movlw	2
  3077  000042  18DE               	xorwf	postinc2,w,c
  3078  000044  A4D8               	btfss	status,2,c
  3079  000046  EF27  F000         	goto	u89_21
  3080  00004A  EF29  F000         	goto	u89_20
  3081  00004E                     u89_21:
  3082  00004E  EF3E  F001         	goto	l2039
  3083  000052                     u89_20:
  3084  000052                     
  3085                           ;stkvar	dispatcher@state @ sp[(0)+-1]
  3086  000052  EE23  F0D5         	lfsr	2,_f_aptos+793
  3087  000056  CFDE F06C          	movff	postinc2,btemp+10
  3088  00005A  CFDD F06D          	movff	postdec2,btemp+11
  3089  00005E  0E71               	movlw	113
  3090  000060  026C               	mulwf	(btemp+10)^0,c
  3091  000062  CFF3 F06A          	movff	prodl,btemp+8
  3092  000066  CFF4 F06B          	movff	prodh,btemp+9
  3093  00006A  026D               	mulwf	(btemp+11)^0,c
  3094  00006C  50F3               	movf	prodl,w,c
  3095  00006E  266B               	addwf	(btemp+9)^0,f,c
  3096  000070  0EC0               	movlw	low (_f_aptos+4)
  3097  000072  246A               	addwf	(btemp+8)^0,w,c
  3098  000074  6ED9               	movwf	fsr2l,c
  3099  000076  0E00               	movlw	high (_f_aptos+4)
  3100  000078  206B               	addwfc	(btemp+9)^0,w,c
  3101  00007A  6EDA               	movwf	fsr2h,c
  3102  00007C  0EFF               	movlw	-1
  3103  00007E  CFE3 FFDF          	movff	plusw1,indf2
  3104  000082  EE23  F0D5         	lfsr	2,_f_aptos+793
  3105  000086  CFDE F06C          	movff	postinc2,btemp+10
  3106  00008A  CFDD F06D          	movff	postdec2,btemp+11
  3107  00008E  0E71               	movlw	113
  3108  000090  026C               	mulwf	(btemp+10)^0,c
  3109  000092  CFF3 F06A          	movff	prodl,btemp+8
  3110  000096  CFF4 F06B          	movff	prodh,btemp+9
  3111  00009A  026D               	mulwf	(btemp+11)^0,c
  3112  00009C  50F3               	movf	prodl,w,c
  3113  00009E  266B               	addwf	(btemp+9)^0,f,c
  3114  0000A0  0E26               	movlw	low (_f_aptos+106)
  3115  0000A2  246A               	addwf	(btemp+8)^0,w,c
  3116  0000A4  6ED9               	movwf	fsr2l,c
  3117  0000A6  0E01               	movlw	high (_f_aptos+106)
  3118  0000A8  206B               	addwfc	(btemp+9)^0,w,c
  3119  0000AA  6EDA               	movwf	fsr2h,c
  3120  0000AC  CFE8 FFDF          	movff	wreg,indf2	;volatile
  3121  0000B0  EE23  F0D5         	lfsr	2,_f_aptos+793
  3122  0000B4  CFDE F06C          	movff	postinc2,btemp+10
  3123  0000B8  CFDD F06D          	movff	postdec2,btemp+11
  3124  0000BC  0E71               	movlw	113
  3125  0000BE  026C               	mulwf	(btemp+10)^0,c
  3126  0000C0  CFF3 F06A          	movff	prodl,btemp+8
  3127  0000C4  CFF4 F06B          	movff	prodh,btemp+9
  3128  0000C8  026D               	mulwf	(btemp+11)^0,c
  3129  0000CA  50F3               	movf	prodl,w,c
  3130  0000CC  266B               	addwf	(btemp+9)^0,f,c
  3131  0000CE  0E27               	movlw	low (_f_aptos+107)
  3132  0000D0  246A               	addwf	(btemp+8)^0,w,c
  3133  0000D2  6ED9               	movwf	fsr2l,c
  3134  0000D4  0E01               	movlw	high (_f_aptos+107)
  3135  0000D6  206B               	addwfc	(btemp+9)^0,w,c
  3136  0000D8  6EDA               	movwf	fsr2h,c
  3137  0000DA  CFD8 FFDF          	movff	status,indf2	;volatile
  3138  0000DE  EE23  F0D5         	lfsr	2,_f_aptos+793
  3139  0000E2  CFDE F06C          	movff	postinc2,btemp+10
  3140  0000E6  CFDD F06D          	movff	postdec2,btemp+11
  3141  0000EA  0E71               	movlw	113
  3142  0000EC  026C               	mulwf	(btemp+10)^0,c
  3143  0000EE  CFF3 F06A          	movff	prodl,btemp+8
  3144  0000F2  CFF4 F06B          	movff	prodh,btemp+9
  3145  0000F6  026D               	mulwf	(btemp+11)^0,c
  3146  0000F8  50F3               	movf	prodl,w,c
  3147  0000FA  266B               	addwf	(btemp+9)^0,f,c
  3148  0000FC  0E28               	movlw	low (_f_aptos+108)
  3149  0000FE  246A               	addwf	(btemp+8)^0,w,c
  3150  000100  6ED9               	movwf	fsr2l,c
  3151  000102  0E01               	movlw	high (_f_aptos+108)
  3152  000104  206B               	addwfc	(btemp+9)^0,w,c
  3153  000106  6EDA               	movwf	fsr2h,c
  3154  000108  CFE0 FFDF          	movff	bsr,indf2	;volatile
  3155  00010C  6A03               	clrf	_stack_size^0,c
  3156  00010E  6A04               	clrf	(_stack_size+1)^0,c
  3157  000110  EF1D  F001         	goto	l2035
  3158  000114                     l2031:
  3159  000114  C003  F06C         	movff	_stack_size,btemp+10
  3160  000118  C004  F06D         	movff	_stack_size+1,btemp+11
  3161  00011C  0E03               	movlw	3
  3162  00011E  026C               	mulwf	(btemp+10)^0,c
  3163  000120  CFF3 F06A          	movff	prodl,btemp+8
  3164  000124  CFF4 F06B          	movff	prodh,btemp+9
  3165  000128  026D               	mulwf	(btemp+11)^0,c
  3166  00012A  50F3               	movf	prodl,w,c
  3167  00012C  266B               	addwf	(btemp+9)^0,f,c
  3168  00012E  EE23  F0D5         	lfsr	2,_f_aptos+793
  3169  000132  CFDE F06C          	movff	postinc2,btemp+10
  3170  000136  CFDD F06D          	movff	postdec2,btemp+11
  3171  00013A  0E71               	movlw	113
  3172  00013C  026C               	mulwf	(btemp+10)^0,c
  3173  00013E  CFF3 F068          	movff	prodl,btemp+6
  3174  000142  CFF4 F069          	movff	prodh,btemp+7
  3175  000146  026D               	mulwf	(btemp+11)^0,c
  3176  000148  50F3               	movf	prodl,w,c
  3177  00014A  2669               	addwf	(btemp+7)^0,f,c
  3178  00014C  0EBC               	movlw	low _f_aptos
  3179  00014E  6E6C               	movwf	(btemp+10)^0,c
  3180  000150  0E00               	movlw	high _f_aptos
  3181  000152  6E6D               	movwf	(btemp+11)^0,c
  3182  000154  0E07               	movlw	7
  3183  000156  266C               	addwf	(btemp+10)^0,f,c
  3184  000158  0E00               	movlw	0
  3185  00015A  226D               	addwfc	(btemp+11)^0,f,c
  3186  00015C  5068               	movf	(btemp+6)^0,w,c
  3187  00015E  266C               	addwf	(btemp+10)^0,f,c
  3188  000160  5069               	movf	(btemp+7)^0,w,c
  3189  000162  226D               	addwfc	(btemp+11)^0,f,c
  3190  000164  506A               	movf	(btemp+8)^0,w,c
  3191  000166  246C               	addwf	(btemp+10)^0,w,c
  3192  000168  6ED9               	movwf	fsr2l,c
  3193  00016A  506B               	movf	(btemp+9)^0,w,c
  3194  00016C  206D               	addwfc	(btemp+11)^0,w,c
  3195  00016E  6EDA               	movwf	fsr2h,c
  3196  000170  CFFF FFDF          	movff	tosu,indf2	;volatile
  3197  000174  C003  F06C         	movff	_stack_size,btemp+10
  3198  000178  C004  F06D         	movff	_stack_size+1,btemp+11
  3199  00017C  0E03               	movlw	3
  3200  00017E  026C               	mulwf	(btemp+10)^0,c
  3201  000180  CFF3 F06A          	movff	prodl,btemp+8
  3202  000184  CFF4 F06B          	movff	prodh,btemp+9
  3203  000188  026D               	mulwf	(btemp+11)^0,c
  3204  00018A  50F3               	movf	prodl,w,c
  3205  00018C  266B               	addwf	(btemp+9)^0,f,c
  3206  00018E  EE23  F0D5         	lfsr	2,_f_aptos+793
  3207  000192  CFDE F06C          	movff	postinc2,btemp+10
  3208  000196  CFDD F06D          	movff	postdec2,btemp+11
  3209  00019A  0E71               	movlw	113
  3210  00019C  026C               	mulwf	(btemp+10)^0,c
  3211  00019E  CFF3 F068          	movff	prodl,btemp+6
  3212  0001A2  CFF4 F069          	movff	prodh,btemp+7
  3213  0001A6  026D               	mulwf	(btemp+11)^0,c
  3214  0001A8  50F3               	movf	prodl,w,c
  3215  0001AA  2669               	addwf	(btemp+7)^0,f,c
  3216  0001AC  0EBC               	movlw	low _f_aptos
  3217  0001AE  6E6C               	movwf	(btemp+10)^0,c
  3218  0001B0  0E00               	movlw	high _f_aptos
  3219  0001B2  6E6D               	movwf	(btemp+11)^0,c
  3220  0001B4  0E09               	movlw	9
  3221  0001B6  266C               	addwf	(btemp+10)^0,f,c
  3222  0001B8  0E00               	movlw	0
  3223  0001BA  226D               	addwfc	(btemp+11)^0,f,c
  3224  0001BC  5068               	movf	(btemp+6)^0,w,c
  3225  0001BE  266C               	addwf	(btemp+10)^0,f,c
  3226  0001C0  5069               	movf	(btemp+7)^0,w,c
  3227  0001C2  226D               	addwfc	(btemp+11)^0,f,c
  3228  0001C4  506A               	movf	(btemp+8)^0,w,c
  3229  0001C6  246C               	addwf	(btemp+10)^0,w,c
  3230  0001C8  6ED9               	movwf	fsr2l,c
  3231  0001CA  506B               	movf	(btemp+9)^0,w,c
  3232  0001CC  206D               	addwfc	(btemp+11)^0,w,c
  3233  0001CE  6EDA               	movwf	fsr2h,c
  3234  0001D0  CFFE FFDF          	movff	tosh,indf2	;volatile
  3235  0001D4  C003  F06C         	movff	_stack_size,btemp+10
  3236  0001D8  C004  F06D         	movff	_stack_size+1,btemp+11
  3237  0001DC  0E03               	movlw	3
  3238  0001DE  026C               	mulwf	(btemp+10)^0,c
  3239  0001E0  CFF3 F06A          	movff	prodl,btemp+8
  3240  0001E4  CFF4 F06B          	movff	prodh,btemp+9
  3241  0001E8  026D               	mulwf	(btemp+11)^0,c
  3242  0001EA  50F3               	movf	prodl,w,c
  3243  0001EC  266B               	addwf	(btemp+9)^0,f,c
  3244  0001EE  EE23  F0D5         	lfsr	2,_f_aptos+793
  3245  0001F2  CFDE F06C          	movff	postinc2,btemp+10
  3246  0001F6  CFDD F06D          	movff	postdec2,btemp+11
  3247  0001FA  0E71               	movlw	113
  3248  0001FC  026C               	mulwf	(btemp+10)^0,c
  3249  0001FE  CFF3 F068          	movff	prodl,btemp+6
  3250  000202  CFF4 F069          	movff	prodh,btemp+7
  3251  000206  026D               	mulwf	(btemp+11)^0,c
  3252  000208  50F3               	movf	prodl,w,c
  3253  00020A  2669               	addwf	(btemp+7)^0,f,c
  3254  00020C  0EBC               	movlw	low _f_aptos
  3255  00020E  6E6C               	movwf	(btemp+10)^0,c
  3256  000210  0E00               	movlw	high _f_aptos
  3257  000212  6E6D               	movwf	(btemp+11)^0,c
  3258  000214  0E08               	movlw	8
  3259  000216  266C               	addwf	(btemp+10)^0,f,c
  3260  000218  0E00               	movlw	0
  3261  00021A  226D               	addwfc	(btemp+11)^0,f,c
  3262  00021C  5068               	movf	(btemp+6)^0,w,c
  3263  00021E  266C               	addwf	(btemp+10)^0,f,c
  3264  000220  5069               	movf	(btemp+7)^0,w,c
  3265  000222  226D               	addwfc	(btemp+11)^0,f,c
  3266  000224  506A               	movf	(btemp+8)^0,w,c
  3267  000226  246C               	addwf	(btemp+10)^0,w,c
  3268  000228  6ED9               	movwf	fsr2l,c
  3269  00022A  506B               	movf	(btemp+9)^0,w,c
  3270  00022C  206D               	addwfc	(btemp+11)^0,w,c
  3271  00022E  6EDA               	movwf	fsr2h,c
  3272  000230  CFFD FFDF          	movff	tosl,indf2	;volatile
  3273  000234  4A03               	infsnz	_stack_size^0,f,c
  3274  000236  2A04               	incf	(_stack_size+1)^0,f,c
  3275  000238  0006               	pop		;# 
  3276  00023A                     l2035:
  3277  00023A  50FC               	movf	252,w,c	;volatile
  3278  00023C  A4D8               	btfss	status,2,c
  3279  00023E  EF23  F001         	goto	u90_21
  3280  000242  EF25  F001         	goto	u90_20
  3281  000246                     u90_21:
  3282  000246  EF8A  F000         	goto	l2031
  3283  00024A                     u90_20:
  3284  00024A  EE23  F0D5         	lfsr	2,_f_aptos+793
  3285  00024E  CFDE F06C          	movff	postinc2,btemp+10
  3286  000252  CFDD F06D          	movff	postdec2,btemp+11
  3287  000256  0E71               	movlw	113
  3288  000258  026C               	mulwf	(btemp+10)^0,c
  3289  00025A  CFF3 F06A          	movff	prodl,btemp+8
  3290  00025E  CFF4 F06B          	movff	prodh,btemp+9
  3291  000262  026D               	mulwf	(btemp+11)^0,c
  3292  000264  50F3               	movf	prodl,w,c
  3293  000266  266B               	addwf	(btemp+9)^0,f,c
  3294  000268  0EC1               	movlw	low (_f_aptos+5)
  3295  00026A  246A               	addwf	(btemp+8)^0,w,c
  3296  00026C  6ED9               	movwf	fsr2l,c
  3297  00026E  0E00               	movlw	high (_f_aptos+5)
  3298  000270  206B               	addwfc	(btemp+9)^0,w,c
  3299  000272  6EDA               	movwf	fsr2h,c
  3300  000274  C003  FFDE         	movff	_stack_size,postinc2
  3301  000278  C004  FFDD         	movff	_stack_size+1,postdec2
  3302  00027C                     l2039:
  3303                           
  3304                           ;kernel.c: 126: f_aptos.task_running = rr_scheduler();
  3305  00027C  EC3A  F009         	call	_rr_scheduler	;wreg free
  3306  000280  C062  F3D5         	movff	btemp,_f_aptos+793
  3307  000284  C063  F3D6         	movff	btemp+1,_f_aptos+794
  3308  000288                     
  3309                           ;kernel.c: 132: { STKPTR = 0; if (f_aptos.APTOS[f_aptos.task_running].task_stack.stack_s
      +                          ize == 0) { asm("PUSH"); TOS = f_aptos.APTOS[f_aptos.task_running].task_ptr; } else { WR
      +                          EG = f_aptos.APTOS[f_aptos.task_running].W_reg; STATUS = f_aptos.APTOS[f_aptos.task_runn
      +                          in
  3310  000288  6AFC               	clrf	252,c	;volatile
  3311  00028A  EE23  F0D5         	lfsr	2,_f_aptos+793
  3312  00028E  CFDE F06C          	movff	postinc2,btemp+10
  3313  000292  CFDD F06D          	movff	postdec2,btemp+11
  3314  000296  0E71               	movlw	113
  3315  000298  026C               	mulwf	(btemp+10)^0,c
  3316  00029A  CFF3 F06A          	movff	prodl,btemp+8
  3317  00029E  CFF4 F06B          	movff	prodh,btemp+9
  3318  0002A2  026D               	mulwf	(btemp+11)^0,c
  3319  0002A4  50F3               	movf	prodl,w,c
  3320  0002A6  266B               	addwf	(btemp+9)^0,f,c
  3321  0002A8  0EC1               	movlw	low (_f_aptos+5)
  3322  0002AA  246A               	addwf	(btemp+8)^0,w,c
  3323  0002AC  6ED9               	movwf	fsr2l,c
  3324  0002AE  0E00               	movlw	high (_f_aptos+5)
  3325  0002B0  206B               	addwfc	(btemp+9)^0,w,c
  3326  0002B2  6EDA               	movwf	fsr2h,c
  3327  0002B4  50DE               	movf	postinc2,w,c
  3328  0002B6  10DE               	iorwf	postinc2,w,c
  3329  0002B8  A4D8               	btfss	status,2,c
  3330  0002BA  EF61  F001         	goto	u91_21
  3331  0002BE  EF63  F001         	goto	u91_20
  3332  0002C2                     u91_21:
  3333  0002C2  EF84  F001         	goto	l2049
  3334  0002C6                     u91_20:
  3335  0002C6  0005               	push		;# 
  3336  0002C8  EE23  F0D5         	lfsr	2,_f_aptos+793
  3337  0002CC  CFDE F06C          	movff	postinc2,btemp+10
  3338  0002D0  CFDD F06D          	movff	postdec2,btemp+11
  3339  0002D4  0E71               	movlw	113
  3340  0002D6  026C               	mulwf	(btemp+10)^0,c
  3341  0002D8  CFF3 F06A          	movff	prodl,btemp+8
  3342  0002DC  CFF4 F06B          	movff	prodh,btemp+9
  3343  0002E0  026D               	mulwf	(btemp+11)^0,c
  3344  0002E2  50F3               	movf	prodl,w,c
  3345  0002E4  266B               	addwf	(btemp+9)^0,f,c
  3346  0002E6  0E29               	movlw	low (_f_aptos+109)
  3347  0002E8  246A               	addwf	(btemp+8)^0,w,c
  3348  0002EA  6ED9               	movwf	fsr2l,c
  3349  0002EC  0E01               	movlw	high (_f_aptos+109)
  3350  0002EE  206B               	addwfc	(btemp+9)^0,w,c
  3351  0002F0  6EDA               	movwf	fsr2h,c
  3352  0002F2  CFDE F06C          	movff	postinc2,btemp+10
  3353  0002F6  CFDD F06D          	movff	postdec2,btemp+11
  3354  0002FA  C06C  FFFD         	movff	btemp+10,tosl	;volatile
  3355  0002FE  C06D  FFFE         	movff	btemp+11,tosh	;volatile
  3356  000302  6AFF               	clrf	255,c	;volatile
  3357  000304  EF88  F002         	goto	l2057
  3358  000308                     l2049:
  3359  000308  EE23  F0D5         	lfsr	2,_f_aptos+793
  3360  00030C  CFDE F06C          	movff	postinc2,btemp+10
  3361  000310  CFDD F06D          	movff	postdec2,btemp+11
  3362  000314  0E71               	movlw	113
  3363  000316  026C               	mulwf	(btemp+10)^0,c
  3364  000318  CFF3 F06A          	movff	prodl,btemp+8
  3365  00031C  CFF4 F06B          	movff	prodh,btemp+9
  3366  000320  026D               	mulwf	(btemp+11)^0,c
  3367  000322  50F3               	movf	prodl,w,c
  3368  000324  266B               	addwf	(btemp+9)^0,f,c
  3369  000326  0E26               	movlw	low (_f_aptos+106)
  3370  000328  246A               	addwf	(btemp+8)^0,w,c
  3371  00032A  6ED9               	movwf	fsr2l,c
  3372  00032C  0E01               	movlw	high (_f_aptos+106)
  3373  00032E  206B               	addwfc	(btemp+9)^0,w,c
  3374  000330  6EDA               	movwf	fsr2h,c
  3375  000332  50DF               	movf	indf2,w,c
  3376  000334  6E6D               	movwf	(btemp+11)^0,c
  3377  000336  506D               	movf	(btemp+11)^0,w,c
  3378  000338  EE23  F0D5         	lfsr	2,_f_aptos+793
  3379  00033C  CFDE F06C          	movff	postinc2,btemp+10
  3380  000340  CFDD F06D          	movff	postdec2,btemp+11
  3381  000344  0E71               	movlw	113
  3382  000346  026C               	mulwf	(btemp+10)^0,c
  3383  000348  CFF3 F06A          	movff	prodl,btemp+8
  3384  00034C  CFF4 F06B          	movff	prodh,btemp+9
  3385  000350  026D               	mulwf	(btemp+11)^0,c
  3386  000352  50F3               	movf	prodl,w,c
  3387  000354  266B               	addwf	(btemp+9)^0,f,c
  3388  000356  0E27               	movlw	low (_f_aptos+107)
  3389  000358  246A               	addwf	(btemp+8)^0,w,c
  3390  00035A  6ED9               	movwf	fsr2l,c
  3391  00035C  0E01               	movlw	high (_f_aptos+107)
  3392  00035E  206B               	addwfc	(btemp+9)^0,w,c
  3393  000360  6EDA               	movwf	fsr2h,c
  3394  000362  50DF               	movf	indf2,w,c
  3395  000364  6ED8               	movwf	216,c	;volatile
  3396  000366  EE23  F0D5         	lfsr	2,_f_aptos+793
  3397  00036A  CFDE F06C          	movff	postinc2,btemp+10
  3398  00036E  CFDD F06D          	movff	postdec2,btemp+11
  3399  000372  0E71               	movlw	113
  3400  000374  026C               	mulwf	(btemp+10)^0,c
  3401  000376  CFF3 F06A          	movff	prodl,btemp+8
  3402  00037A  CFF4 F06B          	movff	prodh,btemp+9
  3403  00037E  026D               	mulwf	(btemp+11)^0,c
  3404  000380  50F3               	movf	prodl,w,c
  3405  000382  266B               	addwf	(btemp+9)^0,f,c
  3406  000384  0E28               	movlw	low (_f_aptos+108)
  3407  000386  246A               	addwf	(btemp+8)^0,w,c
  3408  000388  6ED9               	movwf	fsr2l,c
  3409  00038A  0E01               	movlw	high (_f_aptos+108)
  3410  00038C  206B               	addwfc	(btemp+9)^0,w,c
  3411  00038E  6EDA               	movwf	fsr2h,c
  3412  000390  50DF               	movf	indf2,w,c
  3413  000392  6EE0               	movwf	224,c	;volatile
  3414  000394  EE23  F0D5         	lfsr	2,_f_aptos+793
  3415  000398  CFDE F06C          	movff	postinc2,btemp+10
  3416  00039C  CFDD F06D          	movff	postdec2,btemp+11
  3417  0003A0  0E71               	movlw	113
  3418  0003A2  026C               	mulwf	(btemp+10)^0,c
  3419  0003A4  CFF3 F06A          	movff	prodl,btemp+8
  3420  0003A8  CFF4 F06B          	movff	prodh,btemp+9
  3421  0003AC  026D               	mulwf	(btemp+11)^0,c
  3422  0003AE  50F3               	movf	prodl,w,c
  3423  0003B0  266B               	addwf	(btemp+9)^0,f,c
  3424  0003B2  0EC1               	movlw	low (_f_aptos+5)
  3425  0003B4  246A               	addwf	(btemp+8)^0,w,c
  3426  0003B6  6ED9               	movwf	fsr2l,c
  3427  0003B8  0E00               	movlw	high (_f_aptos+5)
  3428  0003BA  206B               	addwfc	(btemp+9)^0,w,c
  3429  0003BC  6EDA               	movwf	fsr2h,c
  3430  0003BE  CFDE F06C          	movff	postinc2,btemp+10
  3431  0003C2  CFDD F06D          	movff	postdec2,btemp+11
  3432  0003C6  0EFF               	movlw	255
  3433  0003C8  246C               	addwf	(btemp+10)^0,w,c
  3434  0003CA  6E03               	movwf	_stack_size^0,c
  3435  0003CC  0EFF               	movlw	255
  3436  0003CE  206D               	addwfc	(btemp+11)^0,w,c
  3437  0003D0  6E04               	movwf	(_stack_size+1)^0,c
  3438  0003D2  EF7F  F002         	goto	l2055
  3439  0003D6                     l121:
  3440  0003D6  0005               	push		;# 
  3441  0003D8  C003  F06C         	movff	_stack_size,btemp+10
  3442  0003DC  C004  F06D         	movff	_stack_size+1,btemp+11
  3443  0003E0  0E03               	movlw	3
  3444  0003E2  026C               	mulwf	(btemp+10)^0,c
  3445  0003E4  CFF3 F06A          	movff	prodl,btemp+8
  3446  0003E8  CFF4 F06B          	movff	prodh,btemp+9
  3447  0003EC  026D               	mulwf	(btemp+11)^0,c
  3448  0003EE  50F3               	movf	prodl,w,c
  3449  0003F0  266B               	addwf	(btemp+9)^0,f,c
  3450  0003F2  EE23  F0D5         	lfsr	2,_f_aptos+793
  3451  0003F6  CFDE F06C          	movff	postinc2,btemp+10
  3452  0003FA  CFDD F06D          	movff	postdec2,btemp+11
  3453  0003FE  0E71               	movlw	113
  3454  000400  026C               	mulwf	(btemp+10)^0,c
  3455  000402  CFF3 F068          	movff	prodl,btemp+6
  3456  000406  CFF4 F069          	movff	prodh,btemp+7
  3457  00040A  026D               	mulwf	(btemp+11)^0,c
  3458  00040C  50F3               	movf	prodl,w,c
  3459  00040E  2669               	addwf	(btemp+7)^0,f,c
  3460  000410  0EBC               	movlw	low _f_aptos
  3461  000412  6E6C               	movwf	(btemp+10)^0,c
  3462  000414  0E00               	movlw	high _f_aptos
  3463  000416  6E6D               	movwf	(btemp+11)^0,c
  3464  000418  0E08               	movlw	8
  3465  00041A  266C               	addwf	(btemp+10)^0,f,c
  3466  00041C  0E00               	movlw	0
  3467  00041E  226D               	addwfc	(btemp+11)^0,f,c
  3468  000420  5068               	movf	(btemp+6)^0,w,c
  3469  000422  266C               	addwf	(btemp+10)^0,f,c
  3470  000424  5069               	movf	(btemp+7)^0,w,c
  3471  000426  226D               	addwfc	(btemp+11)^0,f,c
  3472  000428  506A               	movf	(btemp+8)^0,w,c
  3473  00042A  246C               	addwf	(btemp+10)^0,w,c
  3474  00042C  6ED9               	movwf	fsr2l,c
  3475  00042E  506B               	movf	(btemp+9)^0,w,c
  3476  000430  206D               	addwfc	(btemp+11)^0,w,c
  3477  000432  6EDA               	movwf	fsr2h,c
  3478  000434  50DF               	movf	indf2,w,c
  3479  000436  6EFD               	movwf	253,c	;volatile
  3480  000438  C003  F06C         	movff	_stack_size,btemp+10
  3481  00043C  C004  F06D         	movff	_stack_size+1,btemp+11
  3482  000440  0E03               	movlw	3
  3483  000442  026C               	mulwf	(btemp+10)^0,c
  3484  000444  CFF3 F06A          	movff	prodl,btemp+8
  3485  000448  CFF4 F06B          	movff	prodh,btemp+9
  3486  00044C  026D               	mulwf	(btemp+11)^0,c
  3487  00044E  50F3               	movf	prodl,w,c
  3488  000450  266B               	addwf	(btemp+9)^0,f,c
  3489  000452  EE23  F0D5         	lfsr	2,_f_aptos+793
  3490  000456  CFDE F06C          	movff	postinc2,btemp+10
  3491  00045A  CFDD F06D          	movff	postdec2,btemp+11
  3492  00045E  0E71               	movlw	113
  3493  000460  026C               	mulwf	(btemp+10)^0,c
  3494  000462  CFF3 F068          	movff	prodl,btemp+6
  3495  000466  CFF4 F069          	movff	prodh,btemp+7
  3496  00046A  026D               	mulwf	(btemp+11)^0,c
  3497  00046C  50F3               	movf	prodl,w,c
  3498  00046E  2669               	addwf	(btemp+7)^0,f,c
  3499  000470  0EBC               	movlw	low _f_aptos
  3500  000472  6E6C               	movwf	(btemp+10)^0,c
  3501  000474  0E00               	movlw	high _f_aptos
  3502  000476  6E6D               	movwf	(btemp+11)^0,c
  3503  000478  0E09               	movlw	9
  3504  00047A  266C               	addwf	(btemp+10)^0,f,c
  3505  00047C  0E00               	movlw	0
  3506  00047E  226D               	addwfc	(btemp+11)^0,f,c
  3507  000480  5068               	movf	(btemp+6)^0,w,c
  3508  000482  266C               	addwf	(btemp+10)^0,f,c
  3509  000484  5069               	movf	(btemp+7)^0,w,c
  3510  000486  226D               	addwfc	(btemp+11)^0,f,c
  3511  000488  506A               	movf	(btemp+8)^0,w,c
  3512  00048A  246C               	addwf	(btemp+10)^0,w,c
  3513  00048C  6ED9               	movwf	fsr2l,c
  3514  00048E  506B               	movf	(btemp+9)^0,w,c
  3515  000490  206D               	addwfc	(btemp+11)^0,w,c
  3516  000492  6EDA               	movwf	fsr2h,c
  3517  000494  50DF               	movf	indf2,w,c
  3518  000496  6EFE               	movwf	254,c	;volatile
  3519  000498  C003  F06C         	movff	_stack_size,btemp+10
  3520  00049C  C004  F06D         	movff	_stack_size+1,btemp+11
  3521  0004A0  0E03               	movlw	3
  3522  0004A2  026C               	mulwf	(btemp+10)^0,c
  3523  0004A4  CFF3 F06A          	movff	prodl,btemp+8
  3524  0004A8  CFF4 F06B          	movff	prodh,btemp+9
  3525  0004AC  026D               	mulwf	(btemp+11)^0,c
  3526  0004AE  50F3               	movf	prodl,w,c
  3527  0004B0  266B               	addwf	(btemp+9)^0,f,c
  3528  0004B2  EE23  F0D5         	lfsr	2,_f_aptos+793
  3529  0004B6  CFDE F06C          	movff	postinc2,btemp+10
  3530  0004BA  CFDD F06D          	movff	postdec2,btemp+11
  3531  0004BE  0E71               	movlw	113
  3532  0004C0  026C               	mulwf	(btemp+10)^0,c
  3533  0004C2  CFF3 F068          	movff	prodl,btemp+6
  3534  0004C6  CFF4 F069          	movff	prodh,btemp+7
  3535  0004CA  026D               	mulwf	(btemp+11)^0,c
  3536  0004CC  50F3               	movf	prodl,w,c
  3537  0004CE  2669               	addwf	(btemp+7)^0,f,c
  3538  0004D0  0EBC               	movlw	low _f_aptos
  3539  0004D2  6E6C               	movwf	(btemp+10)^0,c
  3540  0004D4  0E00               	movlw	high _f_aptos
  3541  0004D6  6E6D               	movwf	(btemp+11)^0,c
  3542  0004D8  0E07               	movlw	7
  3543  0004DA  266C               	addwf	(btemp+10)^0,f,c
  3544  0004DC  0E00               	movlw	0
  3545  0004DE  226D               	addwfc	(btemp+11)^0,f,c
  3546  0004E0  5068               	movf	(btemp+6)^0,w,c
  3547  0004E2  266C               	addwf	(btemp+10)^0,f,c
  3548  0004E4  5069               	movf	(btemp+7)^0,w,c
  3549  0004E6  226D               	addwfc	(btemp+11)^0,f,c
  3550  0004E8  506A               	movf	(btemp+8)^0,w,c
  3551  0004EA  246C               	addwf	(btemp+10)^0,w,c
  3552  0004EC  6ED9               	movwf	fsr2l,c
  3553  0004EE  506B               	movf	(btemp+9)^0,w,c
  3554  0004F0  206D               	addwfc	(btemp+11)^0,w,c
  3555  0004F2  6EDA               	movwf	fsr2h,c
  3556  0004F4  50DF               	movf	indf2,w,c
  3557  0004F6  6EFF               	movwf	255,c	;volatile
  3558  0004F8  0603               	decf	_stack_size^0,f,c
  3559  0004FA  A0D8               	btfss	status,0,c
  3560  0004FC  0604               	decf	(_stack_size+1)^0,f,c
  3561  0004FE                     l2055:
  3562  0004FE  5003               	movf	_stack_size^0,w,c
  3563  000500  1004               	iorwf	(_stack_size+1)^0,w,c
  3564  000502  A4D8               	btfss	status,2,c
  3565  000504  EF86  F002         	goto	u92_21
  3566  000508  EF88  F002         	goto	u92_20
  3567  00050C                     u92_21:
  3568  00050C  EFEB  F001         	goto	l121
  3569  000510                     u92_20:
  3570  000510                     l2057:
  3571  000510  EE23  F0D5         	lfsr	2,_f_aptos+793
  3572  000514  CFDE F06C          	movff	postinc2,btemp+10
  3573  000518  CFDD F06D          	movff	postdec2,btemp+11
  3574  00051C  0E71               	movlw	113
  3575  00051E  026C               	mulwf	(btemp+10)^0,c
  3576  000520  CFF3 F06A          	movff	prodl,btemp+8
  3577  000524  CFF4 F06B          	movff	prodh,btemp+9
  3578  000528  026D               	mulwf	(btemp+11)^0,c
  3579  00052A  50F3               	movf	prodl,w,c
  3580  00052C  266B               	addwf	(btemp+9)^0,f,c
  3581  00052E  0EC0               	movlw	low (_f_aptos+4)
  3582  000530  246A               	addwf	(btemp+8)^0,w,c
  3583  000532  6ED9               	movwf	fsr2l,c
  3584  000534  0E00               	movlw	high (_f_aptos+4)
  3585  000536  206B               	addwfc	(btemp+9)^0,w,c
  3586  000538  6EDA               	movwf	fsr2h,c
  3587  00053A  0E02               	movlw	2
  3588  00053C  6EDF               	movwf	indf2,c
  3589  00053E                     
  3590                           ;kernel.c: 134: INTCONbits.GIE = 1;;
  3591  00053E  8EF2               	bsf	242,7,c	;volatile
  3592  000540                     
  3593                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3594  000540  52E5               	movf	postdec1,f,c
  3595  000542  0012               	return		;funcret
  3596  000544                     __end_of_dispatcher:
  3597                           	opt callstack 0
  3598                           
  3599 ;; *************** function _rr_scheduler *****************
  3600 ;; Defined at:
  3601 ;;		line 47 in file "kernel.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;		None
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;  next_task       2  [STACK] short 
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  2  [STACK] short 
  3608 ;; Registers used:
  3609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3615 ;;      Params:         0       0       0       0       0       0       0
  3616 ;;      Locals:         0       0       0       0       0       0       0
  3617 ;;      Temps:          0       0       0       0       0       0       0
  3618 ;;      Totals:         0       0       0       0       0       0       0
  3619 ;;Total ram usage:        0 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; Hardware stack levels required when called:    5
  3622 ;; This function calls:
  3623 ;;		___awmod
  3624 ;; This function is called by:
  3625 ;;		_dispatcher
  3626 ;; This function uses a reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text20
  3630  001274                     __ptext20:
  3631                           	opt callstack 0
  3632  001274                     _rr_scheduler:
  3633                           	opt callstack 0
  3634                           
  3635                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3636  001274  52E6               	movf	postinc1,f,c
  3637  001276  52E6               	movf	postinc1,f,c
  3638  001278                     
  3639                           ;kernel.c: 49: short int next_task = f_aptos.task_running;
  3640                           ;stkvar	rr_scheduler@next_task @ sp[(-2)+0]
  3641  001278  0EFE               	movlw	-2
  3642  00127A  C3D5  FFE3         	movff	_f_aptos+793,plusw1
  3643  00127E  0EFF               	movlw	-1
  3644  001280  C3D6  FFE3         	movff	_f_aptos+794,plusw1
  3645  001284                     l1983:
  3646                           
  3647                           ;kernel.c: 52: next_task = (next_task+1) % f_aptos.size;
  3648  001284  EE23  F0D3         	lfsr	2,_f_aptos+791
  3649  001288  CFDE F06C          	movff	postinc2,btemp+10
  3650  00128C  CFDD F06D          	movff	postdec2,btemp+11
  3651  001290  C06C  FFE6         	movff	btemp+10,postinc1
  3652  001294  C06D  FFE6         	movff	btemp+11,postinc1
  3653                           
  3654                           ;stkvar	rr_scheduler@next_task @ sp[(-4)+0]
  3655  001298  0EFC               	movlw	-4
  3656  00129A  50E3               	movf	plusw1,w,c
  3657  00129C  0F01               	addlw	1
  3658  00129E  6E6C               	movwf	(btemp+10)^0,c
  3659  0012A0  0EFD               	movlw	-3
  3660  0012A2  CFE3 F06D          	movff	plusw1,btemp+11
  3661  0012A6  0E00               	movlw	0
  3662  0012A8  226D               	addwfc	(btemp+11)^0,f,c
  3663  0012AA  C06C  FFE6         	movff	btemp+10,postinc1
  3664  0012AE  C06D  FFE6         	movff	btemp+11,postinc1
  3665  0012B2  EC92  F005         	call	___awmod	;wreg free
  3666                           
  3667                           ;stkvar	rr_scheduler@next_task @ sp[(-2)+0]
  3668  0012B6  0EFE               	movlw	-2
  3669  0012B8  C062  FFE3         	movff	btemp,plusw1
  3670  0012BC  0EFF               	movlw	-1
  3671  0012BE  C063  FFE3         	movff	btemp+1,plusw1
  3672  0012C2                     
  3673                           ;kernel.c: 53: } while (f_aptos.APTOS[next_task].task_state != READY);
  3674                           ;stkvar	rr_scheduler@next_task @ sp[(-2)+0]
  3675  0012C2  0EFE               	movlw	-2
  3676  0012C4  CFE3 F06C          	movff	plusw1,btemp+10
  3677  0012C8  0EFF               	movlw	-1
  3678  0012CA  CFE3 F06D          	movff	plusw1,btemp+11
  3679  0012CE  0E71               	movlw	113
  3680  0012D0  026C               	mulwf	(btemp+10)^0,c
  3681  0012D2  CFF3 F06A          	movff	prodl,btemp+8
  3682  0012D6  CFF4 F06B          	movff	prodh,btemp+9
  3683  0012DA  026D               	mulwf	(btemp+11)^0,c
  3684  0012DC  50F3               	movf	prodl,w,c
  3685  0012DE  266B               	addwf	(btemp+9)^0,f,c
  3686  0012E0  0EC0               	movlw	low (_f_aptos+4)
  3687  0012E2  246A               	addwf	(btemp+8)^0,w,c
  3688  0012E4  6ED9               	movwf	fsr2l,c
  3689  0012E6  0E00               	movlw	high (_f_aptos+4)
  3690  0012E8  206B               	addwfc	(btemp+9)^0,w,c
  3691  0012EA  6EDA               	movwf	fsr2h,c
  3692  0012EC  04DE               	decf	postinc2,w,c
  3693  0012EE  A4D8               	btfss	status,2,c
  3694  0012F0  EF7C  F009         	goto	u88_21
  3695  0012F4  EF7E  F009         	goto	u88_20
  3696  0012F8                     u88_21:
  3697  0012F8  EF42  F009         	goto	l1983
  3698  0012FC                     u88_20:
  3699  0012FC                     
  3700                           ;kernel.c: 55: return next_task;
  3701                           ;stkvar	rr_scheduler@next_task @ sp[(-2)+0]
  3702  0012FC  0EFE               	movlw	-2
  3703  0012FE  CFE3 F062          	movff	plusw1,btemp
  3704  001302  0EFF               	movlw	-1
  3705  001304  CFE3 F063          	movff	plusw1,btemp+1
  3706  001308                     
  3707                           ; _rr_scheduler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3708  001308  52E5               	movf	postdec1,f,c
  3709  00130A  52E5               	movf	postdec1,f,c
  3710  00130C  0012               	return		;funcret
  3711  00130E                     __end_of_rr_scheduler:
  3712                           	opt callstack 0
  3713                           
  3714 ;; *************** function ___awmod *****************
  3715 ;; Defined at:
  3716 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  dividend        2  [STACK] int 
  3719 ;;  divisor         2  [STACK] int 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  sign            1  [STACK] unsigned char 
  3722 ;;  counter         1  [STACK] unsigned char 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  2  [STACK] int 
  3725 ;; Registers used:
  3726 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3732 ;;      Params:         0       0       0       0       0       0       0
  3733 ;;      Locals:         0       0       0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0
  3735 ;;      Totals:         0       0       0       0       0       0       0
  3736 ;;Total ram usage:        0 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    4
  3739 ;; This function calls:
  3740 ;;		Nothing
  3741 ;; This function is called by:
  3742 ;;		_rr_scheduler
  3743 ;;		_sem_post
  3744 ;;		_seven_seg_set
  3745 ;; This function uses a reentrant model
  3746 ;;
  3747                           
  3748                           	psect	text21
  3749  000B24                     __ptext21:
  3750                           	opt callstack 0
  3751  000B24                     ___awmod:
  3752                           	opt callstack 0
  3753                           
  3754                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3755  000B24  52E6               	movf	postinc1,f,c
  3756  000B26  52E6               	movf	postinc1,f,c
  3757  000B28                     
  3758                           ;stkvar	___awmod@sign @ sp[(-2)+0]
  3759  000B28  0EFE               	movlw	-2
  3760  000B2A  6AE3               	clrf	plusw1,c
  3761  000B2C                     
  3762                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
  3763  000B2C  0EFD               	movlw	-3
  3764  000B2E  BEE3               	btfsc	plusw1,7,c
  3765  000B30  EF9E  F005         	goto	u80_20
  3766  000B34  EF9C  F005         	goto	u80_21
  3767  000B38                     u80_21:
  3768  000B38  EFA7  F005         	goto	l1937
  3769  000B3C                     u80_20:
  3770  000B3C                     
  3771                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
  3772                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
  3773  000B3C  0EFC               	movlw	-4
  3774  000B3E  6CE3               	negf	plusw1,c
  3775  000B40  0EFD               	movlw	-3
  3776  000B42  1EE3               	comf	plusw1,f,c
  3777  000B44  B0D8               	btfsc	status,0,c
  3778  000B46  2AE3               	incf	plusw1,f,c
  3779  000B48                     
  3780                           ;stkvar	___awmod@sign @ sp[(-2)+0]
  3781  000B48  0EFE               	movlw	-2
  3782  000B4A  6AE3               	clrf	plusw1,c
  3783  000B4C  2AE3               	incf	plusw1,f,c
  3784  000B4E                     l1937:
  3785                           
  3786                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
  3787  000B4E  0EFB               	movlw	-5
  3788  000B50  BEE3               	btfsc	plusw1,7,c
  3789  000B52  EFAF  F005         	goto	u81_20
  3790  000B56  EFAD  F005         	goto	u81_21
  3791  000B5A                     u81_21:
  3792  000B5A  EFB5  F005         	goto	l1941
  3793  000B5E                     u81_20:
  3794  000B5E                     
  3795                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
  3796                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
  3797  000B5E  0EFA               	movlw	-6
  3798  000B60  6CE3               	negf	plusw1,c
  3799  000B62  0EFB               	movlw	-5
  3800  000B64  1EE3               	comf	plusw1,f,c
  3801  000B66  B0D8               	btfsc	status,0,c
  3802  000B68  2AE3               	incf	plusw1,f,c
  3803  000B6A                     l1941:
  3804                           
  3805                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
  3806  000B6A  0EFA               	movlw	-6
  3807  000B6C  CFE3 F062          	movff	plusw1,btemp
  3808  000B70  0EFB               	movlw	-5
  3809  000B72  50E3               	movf	plusw1,w,c
  3810  000B74  1062               	iorwf	btemp^0,w,c
  3811  000B76  B4D8               	btfsc	status,2,c
  3812  000B78  EFC0  F005         	goto	u82_21
  3813  000B7C  EFC2  F005         	goto	u82_20
  3814  000B80                     u82_21:
  3815  000B80  EF1D  F006         	goto	l1959
  3816  000B84                     u82_20:
  3817  000B84                     
  3818                           ;stkvar	___awmod@counter @ sp[(-2)+1]
  3819  000B84  0EFF               	movlw	-1
  3820  000B86  6AE3               	clrf	plusw1,c
  3821  000B88  2AE3               	incf	plusw1,f,c
  3822  000B8A  EFD8  F005         	goto	l1949
  3823  000B8E                     l1945:
  3824                           
  3825                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
  3826  000B8E  0EFA               	movlw	-6
  3827  000B90  50E3               	movf	plusw1,w,c
  3828  000B92  90D8               	bcf	status,0,c
  3829  000B94  34E8               	rlcf	wreg,w,c
  3830  000B96  6E62               	movwf	btemp^0,c
  3831  000B98  0EFA               	movlw	-6
  3832  000B9A  C062  FFE3         	movff	btemp,plusw1
  3833  000B9E  0EFB               	movlw	-5
  3834  000BA0  50E3               	movf	plusw1,w,c
  3835  000BA2  34E8               	rlcf	wreg,w,c
  3836  000BA4  6E62               	movwf	btemp^0,c
  3837  000BA6  0EFB               	movlw	-5
  3838  000BA8  C062  FFE3         	movff	btemp,plusw1
  3839  000BAC                     
  3840                           ;stkvar	___awmod@counter @ sp[(-2)+1]
  3841  000BAC  0EFF               	movlw	-1
  3842  000BAE  2AE3               	incf	plusw1,f,c
  3843  000BB0                     l1949:
  3844                           
  3845                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
  3846  000BB0  0EFB               	movlw	-5
  3847  000BB2  AEE3               	btfss	plusw1,7,c
  3848  000BB4  EFDE  F005         	goto	u83_21
  3849  000BB8  EFE0  F005         	goto	u83_20
  3850  000BBC                     u83_21:
  3851  000BBC  EFC7  F005         	goto	l1945
  3852  000BC0                     u83_20:
  3853  000BC0                     l1951:
  3854                           
  3855                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
  3856  000BC0  0EFA               	movlw	-6
  3857  000BC2  CFE3 F06C          	movff	plusw1,btemp+10
  3858  000BC6  0EFB               	movlw	-5
  3859  000BC8  CFE3 F06D          	movff	plusw1,btemp+11
  3860                           
  3861                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
  3862  000BCC  0EFC               	movlw	-4
  3863  000BCE  CFE3 F06A          	movff	plusw1,btemp+8
  3864  000BD2  0EFD               	movlw	-3
  3865  000BD4  CFE3 F06B          	movff	plusw1,btemp+9
  3866  000BD8  506C               	movf	(btemp+10)^0,w,c
  3867  000BDA  5C6A               	subwf	(btemp+8)^0,w,c
  3868  000BDC  506D               	movf	(btemp+11)^0,w,c
  3869  000BDE  586B               	subwfb	(btemp+9)^0,w,c
  3870  000BE0  A0D8               	btfss	status,0,c
  3871  000BE2  EFF5  F005         	goto	u84_21
  3872  000BE6  EFF7  F005         	goto	u84_20
  3873  000BEA                     u84_21:
  3874  000BEA  EF09  F006         	goto	l1955
  3875  000BEE                     u84_20:
  3876  000BEE                     
  3877                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
  3878                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
  3879  000BEE  0EFC               	movlw	-4
  3880  000BF0  50E3               	movf	plusw1,w,c
  3881  000BF2  6E62               	movwf	btemp^0,c
  3882  000BF4  0EFA               	movlw	-6
  3883  000BF6  50E3               	movf	plusw1,w,c
  3884  000BF8  5E62               	subwf	btemp^0,f,c
  3885  000BFA  0EFC               	movlw	-4
  3886  000BFC  C062  FFE3         	movff	btemp,plusw1
  3887  000C00  0EFD               	movlw	-3
  3888  000C02  50E3               	movf	plusw1,w,c
  3889  000C04  6E62               	movwf	btemp^0,c
  3890  000C06  0EFB               	movlw	-5
  3891  000C08  50E3               	movf	plusw1,w,c
  3892  000C0A  5A62               	subwfb	btemp^0,f,c
  3893  000C0C  0EFD               	movlw	-3
  3894  000C0E  C062  FFE3         	movff	btemp,plusw1
  3895  000C12                     l1955:
  3896                           
  3897                           ;stkvar	___awmod@divisor @ sp[(-2)+-4]
  3898  000C12  90D8               	bcf	status,0,c
  3899  000C14  0EFB               	movlw	-5
  3900  000C16  32E3               	rrcf	plusw1,f,c
  3901  000C18  0EFA               	movlw	-6
  3902  000C1A  32E3               	rrcf	plusw1,f,c
  3903  000C1C                     
  3904                           ;stkvar	___awmod@counter @ sp[(-2)+1]
  3905  000C1C  0EFF               	movlw	-1
  3906  000C1E  50E3               	movf	plusw1,w,c
  3907  000C20  6E62               	movwf	btemp^0,c
  3908  000C22  0E01               	movlw	1
  3909  000C24  5E62               	subwf	btemp^0,f,c
  3910  000C26  0EFF               	movlw	-1
  3911  000C28  C062  FFE3         	movff	btemp,plusw1
  3912  000C2C  A4D8               	btfss	status,2,c
  3913  000C2E  EF1B  F006         	goto	u85_21
  3914  000C32  EF1D  F006         	goto	u85_20
  3915  000C36                     u85_21:
  3916  000C36  EFE0  F005         	goto	l1951
  3917  000C3A                     u85_20:
  3918  000C3A                     l1959:
  3919                           
  3920                           ;stkvar	___awmod@sign @ sp[(-2)+0]
  3921  000C3A  0EFE               	movlw	-2
  3922  000C3C  50E3               	movf	plusw1,w,c
  3923  000C3E  B4D8               	btfsc	status,2,c
  3924  000C40  EF24  F006         	goto	u86_21
  3925  000C44  EF26  F006         	goto	u86_20
  3926  000C48                     u86_21:
  3927  000C48  EF2C  F006         	goto	l1963
  3928  000C4C                     u86_20:
  3929  000C4C                     
  3930                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
  3931                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
  3932  000C4C  0EFC               	movlw	-4
  3933  000C4E  6CE3               	negf	plusw1,c
  3934  000C50  0EFD               	movlw	-3
  3935  000C52  1EE3               	comf	plusw1,f,c
  3936  000C54  B0D8               	btfsc	status,0,c
  3937  000C56  2AE3               	incf	plusw1,f,c
  3938  000C58                     l1963:
  3939                           
  3940                           ;stkvar	___awmod@dividend @ sp[(-2)+-2]
  3941  000C58  0EFC               	movlw	-4
  3942  000C5A  CFE3 F062          	movff	plusw1,btemp
  3943  000C5E  0EFD               	movlw	-3
  3944  000C60  CFE3 F063          	movff	plusw1,btemp+1
  3945  000C64                     
  3946                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  3947  000C64  0EFA               	movlw	250
  3948  000C66  26E1               	addwf	fsr1l,f,c
  3949  000C68  0EFF               	movlw	255
  3950  000C6A  22E2               	addwfc	fsr1h,f,c
  3951  000C6C  0012               	return		;funcret
  3952  000C6E                     __end_of___awmod:
  3953                           	opt callstack 0
  3954                           
  3955 ;; *************** function _task_um *****************
  3956 ;; Defined at:
  3957 ;;		line 66 in file "user_tasks.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  i               2    0        int 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1  [STACK] void 
  3964 ;; Registers used:
  3965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3971 ;;      Params:         0       0       0       0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0
  3974 ;;      Totals:         0       0       0       0       0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    8
  3978 ;; This function calls:
  3979 ;;		_sem_post
  3980 ;;		_sem_wait
  3981 ;; This function is called by:
  3982 ;;		_main
  3983 ;; This function uses a reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text22
  3987  0015A2                     __ptext22:
  3988                           	opt callstack 0
  3989  0015A2                     _task_um:
  3990                           	opt callstack 18
  3991  0015A2                     l236:
  3992  0015A2                     
  3993                           ;user_tasks.c: 68: sem_wait(&sem2);
  3994  0015A2  0E05               	movlw	low _sem2
  3995  0015A4  6EE6               	movwf	postinc1,c
  3996  0015A6  0E00               	movlw	high _sem2
  3997  0015A8  6EE6               	movwf	postinc1,c
  3998  0015AA  EC4D  F007         	call	_sem_wait	;wreg free
  3999  0015AE                     
  4000                           ;user_tasks.c: 71: };user_tasks.c: 72: BATTERY = BATTERY - 1;
  4001  0015AE  066E               	decf	_BATTERY^0,f,c
  4002  0015B0  A0D8               	btfss	status,0,c
  4003  0015B2  066F               	decf	(_BATTERY+1)^0,f,c
  4004  0015B4                     
  4005                           ;user_tasks.c: 73: PORTDbits.RD0 = ~PORTDbits.RD0;
  4006  0015B4  B083               	btfsc	131,0,c	;volatile
  4007  0015B6  EFDF  F00A         	goto	u102_21
  4008  0015BA  EFE2  F00A         	goto	u102_20
  4009  0015BE                     u102_21:
  4010  0015BE  0E01               	movlw	1
  4011  0015C0  EFE3  F00A         	goto	u102_26
  4012  0015C4                     u102_20:
  4013  0015C4  0E00               	movlw	0
  4014  0015C6                     u102_26:
  4015  0015C6  0AFF               	xorlw	255
  4016  0015C8  6E6D               	movwf	(btemp+11)^0,c
  4017  0015CA  5083               	movf	131,w,c	;volatile
  4018  0015CC  186D               	xorwf	(btemp+11)^0,w,c
  4019  0015CE  0BFE               	andlw	-2
  4020  0015D0  186D               	xorwf	(btemp+11)^0,w,c
  4021  0015D2  6E83               	movwf	131,c	;volatile
  4022  0015D4                     
  4023                           ;user_tasks.c: 74: sem_post(&sem3);
  4024  0015D4  0EA8               	movlw	low _sem3
  4025  0015D6  6EE6               	movwf	postinc1,c
  4026  0015D8  0E00               	movlw	high _sem3
  4027  0015DA  6EE6               	movwf	postinc1,c
  4028  0015DC  ECEB  F004         	call	_sem_post	;wreg free
  4029  0015E0  EFD1  F00A         	goto	l236
  4030                           
  4031                           ; _task_um: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  4032  0015E4  0012               	return		;funcret
  4033  0015E6                     __end_of_task_um:
  4034                           	opt callstack 0
  4035                           
  4036 ;; *************** function _task_dois *****************
  4037 ;; Defined at:
  4038 ;;		line 78 in file "user_tasks.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;		None
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;  i               2    0        int 
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1  [STACK] void 
  4045 ;; Registers used:
  4046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4052 ;;      Params:         0       0       0       0       0       0       0
  4053 ;;      Locals:         0       0       0       0       0       0       0
  4054 ;;      Temps:          0       0       0       0       0       0       0
  4055 ;;      Totals:         0       0       0       0       0       0       0
  4056 ;;Total ram usage:        0 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; Hardware stack levels required when called:    8
  4059 ;; This function calls:
  4060 ;;		_sem_post
  4061 ;;		_sem_wait
  4062 ;; This function is called by:
  4063 ;;		_main
  4064 ;; This function uses a reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text23
  4068  001514                     __ptext23:
  4069                           	opt callstack 0
  4070  001514                     _task_dois:
  4071                           	opt callstack 18
  4072  001514                     l244:
  4073  001514                     
  4074                           ;user_tasks.c: 80: sem_wait(&sem3);
  4075  001514  0EA8               	movlw	low _sem3
  4076  001516  6EE6               	movwf	postinc1,c
  4077  001518  0E00               	movlw	high _sem3
  4078  00151A  6EE6               	movwf	postinc1,c
  4079  00151C  EC4D  F007         	call	_sem_wait	;wreg free
  4080  001520                     
  4081                           ;user_tasks.c: 83: };user_tasks.c: 84: BATTERY = BATTERY - 1;
  4082  001520  066E               	decf	_BATTERY^0,f,c
  4083  001522  A0D8               	btfss	status,0,c
  4084  001524  066F               	decf	(_BATTERY+1)^0,f,c
  4085  001526                     
  4086                           ;user_tasks.c: 85: PORTDbits.RD2 = ~PORTDbits.RD2;
  4087  001526  B483               	btfsc	131,2,c	;volatile
  4088  001528  EF98  F00A         	goto	u103_21
  4089  00152C  EF9B  F00A         	goto	u103_20
  4090  001530                     u103_21:
  4091  001530  0E01               	movlw	1
  4092  001532  EF9C  F00A         	goto	u103_26
  4093  001536                     u103_20:
  4094  001536  0E00               	movlw	0
  4095  001538                     u103_26:
  4096  001538  0AFF               	xorlw	255
  4097  00153A  6E6D               	movwf	(btemp+11)^0,c
  4098  00153C  466D               	rlncf	(btemp+11)^0,f,c
  4099  00153E  466D               	rlncf	(btemp+11)^0,f,c
  4100  001540  5083               	movf	131,w,c	;volatile
  4101  001542  186D               	xorwf	(btemp+11)^0,w,c
  4102  001544  0BFB               	andlw	-5
  4103  001546  186D               	xorwf	(btemp+11)^0,w,c
  4104  001548  6E83               	movwf	131,c	;volatile
  4105  00154A                     
  4106                           ;user_tasks.c: 86: sem_post(&sem4);
  4107  00154A  0E94               	movlw	low _sem4
  4108  00154C  6EE6               	movwf	postinc1,c
  4109  00154E  0E00               	movlw	high _sem4
  4110  001550  6EE6               	movwf	postinc1,c
  4111  001552  ECEB  F004         	call	_sem_post	;wreg free
  4112  001556  EF8A  F00A         	goto	l244
  4113                           
  4114                           ; _task_dois: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4115  00155A  0012               	return		;funcret
  4116  00155C                     __end_of_task_dois:
  4117                           	opt callstack 0
  4118                           
  4119 ;; *************** function _task_m1 *****************
  4120 ;; Defined at:
  4121 ;;		line 109 in file "user_tasks.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  dado            1    0        unsigned char 
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1  [STACK] void 
  4128 ;; Registers used:
  4129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4135 ;;      Params:         0       0       0       0       0       0       0
  4136 ;;      Locals:         0       0       0       0       0       0       0
  4137 ;;      Temps:          0       0       0       0       0       0       0
  4138 ;;      Totals:         0       0       0       0       0       0       0
  4139 ;;Total ram usage:        0 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; Hardware stack levels required when called:    8
  4142 ;; This function calls:
  4143 ;;		_sem_post
  4144 ;;		_sem_wait
  4145 ;; This function is called by:
  4146 ;;		_main
  4147 ;; This function uses a reentrant model
  4148 ;;
  4149                           
  4150                           	psect	text24
  4151  00140A                     __ptext24:
  4152                           	opt callstack 0
  4153  00140A                     _task_m1:
  4154                           	opt callstack 18
  4155  00140A                     l258:
  4156  00140A                     
  4157                           ;user_tasks.c: 112: sem_wait(&sem4);
  4158  00140A  0E94               	movlw	low _sem4
  4159  00140C  6EE6               	movwf	postinc1,c
  4160  00140E  0E00               	movlw	high _sem4
  4161  001410  6EE6               	movwf	postinc1,c
  4162  001412  EC4D  F007         	call	_sem_wait	;wreg free
  4163  001416                     
  4164                           ;user_tasks.c: 120: if(BATTERY < 50 && BATTERY > 25){
  4165  001416  BE6F               	btfsc	(_BATTERY+1)^0,7,c
  4166  001418  EF19  F00A         	goto	u104_20
  4167  00141C  506F               	movf	(_BATTERY+1)^0,w,c
  4168  00141E  E107               	bnz	u104_21
  4169  001420  0E32               	movlw	50
  4170  001422  5C6E               	subwf	_BATTERY^0,w,c
  4171  001424  B0D8               	btfsc	status,0,c
  4172  001426  EF17  F00A         	goto	u104_21
  4173  00142A  EF19  F00A         	goto	u104_20
  4174  00142E                     u104_21:
  4175  00142E  EF2C  F00A         	goto	l259
  4176  001432                     u104_20:
  4177  001432  BE6F               	btfsc	(_BATTERY+1)^0,7,c
  4178  001434  EF25  F00A         	goto	u105_21
  4179  001438  506F               	movf	(_BATTERY+1)^0,w,c
  4180  00143A  E109               	bnz	u105_20
  4181  00143C  0E1A               	movlw	26
  4182  00143E  5C6E               	subwf	_BATTERY^0,w,c
  4183  001440  A0D8               	btfss	status,0,c
  4184  001442  EF25  F00A         	goto	u105_21
  4185  001446  EF27  F00A         	goto	u105_20
  4186  00144A                     u105_21:
  4187  00144A  EF2C  F00A         	goto	l259
  4188  00144E                     u105_20:
  4189  00144E                     
  4190                           ;user_tasks.c: 121: PORTDbits.RD4 = 1;
  4191  00144E  8883               	bsf	131,4,c	;volatile
  4192  001450                     
  4193                           ;user_tasks.c: 122: BATTERY = BATTERY + 1;
  4194  001450  4A6E               	infsnz	_BATTERY^0,f,c
  4195  001452  2A6F               	incf	(_BATTERY+1)^0,f,c
  4196                           
  4197                           ;user_tasks.c: 123: }
  4198  001454  EF2D  F00A         	goto	l2193
  4199  001458                     l259:
  4200                           
  4201                           ;user_tasks.c: 124: else {;user_tasks.c: 125: PORTDbits.RD4 = 0;
  4202  001458  9883               	bcf	131,4,c	;volatile
  4203  00145A                     l2193:
  4204                           
  4205                           ;user_tasks.c: 126: };user_tasks.c: 127: sem_post(&sem5);
  4206  00145A  0E80               	movlw	low _sem5
  4207  00145C  6EE6               	movwf	postinc1,c
  4208  00145E  0E00               	movlw	high _sem5
  4209  001460  6EE6               	movwf	postinc1,c
  4210  001462  ECEB  F004         	call	_sem_post	;wreg free
  4211  001466  EF05  F00A         	goto	l258
  4212                           
  4213                           ; _task_m1: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  4214  00146A  0012               	return		;funcret
  4215  00146C                     __end_of_task_m1:
  4216                           	opt callstack 0
  4217                           
  4218 ;; *************** function _task_m2 *****************
  4219 ;; Defined at:
  4220 ;;		line 131 in file "user_tasks.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;		None
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  dado            1    0        unsigned char 
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  1  [STACK] void 
  4227 ;; Registers used:
  4228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4234 ;;      Params:         0       0       0       0       0       0       0
  4235 ;;      Locals:         0       0       0       0       0       0       0
  4236 ;;      Temps:          0       0       0       0       0       0       0
  4237 ;;      Totals:         0       0       0       0       0       0       0
  4238 ;;Total ram usage:        0 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; Hardware stack levels required when called:    8
  4241 ;; This function calls:
  4242 ;;		_sem_post
  4243 ;;		_sem_wait
  4244 ;; This function is called by:
  4245 ;;		_main
  4246 ;; This function uses a reentrant model
  4247 ;;
  4248                           
  4249                           	psect	text25
  4250  00155C                     __ptext25:
  4251                           	opt callstack 0
  4252  00155C                     _task_m2:
  4253                           	opt callstack 18
  4254  00155C                     l266:
  4255  00155C                     
  4256                           ;user_tasks.c: 134: sem_wait(&sem5);
  4257  00155C  0E80               	movlw	low _sem5
  4258  00155E  6EE6               	movwf	postinc1,c
  4259  001560  0E00               	movlw	high _sem5
  4260  001562  6EE6               	movwf	postinc1,c
  4261  001564  EC4D  F007         	call	_sem_wait	;wreg free
  4262  001568                     
  4263                           ;user_tasks.c: 142: if(BATTERY < 25){
  4264  001568  BE6F               	btfsc	(_BATTERY+1)^0,7,c
  4265  00156A  EFC2  F00A         	goto	u106_20
  4266  00156E  506F               	movf	(_BATTERY+1)^0,w,c
  4267  001570  E107               	bnz	u106_21
  4268  001572  0E19               	movlw	25
  4269  001574  5C6E               	subwf	_BATTERY^0,w,c
  4270  001576  B0D8               	btfsc	status,0,c
  4271  001578  EFC0  F00A         	goto	u106_21
  4272  00157C  EFC2  F00A         	goto	u106_20
  4273  001580                     u106_21:
  4274  001580  EFC7  F00A         	goto	l267
  4275  001584                     u106_20:
  4276  001584                     
  4277                           ;user_tasks.c: 143: PORTDbits.RD5 = 1;
  4278  001584  8A83               	bsf	131,5,c	;volatile
  4279  001586                     
  4280                           ;user_tasks.c: 144: BATTERY = BATTERY + 1;
  4281  001586  4A6E               	infsnz	_BATTERY^0,f,c
  4282  001588  2A6F               	incf	(_BATTERY+1)^0,f,c
  4283                           
  4284                           ;user_tasks.c: 145: }
  4285  00158A  EFC8  F00A         	goto	l2203
  4286  00158E                     l267:
  4287                           
  4288                           ;user_tasks.c: 146: else {;user_tasks.c: 147: PORTDbits.RD5 = 0;
  4289  00158E  9A83               	bcf	131,5,c	;volatile
  4290  001590                     l2203:
  4291                           
  4292                           ;user_tasks.c: 148: };user_tasks.c: 149: sem_post(&sem1);
  4293  001590  0E19               	movlw	low _sem1
  4294  001592  6EE6               	movwf	postinc1,c
  4295  001594  0E00               	movlw	high _sem1
  4296  001596  6EE6               	movwf	postinc1,c
  4297  001598  ECEB  F004         	call	_sem_post	;wreg free
  4298  00159C  EFAE  F00A         	goto	l266
  4299                           
  4300                           ; _task_m2: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  4301  0015A0  0012               	return		;funcret
  4302  0015A2                     __end_of_task_m2:
  4303                           	opt callstack 0
  4304                           
  4305 ;; *************** function _task_idle *****************
  4306 ;; Defined at:
  4307 ;;		line 112 in file "kernel.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;		None
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;		None
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1  [STACK] void 
  4314 ;; Registers used:
  4315 ;;		wreg, status,2, status,0, btemp+11
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4321 ;;      Params:         0       0       0       0       0       0       0
  4322 ;;      Locals:         0       0       0       0       0       0       0
  4323 ;;      Temps:          0       0       0       0       0       0       0
  4324 ;;      Totals:         0       0       0       0       0       0       0
  4325 ;;Total ram usage:        0 bytes
  4326 ;; Hardware stack levels used:    1
  4327 ;; Hardware stack levels required when called:    4
  4328 ;; This function calls:
  4329 ;;		Nothing
  4330 ;; This function is called by:
  4331 ;;		_os_config
  4332 ;; This function uses a reentrant model
  4333 ;;
  4334                           
  4335                           	psect	text26
  4336  001666                     __ptext26:
  4337                           	opt callstack 0
  4338  001666                     _task_idle:
  4339                           	opt callstack 22
  4340  001666                     l108:
  4341  001666                     
  4342                           ;kernel.c: 114: PORTDbits.RD3 = ~PORTDbits.RD3;
  4343  001666  B683               	btfsc	131,3,c	;volatile
  4344  001668  EF38  F00B         	goto	u47_21
  4345  00166C  EF3B  F00B         	goto	u47_20
  4346  001670                     u47_21:
  4347  001670  0E01               	movlw	1
  4348  001672  EF3C  F00B         	goto	u47_26
  4349  001676                     u47_20:
  4350  001676  0E00               	movlw	0
  4351  001678                     u47_26:
  4352  001678  0AFF               	xorlw	255
  4353  00167A  6E6D               	movwf	(btemp+11)^0,c
  4354  00167C  466D               	rlncf	(btemp+11)^0,f,c
  4355  00167E  466D               	rlncf	(btemp+11)^0,f,c
  4356  001680  466D               	rlncf	(btemp+11)^0,f,c
  4357  001682  5083               	movf	131,w,c	;volatile
  4358  001684  186D               	xorwf	(btemp+11)^0,w,c
  4359  001686  0BF7               	andlw	-9
  4360  001688  186D               	xorwf	(btemp+11)^0,w,c
  4361  00168A  6E83               	movwf	131,c	;volatile
  4362  00168C                     
  4363                           ;kernel.c: 115: __nop();
  4364  00168C  F000               	nop	
  4365  00168E  EF33  F00B         	goto	l108
  4366                           
  4367                           ; _task_idle: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4368  001692  0012               	return		;funcret
  4369  001694                     __end_of_task_idle:
  4370                           	opt callstack 0
  4371                           
  4372 ;; *************** function _timer_zero_int *****************
  4373 ;; Defined at:
  4374 ;;		line 23 in file "timer_0.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  i               2    0        int 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      void 
  4381 ;; Registers used:
  4382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl, prodh
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4388 ;;      Params:         0       0       0       0       0       0       0
  4389 ;;      Locals:         0       0       0       0       0       0       0
  4390 ;;      Temps:         14       0       0       0       0       0       0
  4391 ;;      Totals:        14       0       0       0       0       0       0
  4392 ;;Total ram usage:       14 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    3
  4395 ;; This function calls:
  4396 ;;		_dispatcher
  4397 ;; This function is called by:
  4398 ;;		Interrupt level 2
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	intcode
  4403  000008                     __pintcode:
  4404                           	opt callstack 0
  4405  000008                     _timer_zero_int:
  4406                           	opt callstack 18
  4407                           
  4408                           ;incstack = 0
  4409  000008  ED91  F008         	call	int_func,f	;refresh shadow registers
  4410  00000C                     
  4411                           	psect	intcode_body
  4412  001122                     __pintcode_body:
  4413                           	opt callstack 18
  4414  001122                     int_func:
  4415                           	opt callstack 18
  4416  001122  0006               	pop		; remove dummy address from shadow register refresh
  4417  001124  CFE1 F041          	movff	fsr1l,??_timer_zero_int
  4418  001128  CFE2 F042          	movff	fsr1h,??_timer_zero_int+1
  4419  00112C  CFD9 F043          	movff	fsr2l,??_timer_zero_int+2
  4420  001130  CFDA F044          	movff	fsr2h,??_timer_zero_int+3
  4421  001134  CFF3 F045          	movff	prodl,??_timer_zero_int+4
  4422  001138  CFF4 F046          	movff	prodh,??_timer_zero_int+5
  4423  00113C  C062  F047         	movff	btemp,??_timer_zero_int+6
  4424  001140  C063  F048         	movff	btemp+1,??_timer_zero_int+7
  4425  001144  C068  F049         	movff	btemp+6,??_timer_zero_int+8
  4426  001148  C069  F04A         	movff	btemp+7,??_timer_zero_int+9
  4427  00114C  C06A  F04B         	movff	btemp+8,??_timer_zero_int+10
  4428  001150  C06B  F04C         	movff	btemp+9,??_timer_zero_int+11
  4429  001154  C06C  F04D         	movff	btemp+10,??_timer_zero_int+12
  4430  001158  C06D  F04E         	movff	btemp+11,??_timer_zero_int+13
  4431  00115C  EE15  F0E6         	lfsr	1,___inthi_sp
  4432  001160                     
  4433                           ;timer_0.c: 25: int i;;timer_0.c: 26: INTCONbits.TMR0IF = 0;
  4434  001160  94F2               	bcf	242,2,c	;volatile
  4435  001162                     
  4436                           ;timer_0.c: 27: TMR0L = 252;
  4437  001162  0EFC               	movlw	252
  4438  001164  6ED6               	movwf	214,c	;volatile
  4439  001166                     
  4440                           ;timer_0.c: 43: quantum = quantum - 1;
  4441  001166  0EFF               	movlw	255
  4442  001168  2470               	addwf	_quantum^0,w,c
  4443  00116A  6E70               	movwf	_quantum^0,c
  4444  00116C  0EFF               	movlw	255
  4445  00116E  2071               	addwfc	(_quantum+1)^0,w,c
  4446  001170  6E71               	movwf	(_quantum+1)^0,c
  4447  001172                     
  4448                           ;timer_0.c: 44: if (quantum <= 0) {
  4449  001172  BE71               	btfsc	(_quantum+1)^0,7,c
  4450  001174  EFC6  F008         	goto	i2u101_40
  4451  001178  5071               	movf	(_quantum+1)^0,w,c
  4452  00117A  E106               	bnz	i2u101_41
  4453  00117C  0470               	decf	_quantum^0,w,c
  4454  00117E  B0D8               	btfsc	status,0,c
  4455  001180  EFC4  F008         	goto	i2u101_41
  4456  001184  EFC6  F008         	goto	i2u101_40
  4457  001188                     i2u101_41:
  4458  001188  EFCE  F008         	goto	i2l165
  4459  00118C                     i2u101_40:
  4460  00118C                     
  4461                           ;timer_0.c: 45: quantum = 8;
  4462  00118C  0E00               	movlw	0
  4463  00118E  6E71               	movwf	(_quantum+1)^0,c
  4464  001190  0E08               	movlw	8
  4465  001192  6E70               	movwf	_quantum^0,c
  4466  001194                     
  4467                           ;timer_0.c: 46: dispatcher(READY);
  4468  001194  0E01               	movlw	1
  4469  001196  6EE6               	movwf	postinc1,c
  4470  001198  EC0A  F000         	call	_dispatcher	;wreg free
  4471  00119C                     i2l165:
  4472  00119C  C04E  F06D         	movff	??_timer_zero_int+13,btemp+11
  4473  0011A0  C04D  F06C         	movff	??_timer_zero_int+12,btemp+10
  4474  0011A4  C04C  F06B         	movff	??_timer_zero_int+11,btemp+9
  4475  0011A8  C04B  F06A         	movff	??_timer_zero_int+10,btemp+8
  4476  0011AC  C04A  F069         	movff	??_timer_zero_int+9,btemp+7
  4477  0011B0  C049  F068         	movff	??_timer_zero_int+8,btemp+6
  4478  0011B4  C048  F063         	movff	??_timer_zero_int+7,btemp+1
  4479  0011B8  C047  F062         	movff	??_timer_zero_int+6,btemp
  4480  0011BC  C046  FFF4         	movff	??_timer_zero_int+5,prodh
  4481  0011C0  C045  FFF3         	movff	??_timer_zero_int+4,prodl
  4482  0011C4  C044  FFDA         	movff	??_timer_zero_int+3,fsr2h
  4483  0011C8  C043  FFD9         	movff	??_timer_zero_int+2,fsr2l
  4484  0011CC  C042  FFE2         	movff	??_timer_zero_int+1,fsr1h
  4485  0011D0  C041  FFE1         	movff	??_timer_zero_int,fsr1l
  4486  0011D4  0011               	retfie		f
  4487  0011D6                     __end_of_timer_zero_int:
  4488                           	opt callstack 0
  4489  0000                     
  4490                           	psect	rparam
  4491  0000                     
  4492                           	psect	temp
  4493  000062                     btemp:
  4494                           	opt callstack 0
  4495  000062                     	ds	12
  4496  0000                     wtemp0	set	btemp
  4497  0000                     wtemp1	set	btemp+2
  4498  0000                     wtemp2	set	btemp+4
  4499  0000                     wtemp3	set	btemp+6
  4500  0000                     wtemp4	set	btemp+8
  4501  0000                     wtemp5	set	btemp+10
  4502  0000                     wtemp8	set	btemp+1
  4503  0000                     ttemp0	set	btemp
  4504  0000                     ttemp1	set	btemp+3
  4505  0000                     ttemp2	set	btemp+6
  4506  0000                     ttemp3	set	btemp+9
  4507  0000                     ttemp5	set	btemp+1
  4508  0000                     ttemp6	set	btemp+4
  4509  0000                     ttemp7	set	btemp+8
  4510  0000                     ltemp0	set	btemp
  4511  0000                     ltemp1	set	btemp+4
  4512  0000                     ltemp2	set	btemp+8
  4513  0000                     lltemp0	set	btemp
  4514                           tosu	equ	0xFFF
  4515                           tosh	equ	0xFFE
  4516                           tosl	equ	0xFFD
  4517                           stkptr	equ	0xFFC
  4518                           pclatu	equ	0xFFB
  4519                           pclath	equ	0xFFA
  4520                           pcl	equ	0xFF9
  4521                           tblptru	equ	0xFF8
  4522                           tblptrh	equ	0xFF7
  4523                           tblptrl	equ	0xFF6
  4524                           tablat	equ	0xFF5
  4525                           prodh	equ	0xFF4
  4526                           prodl	equ	0xFF3
  4527                           indf0	equ	0xFEF
  4528                           postinc0	equ	0xFEE
  4529                           postdec0	equ	0xFED
  4530                           preinc0	equ	0xFEC
  4531                           plusw0	equ	0xFEB
  4532                           fsr0h	equ	0xFEA
  4533                           fsr0l	equ	0xFE9
  4534                           wreg	equ	0xFE8
  4535                           indf1	equ	0xFE7
  4536                           postinc1	equ	0xFE6
  4537                           postdec1	equ	0xFE5
  4538                           preinc1	equ	0xFE4
  4539                           plusw1	equ	0xFE3
  4540                           fsr1h	equ	0xFE2
  4541                           fsr1l	equ	0xFE1
  4542                           bsr	equ	0xFE0
  4543                           indf2	equ	0xFDF
  4544                           postinc2	equ	0xFDE
  4545                           postdec2	equ	0xFDD
  4546                           preinc2	equ	0xFDC
  4547                           plusw2	equ	0xFDB
  4548                           fsr2h	equ	0xFDA
  4549                           fsr2l	equ	0xFD9
  4550                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         1431
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          115     33     101
    BANK0           128      0      60
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    _SRAMmerge@pSegA	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    _SRAMmerge@pSegB	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMInitHeap@pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMalloc@temp	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMalloc@pHeap	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pipe_create@p	PTR struct pipe size(2) Largest target is 10
		 -> msg2(COMRAM[10]), msg1(COMRAM[10]), 

    sem_post@sem	PTR struct sem size(2) Largest target is 20
		 -> sem5(BANK0[20]), sem4(BANK0[20]), sem3(BANK0[20]), sem2(COMRAM[20]), 
		 -> sem1(COMRAM[20]), 

    sem_wait@sem	PTR struct sem size(2) Largest target is 20
		 -> sem5(BANK0[20]), sem4(BANK0[20]), sem3(BANK0[20]), sem2(COMRAM[20]), 
		 -> sem1(COMRAM[20]), 

    sem_create@sem	PTR struct sem size(2) Largest target is 20
		 -> sem4(BANK0[20]), sem3(BANK0[20]), sem2(COMRAM[20]), sem1(COMRAM[20]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    buffer	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    create_task@f	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), task_m2(), task_m1(), task_dois(), 
		 -> task_um(), task_disp(), 

    S84tcb$task_ptr	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), task_m2(), task_m1(), task_dois(), 
		 -> task_um(), task_disp(), 

    f_aptos.APTOS.task_ptr	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), task_m2(), task_m1(), task_dois(), 
		 -> task_um(), task_disp(), 


Critical Paths under _main in COMRAM

    _user_tasks_config->_SRAMalloc
    _SRAMalloc->__SRAMmerge

Critical Paths under _task_disp in COMRAM

    None.

Critical Paths under _task_um in COMRAM

    None.

Critical Paths under _task_dois in COMRAM

    None.

Critical Paths under _task_m1 in COMRAM

    None.

Critical Paths under _task_m2 in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _task_um in COMRAM

    None.

Critical Paths under _task_dois in COMRAM

    None.

Critical Paths under _task_disp in COMRAM

    None.

Critical Paths under _task_m1 in COMRAM

    None.

Critical Paths under _task_m2 in COMRAM

    None.

Critical Paths under _timer_zero_int in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _task_disp in BANK0

    None.

Critical Paths under _task_um in BANK0

    None.

Critical Paths under _task_dois in BANK0

    None.

Critical Paths under _task_m1 in BANK0

    None.

Critical Paths under _task_m2 in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _task_um in BANK0

    None.

Critical Paths under _task_dois in BANK0

    None.

Critical Paths under _task_disp in BANK0

    None.

Critical Paths under _task_m1 in BANK0

    None.

Critical Paths under _task_m2 in BANK0

    None.

Critical Paths under _timer_zero_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _task_disp in BANK1

    None.

Critical Paths under _task_um in BANK1

    None.

Critical Paths under _task_dois in BANK1

    None.

Critical Paths under _task_m1 in BANK1

    None.

Critical Paths under _task_m2 in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _task_um in BANK1

    None.

Critical Paths under _task_dois in BANK1

    None.

Critical Paths under _task_disp in BANK1

    None.

Critical Paths under _task_m1 in BANK1

    None.

Critical Paths under _task_m2 in BANK1

    None.

Critical Paths under _timer_zero_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _task_disp in BANK2

    None.

Critical Paths under _task_um in BANK2

    None.

Critical Paths under _task_dois in BANK2

    None.

Critical Paths under _task_m1 in BANK2

    None.

Critical Paths under _task_m2 in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _task_um in BANK2

    None.

Critical Paths under _task_dois in BANK2

    None.

Critical Paths under _task_disp in BANK2

    None.

Critical Paths under _task_m1 in BANK2

    None.

Critical Paths under _task_m2 in BANK2

    None.

Critical Paths under _timer_zero_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _task_disp in BANK3

    None.

Critical Paths under _task_um in BANK3

    None.

Critical Paths under _task_dois in BANK3

    None.

Critical Paths under _task_m1 in BANK3

    None.

Critical Paths under _task_m2 in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _task_um in BANK3

    None.

Critical Paths under _task_dois in BANK3

    None.

Critical Paths under _task_disp in BANK3

    None.

Critical Paths under _task_m1 in BANK3

    None.

Critical Paths under _task_m2 in BANK3

    None.

Critical Paths under _timer_zero_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _task_disp in BANK4

    None.

Critical Paths under _task_um in BANK4

    None.

Critical Paths under _task_dois in BANK4

    None.

Critical Paths under _task_m1 in BANK4

    None.

Critical Paths under _task_m2 in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _task_um in BANK4

    None.

Critical Paths under _task_dois in BANK4

    None.

Critical Paths under _task_disp in BANK4

    None.

Critical Paths under _task_m1 in BANK4

    None.

Critical Paths under _task_m2 in BANK4

    None.

Critical Paths under _timer_zero_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _task_disp in BANK5

    None.

Critical Paths under _task_um in BANK5

    None.

Critical Paths under _task_dois in BANK5

    None.

Critical Paths under _task_m1 in BANK5

    None.

Critical Paths under _task_m2 in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _task_um in BANK5

    None.

Critical Paths under _task_dois in BANK5

    None.

Critical Paths under _task_disp in BANK5

    None.

Critical Paths under _task_m1 in BANK5

    None.

Critical Paths under _task_m2 in BANK5

    None.

Critical Paths under _timer_zero_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8212
                       _SRAMInitHeap
                        _create_task
                          _os_config
                           _start_OS
 ---------------------------------------------------------------------------------
 (1) _start_OS                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _os_config                                            0     0      0    5006
                        _conf_timer0
                        _create_task
                  _user_tasks_config
 ---------------------------------------------------------------------------------
 (2) _user_tasks_config                                    0     0      0    1905
                          _SRAMalloc
                        _pipe_create
                         _sem_create
                     _seven_seg_init
 ---------------------------------------------------------------------------------
 (3) _seven_seg_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sem_create                                           4     0      4     696
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _pipe_create                                          2     0      2     240
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _SRAMalloc                                           11     9      2     969
                                             22 COMRAM    11     9      2
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (4) __SRAMmerge                                           8     6      2     478
                                             14 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _create_task                                          8     2      6    3101
                                             14 COMRAM     8     2      6
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1667
 ---------------------------------------------------------------------------------
 (2) _conf_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SRAMInitHeap                                         4     4      0     105
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_disp                                            0     0      0    2510
                           _sem_post
                           _sem_wait
                      _seven_seg_set
 ---------------------------------------------------------------------------------
 (6) _seven_seg_set                                        6     4      2     820
                            ___awdiv
                            ___awmod
                       _update_ports
 ---------------------------------------------------------------------------------
 (7) _update_ports                                         4     0      4      89
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     217
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     650
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2    1040
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     458
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        2     2      0     436
                            ___awmod
 ---------------------------------------------------------------------------------
 (13) ___awmod                                             6     2      4     368
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_um                                              2     2      0    1736
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     650
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2    1040
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     458
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        2     2      0     436
                            ___awmod
 ---------------------------------------------------------------------------------
 (13) ___awmod                                             6     2      4     368
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_dois                                            2     2      0    1736
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     650
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2    1040
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     458
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        2     2      0     436
                            ___awmod
 ---------------------------------------------------------------------------------
 (13) ___awmod                                             6     2      4     368
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_m1                                              1     1      0    1690
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     650
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2    1040
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     458
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        2     2      0     436
                            ___awmod
 ---------------------------------------------------------------------------------
 (13) ___awmod                                             6     2      4     368
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_m2                                              1     1      0    1690
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     650
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2    1040
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     458
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        2     2      0     436
                            ___awmod
 ---------------------------------------------------------------------------------
 (13) ___awmod                                             6     2      4     368
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_um                                              2     2      0    1736
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     650
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2    1040
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     458
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        2     2      0     436
                            ___awmod
 ---------------------------------------------------------------------------------
 (13) ___awmod                                             6     2      4     368
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_dois                                            2     2      0    1736
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     650
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2    1040
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     458
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        2     2      0     436
                            ___awmod
 ---------------------------------------------------------------------------------
 (13) ___awmod                                             6     2      4     368
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_disp                                            0     0      0    2510
                           _sem_post
                           _sem_wait
                      _seven_seg_set
 ---------------------------------------------------------------------------------
 (6) _seven_seg_set                                        6     4      2     820
                            ___awdiv
                            ___awmod
                       _update_ports
 ---------------------------------------------------------------------------------
 (7) _update_ports                                         4     0      4      89
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     217
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     650
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2    1040
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     458
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        2     2      0     436
                            ___awmod
 ---------------------------------------------------------------------------------
 (13) ___awmod                                             6     2      4     368
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_m1                                              1     1      0    1690
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     650
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2    1040
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     458
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        2     2      0     436
                            ___awmod
 ---------------------------------------------------------------------------------
 (13) ___awmod                                             6     2      4     368
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _task_m2                                              1     1      0    1690
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (6) _sem_wait                                             2     0      2     650
                         _dispatcher
 ---------------------------------------------------------------------------------
 (6) _sem_post                                             2     0      2    1040
                            ___awmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     458
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        2     2      0     436
                            ___awmod
 ---------------------------------------------------------------------------------
 (13) ___awmod                                             6     2      4     368
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _timer_zero_int                                     16    16      0     458
                                              0 COMRAM    14    14      0
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1     458
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        2     2      0     436
                            ___awmod
 ---------------------------------------------------------------------------------
 (13) ___awmod                                             6     2      4     368
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SRAMInitHeap
   _create_task
     ___wmul
   _os_config
     _conf_timer0
     _create_task
       ___wmul
     _user_tasks_config
       _SRAMalloc
         __SRAMmerge
       _pipe_create
       _sem_create
       _seven_seg_init
   _start_OS

 _task_disp (ROOT)
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     _dispatcher
       _rr_scheduler
         ___awmod
   _seven_seg_set
     ___awdiv
     ___awmod
     _update_ports

 _task_um (ROOT)
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     _dispatcher
       _rr_scheduler
         ___awmod

 _task_dois (ROOT)
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     _dispatcher
       _rr_scheduler
         ___awmod

 _task_m1 (ROOT)
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     _dispatcher
       _rr_scheduler
         ___awmod

 _task_m2 (ROOT)
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     _dispatcher
       _rr_scheduler
         ___awmod

 _task_idle (ROOT)

 _task_um (ROOT)
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     _dispatcher
       _rr_scheduler
         ___awmod

 _task_dois (ROOT)
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     _dispatcher
       _rr_scheduler
         ___awmod

 _task_disp (ROOT)
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     _dispatcher
       _rr_scheduler
         ___awmod
   _seven_seg_set
     ___awdiv
     ___awmod
     _update_ports

 _task_m1 (ROOT)
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     _dispatcher
       _rr_scheduler
         ___awmod

 _task_m2 (ROOT)
   _sem_post
     ___awmod
     _dispatcher
       _rr_scheduler
         ___awmod
   _sem_wait
     _dispatcher
       _rr_scheduler
         ___awmod

 _timer_zero_int (ROOT)
   _dispatcher
     _rr_scheduler
       ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     51B      17       85.1%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      3C       5       46.9%
BITCOMRAM           73      0       0       0        0.0%
COMRAM              73     21      65       1       87.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       4       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A1      15        0.0%
DATA                 0      0     5C0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 09 18:25:33 2019

              _update_ports 0544                          l31 0E92                          l32 0E92  
                        l26 0E96                          l73 09D4                          l84 1308  
              create_task@f 0053            ??_seven_seg_init 004F               SRAMalloc@temp 005B  
                       l102 1664                         l121 03D6                         l105 16E0  
                       l123 0540                         l108 1666                         l304 1512  
                       l233 1272                         l402 06D8                         l410 139A  
                       l244 1514                         l236 15A2                         l252 1694  
                       l324 0D8A                         l333 0D86                         l350 1066  
                       l326 0CBE                         l407 1118                         l159 16CE  
                       l344 1408                         l266 155C                         l258 140A  
                       l290 0B1E                         l282 1626                         l267 158E  
                       l259 1458                         l371 16D8                         l349 0FD6  
                       l286 0F8A                         l376 0562                         l641 0854  
                       l654 0C64                         _BSR 000FE0                         u290 13C8  
                       u291 13C4                         u700 0FE4                         u701 0FE0  
                       u710 0FF2                         u711 0FEE                         u720 100A  
                       u721 1006                         u730 1024                         u731 1020  
                       u740 0C80                         u741 0C7C                         u750 0CBA  
                       u751 0CB6                         u760 0CCC                         u761 0CC8  
                       u690 0FD0                         u770 0CDE                         u691 0FCC  
                       u771 0CDA                         u780 0CFA                         u781 0CF6  
                       u870 0882                         u790 0D22                         u871 087E  
                       u791 0D1E                         u960 0DC2                         u961 0DBE  
                       u970 0DF4                         u971 0DF0                         u980 0E26  
                       u981 0E22                         u990 0E58                         u991 0E54  
                       _TOS 000FFD               create_task@id 004F                         wreg 000FE8  
            SRAMalloc@pHeap 0060                fp__task_idle 000C                fp__task_disp 000C  
              fp__task_dois 000C           SRAMInitHeap@pHeap 004F           SRAMInitHeap@count 0051  
              __CFG_WDT$OFF 000000                        l2001 1232                        l2003 1246  
                      l2011 1640                        l2021 0052                        l2005 125A  
                      l2013 165C                        l2101 0D90                        l2031 0114  
                      l2023 0082                        l2007 1266                        l2015 1660  
                      l2111 0DF8                        l2103 0D94                        l2201 1586  
                      l2041 0288                        l2033 0234                        l2025 00B0  
                      l2017 0014                        l1401 06EA                        l2009 1628  
                      l2203 1590                        l2051 03D8                        l2043 028A  
                      l2035 023A                        l2027 00DE                        l2019 0016  
                      l1411 0720                        l1403 06EE                        l2123 0E8E  
                      l2115 0E2A                        l2107 0DC6                        l2053 04F8  
                      l2045 02C6                        l2037 024A                        l2029 010C  
                      l2061 0E9A                        l1421 075C                        l1413 072C  
                      l1405 06FE                        l1261 138E                        l2055 04FE  
                      l2047 02C8                        l2039 027C                        l2071 0F80  
                      l2063 0E9C                        l1431 07DA                        l1423 077A  
                      l1415 0730                        l1407 070A                        l1327 16BE  
                      l1255 1312                        l2119 0E5C                        l2161 1514  
                      l2145 15A2                        l2057 0510                        l2049 0308  
                      l2081 0A2C                        l2073 0F88                        l2065 0EBA  
                      l1441 083C                        l1433 07FE                        l1425 077E  
                      l1417 0738                        l1409 0710                        l1361 0588  
                      l1353 0568                        l1329 16C6                        l1257 132A  
                      l2171 1520                        l2163 1520                        l2155 15AE  
                      l2147 15AE                        l2059 053E                        l2083 0A98  
                      l2075 09D6                        l2067 0EE2                        l1443 0848  
                      l1435 0802                        l1427 078E                        l1419 0752  
                      l1363 0590                        l1355 0570                        l1371 05B0  
                      l2091 1096                        l1259 135C                        l2173 1526  
                      l2165 1520                        l2157 15B4                        l2149 15AE  
                      l2085 0B14                        l2077 09D8                        l2069 0F30  
                      l1437 080C                        l1429 07AC                        l1381 0640  
                      l1373 0620                        l2245 05CA                        l1365 0598  
                      l1357 0578                        l1349 0544                        l2093 10DA  
                      l2181 16AC                        l1461 13C8                        l1623 1666  
                      l2191 1450                        l2183 140A                        l2175 154A  
                      l2159 15D4                        l2087 0B1C                        l2079 09F6  
                      l1439 082A                        l2247 0682                        l1383 0648  
                      l1375 0628                        l1367 05A0                        l1359 0580  
                      l1391 0668                        l2095 10F0                        l1463 13D4  
                      l1455 13A4                        l1625 168C                        l2193 145A  
                      l2185 1416                        l1385 0650                        l1377 0630  
                      l1369 05A8                        l2097 1102                        l2089 1070  
                      l2177 1694                        l1465 13DC                        l1457 13AC  
                      l1473 16DA                        l2195 155C                        l2187 1432  
                      l1387 0658                        l1379 0638                        l2179 16A0  
                      l1467 13EC                        l1459 13B2                        l2099 0D8C  
                      l2197 1568                        l2189 144E                        l1389 0660  
                      l1469 13F8                        l1901 0D22                        l2199 1584  
                      l1831 0FA8                        l1911 0D4A                        l1903 0D2C  
                      l1841 0FE4                        l1833 0FB4                        l1913 0D56  
                      l1921 15E6                        l1931 0B2C                        l1835 0FC0  
                      l1915 0D7A                        l1923 15E8                        l1941 0B6A  
                      l1933 0B3C                        l1861 1044                        l1853 100E  
                      l1837 0FD0                        l1829 0F90                        l1909 0D3C  
                      l1925 1624                        l1951 0BC0                        l1943 0B84  
                      l1935 0B48                        l1863 1052                        l1855 1024  
                      l1847 0FF6                        l1927 14C2                        l1961 0C4C  
                      l1953 0BEE                        l1945 0B8E                        l1937 0B4E  
                      l1929 0B28                        l1857 1030                        l1881 0C8C  
                      l1873 16D0                        l1963 0C58                        l1955 0C12  
                      l1947 0BAC                        l1939 0B5E                        l1859 1038  
                      l1883 0C94                        l1875 0C70                        l1957 0C1C  
                      l1949 0BB0                        l1981 1278                        l1973 088E  
                      l1869 1058                        l1893 0CCC                        l1885 0CA0  
                      l1877 0C80                        l1959 0C3A                        l1983 1284  
                      l1975 09C2                        l1967 085E                        l1895 0CDE  
                      l1887 0CAA                        l1991 11D6                        l1985 12C2  
                      l1977 09CC                        l1969 0882                        l1897 0CFA  
                      l1993 11F8                        l1987 12FC                        l1899 0D10  
                      l1995 11FC                        l1997 120A                        l1999 121E  
                      u1000 0E8A                        u1001 0E86                        _TOSH 000FFE  
                      _TOSL 000FFD                        _WREG 000FE8                        _TOSU 000FFF  
                      _main 0D8C                        _msg1 0037                        _msg2 002D  
                      _sem1 0019                        _sem2 0005                        _sem3 00A8  
                      _sem4 0094                        _sem5 0080                        fsr1h 000FE2  
                      fsr2h 000FDA                        fsr0l 000FE9                        indf2 000FDF  
                      fsr1l 000FE1                        fsr2l 000FD9                        btemp 0062  
                      prodh 000FF4                        prodl 000FF3                        start 000C  
           SRAMalloc@nBytes 005F                ___param_bank 000000             SRAMalloc@segLen 005D  
                     ?_main 0041             __end_of___awdiv 085E             __end_of___awmod 0C6E  
                     i2l165 119C                       u21_20 055E                       u21_21 055A  
                     u22_20 06FE                       u22_21 06FA                       u23_20 0720  
                     u23_21 071C                       u24_20 0752                       u24_21 074E  
                     u25_20 078E                       u25_21 078A                       _TMR0L 000FD6  
                     u26_20 07DA                       u26_21 07D6                       u27_20 082A  
                     u27_21 0826                       _PORTC 000F82                       u28_20 083C  
                     u28_21 0838                       u47_20 1676                       u47_21 1670  
                     u47_26 1678                       u80_20 0B3C                       u80_21 0B38  
                     u81_20 0B5E                       u81_21 0B5A                       _TRISC 000F94  
                     u82_20 0B84                       u90_20 024A                       u82_21 0B80  
                     u90_21 0246                       u83_20 0BC0                       u91_20 02C6  
                     u83_21 0BBC                       u91_21 02C2                       u84_20 0BEE  
                     u92_20 0510                       u84_21 0BEA                       u92_21 050C  
                     u85_20 0C3A                       u93_20 0EE2                       u85_21 0C36  
                     u93_21 0EDE                       u86_20 0C4C                       u94_20 0A2C  
                     u86_21 0C48                       u94_21 0A28                       u95_20 1096  
                     u95_21 1092                       u88_20 12FC                       u88_21 12F8  
                     u89_20 0052                       u89_21 004E                  __SRAMmerge 0F90  
        __size_of_SRAMalloc 011E             __end_of_task_m1 146C             __end_of_task_m2 15A2  
           __end_of_task_um 15E6                       tablat 000FF5                       ltemp0 0062  
                     ltemp1 0066                       ltemp2 006A                       plusw1 000FE3  
                     plusw2 000FDB                       ttemp0 0062                       ttemp1 0065  
                     ttemp2 0068                       ttemp3 006B                       ttemp5 0063  
                     ttemp6 0066                       ttemp7 006A                       status 000FD8  
                     wtemp0 0062                       wtemp1 0064                       wtemp2 0066  
                     wtemp3 0068                       wtemp4 006A                       wtemp5 006C  
                     wtemp8 0063             __initialization 146C                __end_of_main 0E9A  
                    ??_main 0062               __activetblptr 000002                ?_pipe_create 004F  
                    _ADCON0 000FC2                      _ADCON1 000FC1                      _ADCON2 000FC0  
                    _ADRESH 000FC4                      _ADRESL 000FC3            ??_timer_zero_int 0041  
                    u102_20 15C4                      u102_21 15BE                      u102_26 15C6  
                    u103_20 1536                      u103_21 1530                      u103_26 1538  
                    u104_20 1432                      u104_21 142E                      u105_20 144E  
                    u105_21 144A                      u106_20 1584                      u106_21 1580  
                    i2l2141 118C                      i2l2133 1160                      i2l2143 1194  
                    i2l2135 1162                      i2l2137 1166                      i2l2139 1172  
                    _STATUS 000FD8                      _STKPTR 000FFC        __size_of_create_task 0178  
      __size_of_conf_timer0 0012                      ___wmul 130E                      _buffer 0001  
         __end_of_SRAMalloc 0D8C                      clear_0 1494                      clear_1 14A6  
                    clear_2 14B2            create_task@prior 0051            __end_of_sem_wait 0F90  
          __end_of_sem_post 0B24                __pdataCOMRAM 006E                      lltemp0 0062  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
               ?__SRAMmerge 004F            __end_of_start_OS 16E2                  __accesstop 0080  
   __end_of__initialization 14B8             __CFG_PBADEN$OFF 000000               ___rparam_used 000001  
            __pcstackCOMRAM 0041                  ___inthi_sp 05E6             __SRAMmerge@uSum 0054  
                __pbssBANK0 0080               __uDynamicHeap 03D7         __size_of__SRAMmerge 00D8  
        __size_of_os_config 003E       __end_of_seven_seg_set 1122                     _BATTERY 006E  
        __size_of_task_idle 002E          __size_of_task_disp 002A          __size_of_task_dois 0048  
                _dispatcher 0014        __size_of_pipe_create 0052                     __Hparam 0000  
                   __Lparam 0000                     ___awdiv 06E2                     ___awmod 0B24  
           __size_of___wmul 0096                   ?_start_OS 0041                     _f_aptos 00BC  
                   __pcinit 146C                     __ramtop 0600               ?_SRAMInitHeap 0041  
                   __ptext0 0D8C                     __ptext1 16DA                     __ptext2 1628  
                   __ptext3 11D6                     __ptext4 16D0                     __ptext5 15E6  
                   __ptext6 14C2                     __ptext7 0C6E                     __ptext8 0F90  
                   __ptext9 085E                   _T0CONbits 000FD5                     _task_m1 140A  
                   _task_m2 155C                     _task_um 15A2                     _quantum 0070  
   __size_of_seven_seg_init 000A              __pintcode_body 1122        end_of_initialization 14B8  
         __end_of_os_config 1666                  _sem_create 15E6           __end_of_task_idle 1694  
         __end_of_task_disp 16BE           __end_of_task_dois 155C               __Lmediumconst 0000  
                   int_func 1122               sem_create@sem 004F                     postdec0 000FED  
                   postdec1 000FE5                     postdec2 000FDD                     postinc0 000FEE  
                   postinc1 000FE6                     postinc2 000FDE                  ??_start_OS 004F  
            ??_SRAMInitHeap 004F                   _PORTDbits 000F83                   _SRAMalloc 0C6E  
                _stack_size 0003                   _TRISAbits 000F92                   _TRISBbits 000F93  
                 _TRISDbits 000F95                ??__SRAMmerge 0051                  fp__task_m1 000C  
                fp__task_m2 000C                  fp__task_um 000C               ??_create_task 0055  
             ??_conf_timer0 004F          __end_of__SRAMmerge 1068              __end_of___wmul 13A4  
             __pidataCOMRAM 16E2                  ?_SRAMalloc 0057           _user_tasks_config 11D6  
       start_initialization 146C          SRAMalloc@segHeader 005E            __SRAMmerge@pSegA 004F  
          __SRAMmerge@pSegB 0052            __SRAMmerge@uSegA 0055            __SRAMmerge@uSegB 0056  
        ?_user_tasks_config 0041                 ?_sem_create 004F         ??_user_tasks_config 0062  
      sem_create@init_value 0051     __size_of_timer_zero_int 11CE         __end_of_create_task 09D6  
       __size_of_dispatcher 0530         __end_of_conf_timer0 16D0   __end_of_user_tasks_config 1274  
               __pbssBIGRAM 00BC                 __pbssCOMRAM 0001              _seven_seg_init 16D0  
      __end_of_SRAMInitHeap 140A                   __pintcode 0008           __size_of_sem_wait 00F6  
         __size_of_sem_post 014E           __size_of_start_OS 0008         __size_of_sem_create 0042  
               ??_SRAMalloc 0059               ??_pipe_create 0051      __end_of_seven_seg_init 16DA  
      __end_of_rr_scheduler 130E                 _create_task 085E      __size_of_seven_seg_set 00BA  
                 _os_config 1628                pipe_create@p 004F                    i2u101_40 118C  
                  i2u101_41 1188                 _conf_timer0 16BE                   _task_idle 1666  
                 _task_disp 1694                   _task_dois 1514  __size_of_user_tasks_config 009E  
                _ADCON0bits 000FC2             ?_seven_seg_init 0041        __end_of_update_ports 06E2  
                 copy_data0 1480         __end_of_pipe_create 1514                  ?_os_config 0041  
                  __Hrparam 0000              _timer_zero_int 0008                    __Lrparam 0000  
        __end_of_dispatcher 0544            __size_of___awdiv 017C            __size_of___awmod 014A  
             _seven_seg_set 1068            __size_of_task_m1 0062            __size_of_task_m2 0046  
     __size_of_SRAMInitHeap 0066                    __ptext10 130E                    __ptext11 16BE  
                  __ptext20 1274                    __ptext12 13A4                    __ptext21 0B24  
                  __ptext13 1694                    __ptext22 15A2                    __ptext14 1068  
                  __ptext23 1514                    __ptext15 0544                    __ptext24 140A  
                  __ptext16 06E2                    __ptext25 155C                    __ptext17 0E9A  
                  __ptext26 1666                    __ptext18 09D6                    __ptext19 0014  
          __size_of_task_um 0044                ??_sem_create 0053               __size_of_main 010E  
    __end_of_timer_zero_int 11D6                    _sem_wait 0E9A                    _sem_post 09D6  
                  _start_OS 16DA                _SRAMInitHeap 13A4          __end_of_sem_create 1628  
     __size_of_rr_scheduler 009A                  _INTCONbits 000FF2                 _pipe_create 14C2  
                  intlevel1 0000                    intlevel2 0000             ?_timer_zero_int 0041  
               ??_os_config 0062                _rr_scheduler 1274       __size_of_update_ports 019E  
              ?_create_task 004F                ?_conf_timer0 0041  
